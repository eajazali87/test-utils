<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="207" failed="0" total="1595" passed="1388">
  <reporter-output>
  </reporter-output>
  <suite name="Mobile Regression Test Suite" duration-ms="1848358" started-at="2017-02-24T17:08:17Z" finished-at="2017-02-24T17:39:06Z">
    <groups>
      <group name="origamiV2">
        <method signature="AvatarDisplayTest.avatarALTTextConfigMobileTest(java.lang.String, [Ljava.lang.String;, java.lang.String)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="avatarALTTextConfigMobileTest" class="origamiV2Tests.AvatarDisplayTest"/>
        <method signature="AvatarDisplayTest.avatarShapeMobileTest(java.lang.String)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="avatarShapeMobileTest" class="origamiV2Tests.AvatarDisplayTest"/>
        <method signature="AvatarDisplayTest.avatarSizeConfigMobileTest(java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="avatarSizeConfigMobileTest" class="origamiV2Tests.AvatarDisplayTest"/>
        <method signature="AvatarDisplayTest.avatarSizeMobileTest(java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="avatarSizeMobileTest" class="origamiV2Tests.AvatarDisplayTest"/>
        <method signature="AvatarDisplayTest.avatarURLTextConfigMobileTest(java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="avatarURLTextConfigMobileTest" class="origamiV2Tests.AvatarDisplayTest"/>
        <method signature="DrawerTest.closeDrawerMobileTest(java.lang.String, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By)[pri:0, instance:origamiV2Tests.DrawerTest@6b9651f3]" name="closeDrawerMobileTest" class="origamiV2Tests.DrawerTest"/>
        <method signature="DrawerTest.openDrawerMobileTest(java.lang.String, org.openqa.selenium.By, org.openqa.selenium.By)[pri:0, instance:origamiV2Tests.DrawerTest@6b9651f3]" name="openDrawerMobileTest" class="origamiV2Tests.DrawerTest"/>
        <method signature="DrawerTest.otherDrawerMobileTest(java.lang.String, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By)[pri:0, instance:origamiV2Tests.DrawerTest@6b9651f3]" name="otherDrawerMobileTest" class="origamiV2Tests.DrawerTest"/>
        <method signature="DrawerTest.toggleDrawerMobileTest(java.lang.String, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By)[pri:0, instance:origamiV2Tests.DrawerTest@6b9651f3]" name="toggleDrawerMobileTest" class="origamiV2Tests.DrawerTest"/>
        <method signature="DrawerTest.useAPIDrawerMobileTest(java.lang.String, org.openqa.selenium.By)[pri:0, instance:origamiV2Tests.DrawerTest@6b9651f3]" name="useAPIDrawerMobileTest" class="origamiV2Tests.DrawerTest"/>
        <method signature="DrawerTest.useDataTargetForDrawerMobileTest()[pri:0, instance:origamiV2Tests.DrawerTest@6b9651f3]" name="useDataTargetForDrawerMobileTest" class="origamiV2Tests.DrawerTest"/>
        <method signature="AppHeaderTest.addCourseItemsForCourseModeMobileTest(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="addCourseItemsForCourseModeMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.addCoursesForBasicModeMobileTest(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="addCoursesForBasicModeMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.basicModeDefaultMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="basicModeDefaultMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.courseClickableForBasicModeMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="courseClickableForBasicModeMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.courseModeDefaultMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="courseModeDefaultMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.courseNavItemClickableForCourseModeMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="courseNavItemClickableForCourseModeMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.courseNavItemEnabledMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="courseNavItemEnabledMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.helpLinkClickableForBasicModeMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="helpLinkClickableForBasicModeMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.helpLinkClickableForCourseModeMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="helpLinkClickableForCourseModeMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.helpLinkClickableForHideLoginControlsMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="helpLinkClickableForHideLoginControlsMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.helpLinkClickableForIntegModeMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="helpLinkClickableForIntegModeMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.helpLinkClickableForShowLoginControlsMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="helpLinkClickableForShowLoginControlsMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.integrationModeDefaultMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="integrationModeDefaultMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.listAllCourseNavItemsInCourseModeMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="listAllCourseNavItemsInCourseModeMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.listAllCoursesInBasicModeMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="listAllCoursesInBasicModeMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.myAccountClickableForBasicModeMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="myAccountClickableForBasicModeMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.myAccountClickableForCourseModeMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="myAccountClickableForCourseModeMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.pearsonLogoClickableForBasicModeMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="pearsonLogoClickableForBasicModeMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.pearsonLogoClickableForCourseModeMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="pearsonLogoClickableForCourseModeMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.pearsonLogoClickableForHideLoginControlsMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="pearsonLogoClickableForHideLoginControlsMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.pearsonLogoClickableForIntegModeMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="pearsonLogoClickableForIntegModeMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.pearsonLogoClickableForShowLoginControlsMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="pearsonLogoClickableForShowLoginControlsMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.removeOneCourseForBasicModeMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="removeOneCourseForBasicModeMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.removeOneCourseNavItemForCourseModeMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="removeOneCourseNavItemForCourseModeMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.signOutClickableForBasicModeMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="signOutClickableForBasicModeMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.signOutClickableForCourseModeMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="signOutClickableForCourseModeMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.signedOutModeDefaultMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="signedOutModeDefaultMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.signedOutModeHideLoginControlsMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="signedOutModeHideLoginControlsMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.signedOutModeShowLoginControlsMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="signedOutModeShowLoginControlsMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.themeForAllModesMobileTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="themeForAllModesMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.truncateCourseNameForBasicModeMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="truncateCourseNameForBasicModeMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.truncateCourseNavItemForCourseModeMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="truncateCourseNavItemForCourseModeMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.userMenuForBasicModeMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="userMenuForBasicModeMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.userMenuForCourseModeMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="userMenuForCourseModeMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.zeroCoursesForBasicModeMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="zeroCoursesForBasicModeMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.zeroCoursesForCourseModeMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="zeroCoursesForCourseModeMobileTest" class="origamiV2Tests.AppHeaderTest"/>
      </group> <!-- origamiV2 -->
      <group name="mobile-regression">
        <method signature="AvatarDisplayTest.avatarALTTextConfigMobileTest(java.lang.String, [Ljava.lang.String;, java.lang.String)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="avatarALTTextConfigMobileTest" class="origamiV2Tests.AvatarDisplayTest"/>
        <method signature="AvatarDisplayTest.avatarShapeMobileTest(java.lang.String)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="avatarShapeMobileTest" class="origamiV2Tests.AvatarDisplayTest"/>
        <method signature="AvatarDisplayTest.avatarSizeConfigMobileTest(java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="avatarSizeConfigMobileTest" class="origamiV2Tests.AvatarDisplayTest"/>
        <method signature="AvatarDisplayTest.avatarSizeMobileTest(java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="avatarSizeMobileTest" class="origamiV2Tests.AvatarDisplayTest"/>
        <method signature="AvatarDisplayTest.avatarURLTextConfigMobileTest(java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="avatarURLTextConfigMobileTest" class="origamiV2Tests.AvatarDisplayTest"/>
        <method signature="ButtonsTest.ctaButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="ctaButtonMobileTest" class="elementsTests.ButtonsTest"/>
        <method signature="ButtonsTest.defaultButtonDisabledStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="defaultButtonDisabledStateMobileTest" class="elementsTests.ButtonsTest"/>
        <method signature="ButtonsTest.defaultButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="defaultButtonMobileTest" class="elementsTests.ButtonsTest"/>
        <method signature="ButtonsTest.largeButtonDisabledStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="largeButtonDisabledStateMobileTest" class="elementsTests.ButtonsTest"/>
        <method signature="ButtonsTest.largeButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="largeButtonMobileTest" class="elementsTests.ButtonsTest"/>
        <method signature="ButtonsTest.linkButtonFocusStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="linkButtonFocusStateMobileTest" class="elementsTests.ButtonsTest"/>
        <method signature="ButtonsTest.linkButtonHoverStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="linkButtonHoverStateMobileTest" class="elementsTests.ButtonsTest"/>
        <method signature="ButtonsTest.linkButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="linkButtonMobileTest" class="elementsTests.ButtonsTest"/>
        <method signature="ButtonsTest.mixAndMatchButtonsMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="mixAndMatchButtonsMobileTest" class="elementsTests.ButtonsTest"/>
        <method signature="ButtonsTest.primaryButtonDisabledStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="primaryButtonDisabledStateMobileTest" class="elementsTests.ButtonsTest"/>
        <method signature="ButtonsTest.primaryButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="primaryButtonMobileTest" class="elementsTests.ButtonsTest"/>
        <method signature="ButtonsTest.smallButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="smallButtonMobileTest" class="elementsTests.ButtonsTest"/>
        <method signature="ButtonsTest.validButtonPropTypesMobileTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="validButtonPropTypesMobileTest" class="compoundsTests.ButtonsTest"/>
        <method signature="ButtonsTest.verifyButtonInvalidPropTypesMobileTest(java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="verifyButtonInvalidPropTypesMobileTest" class="compoundsTests.ButtonsTest"/>
        <method signature="ButtonsTest.xLargeButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="xLargeButtonMobileTest" class="elementsTests.ButtonsTest"/>
        <method signature="ContextualHelpTest.backToHelpTopicsMobileTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="backToHelpTopicsMobileTest" class="origamiV2Tests.ContextualHelpTest"/>
        <method signature="ContextualHelpTest.displayInstructorHelpTopicsMobileTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="displayInstructorHelpTopicsMobileTest" class="origamiV2Tests.ContextualHelpTest"/>
        <method signature="ContextualHelpTest.displayStudentHelpTopicsMobileTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="displayStudentHelpTopicsMobileTest" class="origamiV2Tests.ContextualHelpTest"/>
        <method signature="ContextualHelpTest.openAndThenRemoveHelpTopicsMobileTest(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="openAndThenRemoveHelpTopicsMobileTest" class="origamiV2Tests.ContextualHelpTest"/>
        <method signature="ContextualHelpTest.openSpecificHelpTopicMobileTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="openSpecificHelpTopicMobileTest" class="origamiV2Tests.ContextualHelpTest"/>
        <method signature="ContextualHelpTest.openThruAppHeaderSignedOutModeMobileTest(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="openThruAppHeaderSignedOutModeMobileTest" class="origamiV2Tests.ContextualHelpTest"/>
        <method signature="ContextualHelpTest.styleForBackToHelpTopicsButtonMobileTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="styleForBackToHelpTopicsButtonMobileTest" class="origamiV2Tests.ContextualHelpTest"/>
        <method signature="ContextualHelpTest.styleForCloseHelpMobileTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="styleForCloseHelpMobileTest" class="origamiV2Tests.ContextualHelpTest"/>
        <method signature="ContextualHelpTest.styleForContextualHelpDrawerHeaderMobileTest(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="styleForContextualHelpDrawerHeaderMobileTest" class="origamiV2Tests.ContextualHelpTest"/>
        <method signature="ContextualHelpTest.styleForContextualHelpDrawerHeaderTopicHeadingMobileTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="styleForContextualHelpDrawerHeaderTopicHeadingMobileTest" class="origamiV2Tests.ContextualHelpTest"/>
        <method signature="ContextualHelpTest.styleForContextualHelpDrawerMobileTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="styleForContextualHelpDrawerMobileTest" class="origamiV2Tests.ContextualHelpTest"/>
        <method signature="ContextualHelpTest.styleForHelpTopicExcerptParaMobileTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="styleForHelpTopicExcerptParaMobileTest" class="origamiV2Tests.ContextualHelpTest"/>
        <method signature="ContextualHelpTest.styleForHelpTopicHeadingH3MobileTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="styleForHelpTopicHeadingH3MobileTest" class="origamiV2Tests.ContextualHelpTest"/>
        <method signature="ContextualHelpTest.styleForHelpTopicLayoutMobileTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="styleForHelpTopicLayoutMobileTest" class="origamiV2Tests.ContextualHelpTest"/>
        <method signature="ContextualHelpTest.styleForRoomHeaderMobileTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="styleForRoomHeaderMobileTest" class="origamiV2Tests.ContextualHelpTest"/>
        <method signature="ContextualHelpTest.styleForSVGMobileTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="styleForSVGMobileTest" class="origamiV2Tests.ContextualHelpTest"/>
        <method signature="ContextualHelpTest.toggleContextualHelpDrawerMobileTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="toggleContextualHelpDrawerMobileTest" class="origamiV2Tests.ContextualHelpTest"/>
        <method signature="ContextualHelpTest.verifyContextualHelpDrawerMobileTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="verifyContextualHelpDrawerMobileTest" class="origamiV2Tests.ContextualHelpTest"/>
        <method signature="ContextualHelpTest.verifyContextualVisibilityImmuneToSetLanguageMobileTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="verifyContextualVisibilityImmuneToSetLanguageMobileTest" class="origamiV2Tests.ContextualHelpTest"/>
        <method signature="ContextualHelpTest.verifyOneHelpTopicDetailsMobileTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="verifyOneHelpTopicDetailsMobileTest" class="origamiV2Tests.ContextualHelpTest"/>
        <method signature="ContextualHelpTest.verifyOpenCloseStateMobileTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="verifyOpenCloseStateMobileTest" class="origamiV2Tests.ContextualHelpTest"/>
        <method signature="ContextualHelpTest.verifyXButtonMobileTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="verifyXButtonMobileTest" class="origamiV2Tests.ContextualHelpTest"/>
        <method signature="DrawerTest.closeDrawerMobileTest(java.lang.String, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By)[pri:0, instance:origamiV2Tests.DrawerTest@6b9651f3]" name="closeDrawerMobileTest" class="origamiV2Tests.DrawerTest"/>
        <method signature="DrawerTest.openDrawerMobileTest(java.lang.String, org.openqa.selenium.By, org.openqa.selenium.By)[pri:0, instance:origamiV2Tests.DrawerTest@6b9651f3]" name="openDrawerMobileTest" class="origamiV2Tests.DrawerTest"/>
        <method signature="DrawerTest.otherDrawerMobileTest(java.lang.String, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By)[pri:0, instance:origamiV2Tests.DrawerTest@6b9651f3]" name="otherDrawerMobileTest" class="origamiV2Tests.DrawerTest"/>
        <method signature="DrawerTest.toggleDrawerMobileTest(java.lang.String, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By)[pri:0, instance:origamiV2Tests.DrawerTest@6b9651f3]" name="toggleDrawerMobileTest" class="origamiV2Tests.DrawerTest"/>
        <method signature="DrawerTest.useAPIDrawerMobileTest(java.lang.String, org.openqa.selenium.By)[pri:0, instance:origamiV2Tests.DrawerTest@6b9651f3]" name="useAPIDrawerMobileTest" class="origamiV2Tests.DrawerTest"/>
        <method signature="DrawerTest.useDataTargetForDrawerMobileTest()[pri:0, instance:origamiV2Tests.DrawerTest@6b9651f3]" name="useDataTargetForDrawerMobileTest" class="origamiV2Tests.DrawerTest"/>
        <method signature="FormsTest.inputBoxMobileTest(java.lang.String, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String)[pri:0, instance:elementsTests.FormsTest@587d1d39]" name="inputBoxMobileTest" class="elementsTests.FormsTest"/>
        <method signature="FormsTest.verifyFormsMobileTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.FormsTest@587d1d39]" name="verifyFormsMobileTest" class="elementsTests.FormsTest"/>
        <method signature="GridTest.lgColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="lgColumnSpanMobileiOSTest" class="elementsTests.GridTest"/>
        <method signature="GridTest.mdAndLGColumnPaddingMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="mdAndLGColumnPaddingMobileiOSTest" class="elementsTests.GridTest"/>
        <method signature="GridTest.mdAndLGContainerPaddingMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="mdAndLGContainerPaddingMobileiOSTest" class="elementsTests.GridTest"/>
        <method signature="GridTest.mdAndLGRowMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="mdAndLGRowMobileiOSTest" class="elementsTests.GridTest"/>
        <method signature="GridTest.mdColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="mdColumnSpanMobileiOSTest" class="elementsTests.GridTest"/>
        <method signature="GridTest.smAndMDColumnPaddingMobileAndroidTest(org.openqa.selenium.ScreenOrientation, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="smAndMDColumnPaddingMobileAndroidTest" class="elementsTests.GridTest"/>
        <method signature="GridTest.smAndMDContainerPaddingMobileAndroidTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="smAndMDContainerPaddingMobileAndroidTest" class="elementsTests.GridTest"/>
        <method signature="GridTest.smColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="smColumnSpanMobileiOSTest" class="elementsTests.GridTest"/>
        <method signature="GridTest.xlgColumnPaddingMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="xlgColumnPaddingMobileiOSTest" class="elementsTests.GridTest"/>
        <method signature="GridTest.xlgColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="xlgColumnSpanMobileiOSTest" class="elementsTests.GridTest"/>
        <method signature="GridTest.xlgContainerPaddingMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="xlgContainerPaddingMobileiOSTest" class="elementsTests.GridTest"/>
        <method signature="GridTest.xlgRowMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="xlgRowMobileiOSTest" class="elementsTests.GridTest"/>
        <method signature="GridTest.xsAndSMColumnPaddingMobileAndroidTest(org.openqa.selenium.ScreenOrientation, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="xsAndSMColumnPaddingMobileAndroidTest" class="elementsTests.GridTest"/>
        <method signature="GridTest.xsAndSMColumnPaddingMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="xsAndSMColumnPaddingMobileiOSTest" class="elementsTests.GridTest"/>
        <method signature="GridTest.xsAndSMContainerPaddingMobileAndroidTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="xsAndSMContainerPaddingMobileAndroidTest" class="elementsTests.GridTest"/>
        <method signature="GridTest.xsAndSMContainerPaddingMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="xsAndSMContainerPaddingMobileiOSTest" class="elementsTests.GridTest"/>
        <method signature="GridTest.xsAndSMRowMobileAndroidTest(org.openqa.selenium.ScreenOrientation, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="xsAndSMRowMobileAndroidTest" class="elementsTests.GridTest"/>
        <method signature="GridTest.xsAndSMRowMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="xsAndSMRowMobileiOSTest" class="elementsTests.GridTest"/>
        <method signature="GridTest.xsColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="xsColumnSpanMobileiOSTest" class="elementsTests.GridTest"/>
        <method signature="IconsTest.iconChangeClassAndHrefMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.IconsTest@1d8d30f7]" name="iconChangeClassAndHrefMobileTest" class="elementsTests.IconsTest"/>
        <method signature="IconsTest.iconFillColorMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.IconsTest@1d8d30f7]" name="iconFillColorMobileTest" class="elementsTests.IconsTest"/>
        <method signature="IconsTest.iconSizeMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.IconsTest@1d8d30f7]" name="iconSizeMobileTest" class="elementsTests.IconsTest"/>
        <method signature="IconsTest.validIconPropTypesMobileTest(java.lang.String, java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.IconsTest@6b57696f]" name="validIconPropTypesMobileTest" class="compoundsTests.IconsTest"/>
        <method signature="InputsTest.basicInputActiveMobileTest(java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, [Ljava.lang.String;, java.lang.String, [Ljava.lang.String;, java.lang.String)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="basicInputActiveMobileTest" class="elementsTests.InputsTest"/>
        <method signature="InputsTest.basicInputDisabledMobileTest(java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, [Ljava.lang.String;, java.lang.String)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="basicInputDisabledMobileTest" class="elementsTests.InputsTest"/>
        <method signature="InputsTest.basicInputErrorFocusMobileTest([Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="basicInputErrorFocusMobileTest" class="elementsTests.InputsTest"/>
        <method signature="InputsTest.basicInputErrorMobileTest(java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, [Ljava.lang.String;, java.lang.String, [Ljava.lang.String;, java.lang.String)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="basicInputErrorMobileTest" class="elementsTests.InputsTest"/>
        <method signature="InputsTest.basicInputFocusMobileTest([Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, [Ljava.lang.String;, java.lang.String)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="basicInputFocusMobileTest" class="elementsTests.InputsTest"/>
        <method signature="InputsTest.basicSelectInputFocusMobileTest(java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="basicSelectInputFocusMobileTest" class="elementsTests.InputsTest"/>
        <method signature="InputsTest.basicSelectInputMobileTest(org.openqa.selenium.ScreenOrientation, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="basicSelectInputMobileTest" class="elementsTests.InputsTest"/>
        <method signature="InputsTest.checkboxDisabledStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="checkboxDisabledStateMobileTest" class="elementsTests.InputsTest"/>
        <method signature="InputsTest.checkboxFocusStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="checkboxFocusStateMobileTest" class="elementsTests.InputsTest"/>
        <method signature="InputsTest.checkboxNormalStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="checkboxNormalStateMobileTest" class="elementsTests.InputsTest"/>
        <method signature="InputsTest.inputBoxPasswordHideMobileTest(org.openqa.selenium.ScreenOrientation, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="inputBoxPasswordHideMobileTest" class="elementsTests.InputsTest"/>
        <method signature="InputsTest.inputBoxPasswordShowMobileTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="inputBoxPasswordShowMobileTest" class="elementsTests.InputsTest"/>
        <method signature="InputsTest.inputBoxShowPasswordFocusStateMobileTest()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="inputBoxShowPasswordFocusStateMobileTest" class="elementsTests.InputsTest"/>
        <method signature="InputsTest.inputBoxShowPasswordPaddingMobileTest()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="inputBoxShowPasswordPaddingMobileTest" class="elementsTests.InputsTest"/>
        <method signature="InputsTest.labelForCheckBoxMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, java.lang.String)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="labelForCheckBoxMobileTest" class="elementsTests.InputsTest"/>
        <method signature="InputsTest.multiLineTextInputMobileTest(java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="multiLineTextInputMobileTest" class="elementsTests.InputsTest"/>
        <method signature="InputsTest.multiTextInputFocusMobileTest(java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="multiTextInputFocusMobileTest" class="elementsTests.InputsTest"/>
        <method signature="InputsTest.singleLineInputUnderlineMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="singleLineInputUnderlineMobileTest" class="elementsTests.InputsTest"/>
        <method signature="InputsTest.slInputDisabledMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="slInputDisabledMobileTest" class="elementsTests.InputsTest"/>
        <method signature="InputsTest.slInputErroredMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="slInputErroredMobileTest" class="elementsTests.InputsTest"/>
        <method signature="InputsTest.slInputMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="slInputMobileTest" class="elementsTests.InputsTest"/>
        <method signature="InputsTest.slInputReadOnlyMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="slInputReadOnlyMobileTest" class="elementsTests.InputsTest"/>
        <method signature="InputsTest.svgIconForCheckBoxMobileTest(java.lang.String, org.openqa.selenium.By, org.openqa.selenium.By, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="svgIconForCheckBoxMobileTest" class="elementsTests.InputsTest"/>
        <method signature="InputsTest.textLabelInputMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="textLabelInputMobileTest" class="elementsTests.InputsTest"/>
        <method signature="PresentationStrategyTest.getMDAndLGDefaultStrategyiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="getMDAndLGDefaultStrategyiOSTest" class="elementsTests.PresentationStrategyTest"/>
        <method signature="PresentationStrategyTest.getSMAndMDDefaultStrategyAndroidMobileTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="getSMAndMDDefaultStrategyAndroidMobileTest" class="elementsTests.PresentationStrategyTest"/>
        <method signature="PresentationStrategyTest.getXLGDefaultStrategyiOSMobileTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="getXLGDefaultStrategyiOSMobileTest" class="elementsTests.PresentationStrategyTest"/>
        <method signature="PresentationStrategyTest.getXSAndSMStrategyiOSMobileTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="getXSAndSMStrategyiOSMobileTest" class="elementsTests.PresentationStrategyTest"/>
        <method signature="PresentationStrategyTest.setCenteredStrategyMobileTest()[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="setCenteredStrategyMobileTest" class="elementsTests.PresentationStrategyTest"/>
        <method signature="PresentationStrategyTest.setGridLargeCol2MobileTest(org.openqa.selenium.ScreenOrientation, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="setGridLargeCol2MobileTest" class="elementsTests.PresentationStrategyTest"/>
        <method signature="PresentationStrategyTest.setGridLargeCol3MobileTest(org.openqa.selenium.ScreenOrientation, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="setGridLargeCol3MobileTest" class="elementsTests.PresentationStrategyTest"/>
        <method signature="PresentationStrategyTest.setGridLargeCol4MobileTest(org.openqa.selenium.ScreenOrientation, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="setGridLargeCol4MobileTest" class="elementsTests.PresentationStrategyTest"/>
        <method signature="PresentationStrategyTest.setGridSmallCol2MobileTest(org.openqa.selenium.ScreenOrientation, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="setGridSmallCol2MobileTest" class="elementsTests.PresentationStrategyTest"/>
        <method signature="PresentationStrategyTest.setGridSmallCol3MobileTest(org.openqa.selenium.ScreenOrientation, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="setGridSmallCol3MobileTest" class="elementsTests.PresentationStrategyTest"/>
        <method signature="PresentationStrategyTest.setGridSmallCol4MobileTest(org.openqa.selenium.ScreenOrientation, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="setGridSmallCol4MobileTest" class="elementsTests.PresentationStrategyTest"/>
        <method signature="PresentationStrategyTest.setLargeGapSpacingMobileTest(java.lang.String, org.openqa.selenium.By, org.openqa.selenium.ScreenOrientation, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="setLargeGapSpacingMobileTest" class="elementsTests.PresentationStrategyTest"/>
        <method signature="PresentationStrategyTest.setMDandLGLeftRightStrategyMobileTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="setMDandLGLeftRightStrategyMobileTest" class="elementsTests.PresentationStrategyTest"/>
        <method signature="PresentationStrategyTest.setSmallGapSpacingMobileTest(java.lang.String, org.openqa.selenium.By, org.openqa.selenium.ScreenOrientation, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="setSmallGapSpacingMobileTest" class="elementsTests.PresentationStrategyTest"/>
        <method signature="PresentationStrategyTest.setSpacingDefaultGapMobileTest(java.lang.String, org.openqa.selenium.ScreenOrientation)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="setSpacingDefaultGapMobileTest" class="elementsTests.PresentationStrategyTest"/>
        <method signature="PresentationStrategyTest.setXLGLeftRightStrategyMobileTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="setXLGLeftRightStrategyMobileTest" class="elementsTests.PresentationStrategyTest"/>
        <method signature="PresentationStrategyTest.setXSandSMLeftRightStrategyMobileTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="setXSandSMLeftRightStrategyMobileTest" class="elementsTests.PresentationStrategyTest"/>
        <method signature="ResponsiveUtilitiesTest.iPadAirResponsiveTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="iPadAirResponsiveTest" class="elementsTests.ResponsiveUtilitiesTest"/>
        <method signature="ResponsiveUtilitiesTest.iPadProResponsiveTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="iPadProResponsiveTest" class="elementsTests.ResponsiveUtilitiesTest"/>
        <method signature="ResponsiveUtilitiesTest.iPhone5SResponsiveTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="iPhone5SResponsiveTest" class="elementsTests.ResponsiveUtilitiesTest"/>
        <method signature="ResponsiveUtilitiesTest.iPhone6PlusResponsiveTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="iPhone6PlusResponsiveTest" class="elementsTests.ResponsiveUtilitiesTest"/>
        <method signature="ResponsiveUtilitiesTest.iPhone6ResponsiveTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="iPhone6ResponsiveTest" class="elementsTests.ResponsiveUtilitiesTest"/>
        <method signature="ResponsiveUtilitiesTest.nexus4ResponsiveTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="nexus4ResponsiveTest" class="elementsTests.ResponsiveUtilitiesTest"/>
        <method signature="ResponsiveUtilitiesTest.nexus7ResponsiveTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="nexus7ResponsiveTest" class="elementsTests.ResponsiveUtilitiesTest"/>
        <method signature="SliderTest.iOSClickKnobMobileTest()[pri:0, instance:origamiV2Tests.SliderTest@23d2a7e8]" name="iOSClickKnobMobileTest" class="origamiV2Tests.SliderTest"/>
        <method signature="SliderTest.sliderLabelMobileTest()[pri:0, instance:origamiV2Tests.SliderTest@23d2a7e8]" name="sliderLabelMobileTest" class="origamiV2Tests.SliderTest"/>
        <method signature="TemplatesTest.lgTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="lgTemplateMobileiOSTest" class="elementsTests.TemplatesTest"/>
        <method signature="TemplatesTest.mdTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="mdTemplateMobileAndroidTest" class="elementsTests.TemplatesTest"/>
        <method signature="TemplatesTest.mdTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="mdTemplateMobileiOSTest" class="elementsTests.TemplatesTest"/>
        <method signature="TemplatesTest.smTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="smTemplateMobileAndroidTest" class="elementsTests.TemplatesTest"/>
        <method signature="TemplatesTest.smTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="smTemplateMobileiOSTest" class="elementsTests.TemplatesTest"/>
        <method signature="TemplatesTest.xlTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="xlTemplateMobileiOSTest" class="elementsTests.TemplatesTest"/>
        <method signature="TemplatesTest.xsTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="xsTemplateMobileiOSTest" class="elementsTests.TemplatesTest"/>
        <method signature="TextModalTest.cancelButtonMobileTest()[pri:0, instance:origamiV2Tests.TextModalTest@687080dc]" name="cancelButtonMobileTest" class="origamiV2Tests.TextModalTest"/>
        <method signature="TextModalTest.clickButtonMobileTest()[pri:0, instance:origamiV2Tests.TextModalTest@687080dc]" name="clickButtonMobileTest" class="origamiV2Tests.TextModalTest"/>
        <method signature="TextModalTest.modalTitleMobileTest(org.openqa.selenium.ScreenOrientation, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.TextModalTest@687080dc]" name="modalTitleMobileTest" class="origamiV2Tests.TextModalTest"/>
        <method signature="TextModalTest.successButtonMobileTest()[pri:0, instance:origamiV2Tests.TextModalTest@687080dc]" name="successButtonMobileTest" class="origamiV2Tests.TextModalTest"/>
        <method signature="TextModalTest.xButtonMobileTest(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.TextModalTest@687080dc]" name="xButtonMobileTest" class="origamiV2Tests.TextModalTest"/>
        <method signature="TypographyTest.abbrMobileTest()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="abbrMobileTest" class="elementsTests.TypographyTest"/>
        <method signature="TypographyTest.codeMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="codeMobileTest" class="elementsTests.TypographyTest"/>
        <method signature="TypographyTest.copyMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="copyMobileTest" class="elementsTests.TypographyTest"/>
        <method signature="TypographyTest.delAndInsMobileTest(org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="delAndInsMobileTest" class="elementsTests.TypographyTest"/>
        <method signature="TypographyTest.h1h2h3h4h5MobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="h1h2h3h4h5MobileTest" class="elementsTests.TypographyTest"/>
        <method signature="TypographyTest.headerMobileTest()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="headerMobileTest" class="elementsTests.TypographyTest"/>
        <method signature="TypographyTest.headingOrderedListMobileTest(java.lang.String, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="headingOrderedListMobileTest" class="elementsTests.TypographyTest"/>
        <method signature="TypographyTest.labelMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="labelMobileTest" class="elementsTests.TypographyTest"/>
        <method signature="TypographyTest.leadMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="leadMobileTest" class="elementsTests.TypographyTest"/>
        <method signature="TypographyTest.linkStateMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, java.lang.String)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="linkStateMobileTest" class="elementsTests.TypographyTest"/>
        <method signature="TypographyTest.listMobileTest()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="listMobileTest" class="elementsTests.TypographyTest"/>
        <method signature="TypographyTest.markMobileTest()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="markMobileTest" class="elementsTests.TypographyTest"/>
        <method signature="TypographyTest.orderedListMobileTest()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="orderedListMobileTest" class="elementsTests.TypographyTest"/>
        <method signature="TypographyTest.pageTitleMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="pageTitleMobileTest" class="elementsTests.TypographyTest"/>
        <method signature="TypographyTest.paraMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="paraMobileTest" class="elementsTests.TypographyTest"/>
        <method signature="TypographyTest.sectionTitleMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="sectionTitleMobileTest" class="elementsTests.TypographyTest"/>
        <method signature="TypographyTest.strongMobileTest()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="strongMobileTest" class="elementsTests.TypographyTest"/>
        <method signature="TypographyTest.subtitleWithh1h2h3h4h5MobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="subtitleWithh1h2h3h4h5MobileTest" class="elementsTests.TypographyTest"/>
        <method signature="TypographyTest.superAndSubScriptTagMobileTest(org.openqa.selenium.By, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="superAndSubScriptTagMobileTest" class="elementsTests.TypographyTest"/>
        <method signature="TypographyTest.unorderedListMobileTest()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="unorderedListMobileTest" class="elementsTests.TypographyTest"/>
        <method signature="TypographyTest.unstyledListMobileTest()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="unstyledListMobileTest" class="elementsTests.TypographyTest"/>
        <method signature="AppHeaderTest.addCourseItemsForCourseModeMobileTest(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="addCourseItemsForCourseModeMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.addCoursesForBasicModeMobileTest(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="addCoursesForBasicModeMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.basicModeDefaultMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="basicModeDefaultMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.courseClickableForBasicModeMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="courseClickableForBasicModeMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.courseModeDefaultMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="courseModeDefaultMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.courseNavItemClickableForCourseModeMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="courseNavItemClickableForCourseModeMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.courseNavItemEnabledMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="courseNavItemEnabledMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.helpLinkClickableForBasicModeMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="helpLinkClickableForBasicModeMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.helpLinkClickableForCourseModeMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="helpLinkClickableForCourseModeMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.helpLinkClickableForHideLoginControlsMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="helpLinkClickableForHideLoginControlsMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.helpLinkClickableForIntegModeMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="helpLinkClickableForIntegModeMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.helpLinkClickableForShowLoginControlsMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="helpLinkClickableForShowLoginControlsMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.integrationModeDefaultMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="integrationModeDefaultMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.listAllCourseNavItemsInCourseModeMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="listAllCourseNavItemsInCourseModeMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.listAllCoursesInBasicModeMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="listAllCoursesInBasicModeMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.myAccountClickableForBasicModeMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="myAccountClickableForBasicModeMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.myAccountClickableForCourseModeMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="myAccountClickableForCourseModeMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.pearsonLogoClickableForBasicModeMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="pearsonLogoClickableForBasicModeMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.pearsonLogoClickableForCourseModeMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="pearsonLogoClickableForCourseModeMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.pearsonLogoClickableForHideLoginControlsMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="pearsonLogoClickableForHideLoginControlsMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.pearsonLogoClickableForIntegModeMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="pearsonLogoClickableForIntegModeMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.pearsonLogoClickableForShowLoginControlsMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="pearsonLogoClickableForShowLoginControlsMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.removeOneCourseForBasicModeMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="removeOneCourseForBasicModeMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.removeOneCourseNavItemForCourseModeMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="removeOneCourseNavItemForCourseModeMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.signOutClickableForBasicModeMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="signOutClickableForBasicModeMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.signOutClickableForCourseModeMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="signOutClickableForCourseModeMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.signedOutModeDefaultMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="signedOutModeDefaultMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.signedOutModeHideLoginControlsMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="signedOutModeHideLoginControlsMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.signedOutModeShowLoginControlsMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="signedOutModeShowLoginControlsMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.themeForAllModesMobileTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="themeForAllModesMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.truncateCourseNameForBasicModeMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="truncateCourseNameForBasicModeMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.truncateCourseNavItemForCourseModeMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="truncateCourseNavItemForCourseModeMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.userMenuForBasicModeMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="userMenuForBasicModeMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.userMenuForCourseModeMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="userMenuForCourseModeMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.zeroCoursesForBasicModeMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="zeroCoursesForBasicModeMobileTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.zeroCoursesForCourseModeMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="zeroCoursesForCourseModeMobileTest" class="origamiV2Tests.AppHeaderTest"/>
      </group> <!-- mobile-regression -->
    </groups>
    <test name="Elements and Origami Tests" duration-ms="1429997" started-at="2017-02-24T17:08:17Z" finished-at="2017-02-24T17:32:07Z">
      <class name="elementsTests.ResponsiveUtilitiesTest">
        <test-method status="PASS" signature="setUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="setUp" is-config="true" duration-ms="126106" started-at="2017-02-24T17:08:17Z" finished-at="2017-02-24T17:10:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sauce]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[off]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OS X 10.11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[54.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[iOS]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[iPhone 6 Plus]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[9.3]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[safari]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[1.5.3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="beforeClass(java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="beforeClass" is-config="true" duration-ms="1" started-at="2017-02-24T17:10:23Z" finished-at="2017-02-24T17:10:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sauce]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 6 Plus]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:10:23Z" finished-at="2017-02-24T17:10:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ResponsiveUtilitiesTest.iPadAirResponsiveTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="iPadAirResponsiveTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="iPadAirResponsiveTest" duration-ms="0" started-at="2017-02-24T17:10:23Z" data-provider="iPadAirTestData" finished-at="2017-02-24T17:10:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: md-visible]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[md-visible]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[rgba(0, 0, 255, 1)]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[block]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.ResponsiveUtilitiesTest.iPadAirResponsiveTest(ResponsiveUtilitiesTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- iPadAirResponsiveTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:10:23Z" finished-at="2017-02-24T17:10:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:10:23Z" finished-at="2017-02-24T17:10:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ResponsiveUtilitiesTest.iPadAirResponsiveTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:10:23Z" finished-at="2017-02-24T17:10:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="iPadAirResponsiveTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="iPadAirResponsiveTest" duration-ms="0" started-at="2017-02-24T17:10:23Z" data-provider="iPadAirTestData" finished-at="2017-02-24T17:10:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: lg-hidden]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[lg-hidden]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[rgba(128, 128, 128, 1)]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[inline-block]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.ResponsiveUtilitiesTest.iPadAirResponsiveTest(ResponsiveUtilitiesTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- iPadAirResponsiveTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:10:23Z" finished-at="2017-02-24T17:10:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ResponsiveUtilitiesTest.iPadAirResponsiveTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:10:23Z" finished-at="2017-02-24T17:10:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ResponsiveUtilitiesTest.iPadAirResponsiveTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:10:23Z" finished-at="2017-02-24T17:10:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="iPadAirResponsiveTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="iPadAirResponsiveTest" duration-ms="0" started-at="2017-02-24T17:10:23Z" data-provider="iPadAirTestData" finished-at="2017-02-24T17:10:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: md-hidden]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[md-hidden]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[rgba(128, 128, 128, 1)]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[inline-block]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.ResponsiveUtilitiesTest.iPadAirResponsiveTest(ResponsiveUtilitiesTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- iPadAirResponsiveTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:10:23Z" finished-at="2017-02-24T17:10:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:10:23Z" finished-at="2017-02-24T17:10:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ResponsiveUtilitiesTest.iPadProResponsiveTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="iPadAirResponsiveTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="iPadAirResponsiveTest" duration-ms="0" started-at="2017-02-24T17:10:23Z" data-provider="iPadAirTestData" finished-at="2017-02-24T17:10:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: lg-visible]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[lg-visible]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[rgba(139, 0, 139, 1)]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[block]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.ResponsiveUtilitiesTest.iPadAirResponsiveTest(ResponsiveUtilitiesTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- iPadAirResponsiveTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:10:23Z" finished-at="2017-02-24T17:10:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="iPadProResponsiveTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="iPadProResponsiveTest" duration-ms="0" started-at="2017-02-24T17:10:23Z" data-provider="iPadProTestData" finished-at="2017-02-24T17:10:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: lg-visible]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[lg-visible]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[rgba(139, 0, 139, 1)]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[block]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Pro']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Pro'
	at elementsTests.ResponsiveUtilitiesTest.iPadProResponsiveTest(ResponsiveUtilitiesTest.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- iPadProResponsiveTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:10:23Z" finished-at="2017-02-24T17:10:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="iPadProResponsiveTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="iPadProResponsiveTest" duration-ms="0" started-at="2017-02-24T17:10:23Z" data-provider="iPadProTestData" finished-at="2017-02-24T17:10:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: xl-visible]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[xl-visible]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[rgba(173, 255, 47, 1)]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[block]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Pro']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Pro'
	at elementsTests.ResponsiveUtilitiesTest.iPadProResponsiveTest(ResponsiveUtilitiesTest.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- iPadProResponsiveTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:10:23Z" finished-at="2017-02-24T17:10:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ResponsiveUtilitiesTest.iPadProResponsiveTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:10:23Z" finished-at="2017-02-24T17:10:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ResponsiveUtilitiesTest.iPhone5SResponsiveTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:10:23Z" finished-at="2017-02-24T17:10:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="iPhone5SResponsiveTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="iPhone5SResponsiveTest" duration-ms="0" started-at="2017-02-24T17:10:23Z" data-provider="iPhone5SPlusTestData" finished-at="2017-02-24T17:10:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: xs-hidden]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[xs-hidden]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[rgba(128, 128, 128, 1)]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[inline-block]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPhone 5s']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPhone 5s'
	at elementsTests.ResponsiveUtilitiesTest.iPhone5SResponsiveTest(ResponsiveUtilitiesTest.java:235)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- iPhone5SResponsiveTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:10:23Z" finished-at="2017-02-24T17:10:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="iPhone5SResponsiveTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="iPhone5SResponsiveTest" duration-ms="0" started-at="2017-02-24T17:10:23Z" data-provider="iPhone5SPlusTestData" finished-at="2017-02-24T17:10:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: xs-visible]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[xs-visible]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[rgba(255, 0, 0, 1)]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[block]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPhone 5s']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPhone 5s'
	at elementsTests.ResponsiveUtilitiesTest.iPhone5SResponsiveTest(ResponsiveUtilitiesTest.java:235)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- iPhone5SResponsiveTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:10:23Z" finished-at="2017-02-24T17:10:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ResponsiveUtilitiesTest.iPhone5SResponsiveTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:10:23Z" finished-at="2017-02-24T17:10:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:10:23Z" finished-at="2017-02-24T17:10:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="iPhone5SResponsiveTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="iPhone5SResponsiveTest" duration-ms="0" started-at="2017-02-24T17:10:23Z" data-provider="iPhone5SPlusTestData" finished-at="2017-02-24T17:10:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: sm-visible]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[sm-visible]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[rgba(0, 128, 0, 1)]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[block]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPhone 5s']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPhone 5s'
	at elementsTests.ResponsiveUtilitiesTest.iPhone5SResponsiveTest(ResponsiveUtilitiesTest.java:235)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- iPhone5SResponsiveTest -->
        <test-method status="SKIP" signature="iPhone5SResponsiveTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="iPhone5SResponsiveTest" duration-ms="0" started-at="2017-02-24T17:10:23Z" data-provider="iPhone5SPlusTestData" finished-at="2017-02-24T17:10:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: sm-hidden]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[sm-hidden]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[rgba(128, 128, 128, 1)]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[inline-block]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPhone 5s']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPhone 5s'
	at elementsTests.ResponsiveUtilitiesTest.iPhone5SResponsiveTest(ResponsiveUtilitiesTest.java:235)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- iPhone5SResponsiveTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:10:23Z" finished-at="2017-02-24T17:10:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ResponsiveUtilitiesTest.iPhone5SResponsiveTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:10:23Z" finished-at="2017-02-24T17:10:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ResponsiveUtilitiesTest.iPhone5SResponsiveTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="iPhone6PlusResponsiveTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="iPhone6PlusResponsiveTest" duration-ms="5933" started-at="2017-02-24T17:10:23Z" data-provider="iPhone6PlusTestData" finished-at="2017-02-24T17:10:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: xs-visible]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[xs-visible]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[rgba(255, 0, 0, 1)]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[block]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- iPhone6PlusResponsiveTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:10:23Z" finished-at="2017-02-24T17:10:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ResponsiveUtilitiesTest.iPhone6PlusResponsiveTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="iPhone6PlusResponsiveTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="iPhone6PlusResponsiveTest" duration-ms="6520" started-at="2017-02-24T17:10:29Z" data-provider="iPhone6PlusTestData" finished-at="2017-02-24T17:10:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: xs-hidden]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[xs-hidden]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[rgba(128, 128, 128, 1)]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[inline-block]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- iPhone6PlusResponsiveTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:10:29Z" finished-at="2017-02-24T17:10:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ResponsiveUtilitiesTest.iPhone6PlusResponsiveTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:10:29Z" finished-at="2017-02-24T17:10:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:10:36Z" finished-at="2017-02-24T17:10:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:10:36Z" finished-at="2017-02-24T17:10:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ResponsiveUtilitiesTest.iPhone6PlusResponsiveTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="iPhone6PlusResponsiveTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="iPhone6PlusResponsiveTest" duration-ms="5576" started-at="2017-02-24T17:10:36Z" data-provider="iPhone6PlusTestData" finished-at="2017-02-24T17:10:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: sm-visible]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[sm-visible]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[rgba(0, 128, 0, 1)]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[block]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- iPhone6PlusResponsiveTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:10:41Z" finished-at="2017-02-24T17:10:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:10:41Z" finished-at="2017-02-24T17:10:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ResponsiveUtilitiesTest.iPhone6PlusResponsiveTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="iPhone6PlusResponsiveTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="iPhone6PlusResponsiveTest" duration-ms="6468" started-at="2017-02-24T17:10:41Z" data-provider="iPhone6PlusTestData" finished-at="2017-02-24T17:10:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: sm-hidden]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[sm-hidden]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[rgba(128, 128, 128, 1)]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[inline-block]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- iPhone6PlusResponsiveTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:10:48Z" finished-at="2017-02-24T17:10:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:10:48Z" finished-at="2017-02-24T17:10:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:10:48Z" finished-at="2017-02-24T17:10:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ResponsiveUtilitiesTest.iPhone6ResponsiveTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="iPhone6ResponsiveTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="iPhone6ResponsiveTest" duration-ms="0" started-at="2017-02-24T17:10:48Z" data-provider="iPhone6TestData" finished-at="2017-02-24T17:10:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: xs-visible]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[xs-visible]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[rgba(255, 0, 0, 1)]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[block]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPhone 6']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPhone 6'
	at elementsTests.ResponsiveUtilitiesTest.iPhone6ResponsiveTest(ResponsiveUtilitiesTest.java:213)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- iPhone6ResponsiveTest -->
        <test-method status="SKIP" signature="iPhone6ResponsiveTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="iPhone6ResponsiveTest" duration-ms="0" started-at="2017-02-24T17:10:48Z" data-provider="iPhone6TestData" finished-at="2017-02-24T17:10:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: sm-hidden]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[sm-hidden]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[rgba(128, 128, 128, 1)]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[inline-block]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPhone 6']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPhone 6'
	at elementsTests.ResponsiveUtilitiesTest.iPhone6ResponsiveTest(ResponsiveUtilitiesTest.java:213)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- iPhone6ResponsiveTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:10:48Z" finished-at="2017-02-24T17:10:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:10:48Z" finished-at="2017-02-24T17:10:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ResponsiveUtilitiesTest.iPhone6ResponsiveTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="iPhone6ResponsiveTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="iPhone6ResponsiveTest" duration-ms="0" started-at="2017-02-24T17:10:48Z" data-provider="iPhone6TestData" finished-at="2017-02-24T17:10:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: xs-hidden]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[xs-hidden]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[rgba(128, 128, 128, 1)]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[inline-block]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPhone 6']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPhone 6'
	at elementsTests.ResponsiveUtilitiesTest.iPhone6ResponsiveTest(ResponsiveUtilitiesTest.java:213)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- iPhone6ResponsiveTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:10:48Z" finished-at="2017-02-24T17:10:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:10:48Z" finished-at="2017-02-24T17:10:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ResponsiveUtilitiesTest.iPhone6ResponsiveTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:10:48Z" finished-at="2017-02-24T17:10:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ResponsiveUtilitiesTest.iPhone6ResponsiveTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:10:48Z" finished-at="2017-02-24T17:10:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ResponsiveUtilitiesTest.nexus4ResponsiveTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="nexus4ResponsiveTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="nexus4ResponsiveTest" duration-ms="0" started-at="2017-02-24T17:10:48Z" data-provider="nexus4TestData" finished-at="2017-02-24T17:10:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: xs-visible]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[xs-visible]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[rgba(0, 128, 0, 1)]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[block]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'LG Nexus 4 Emulator']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'LG Nexus 4 Emulator'
	at elementsTests.ResponsiveUtilitiesTest.nexus4ResponsiveTest(ResponsiveUtilitiesTest.java:317)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nexus4ResponsiveTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:10:48Z" finished-at="2017-02-24T17:10:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:10:48Z" finished-at="2017-02-24T17:10:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="iPhone6ResponsiveTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="iPhone6ResponsiveTest" duration-ms="0" started-at="2017-02-24T17:10:48Z" data-provider="iPhone6TestData" finished-at="2017-02-24T17:10:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: sm-visible]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[sm-visible]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[rgba(0, 128, 0, 1)]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[block]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPhone 6']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPhone 6'
	at elementsTests.ResponsiveUtilitiesTest.iPhone6ResponsiveTest(ResponsiveUtilitiesTest.java:213)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- iPhone6ResponsiveTest -->
        <test-method status="SKIP" signature="nexus4ResponsiveTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="nexus4ResponsiveTest" duration-ms="0" started-at="2017-02-24T17:10:48Z" data-provider="nexus4TestData" finished-at="2017-02-24T17:10:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: sm-visible]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[sm-visible]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[rgba(0, 0, 255, 1)]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[block]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'LG Nexus 4 Emulator']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'LG Nexus 4 Emulator'
	at elementsTests.ResponsiveUtilitiesTest.nexus4ResponsiveTest(ResponsiveUtilitiesTest.java:317)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nexus4ResponsiveTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:10:48Z" finished-at="2017-02-24T17:10:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ResponsiveUtilitiesTest.nexus7ResponsiveTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:10:48Z" finished-at="2017-02-24T17:10:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:10:48Z" finished-at="2017-02-24T17:10:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ResponsiveUtilitiesTest.nexus4ResponsiveTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:10:48Z" finished-at="2017-02-24T17:10:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:10:48Z" finished-at="2017-02-24T17:10:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ResponsiveUtilitiesTest.nexus7ResponsiveTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="tearDown(java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="tearDown" is-config="true" duration-ms="1464" started-at="2017-02-24T17:10:48Z" finished-at="2017-02-24T17:10:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="nexus7ResponsiveTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="nexus7ResponsiveTest" duration-ms="0" started-at="2017-02-24T17:10:48Z" data-provider="nexus7TestData" finished-at="2017-02-24T17:10:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: md-visible]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[md-visible]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[rgba(0, 0, 255, 1)]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[block]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'Google Nexus 7 HD Emulator']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'Google Nexus 7 HD Emulator'
	at elementsTests.ResponsiveUtilitiesTest.nexus7ResponsiveTest(ResponsiveUtilitiesTest.java:297)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nexus7ResponsiveTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:10:48Z" finished-at="2017-02-24T17:10:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="nexus7ResponsiveTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@32d2fa64]" name="nexus7ResponsiveTest" duration-ms="0" started-at="2017-02-24T17:10:48Z" data-provider="nexus7TestData" finished-at="2017-02-24T17:10:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: sm-visible]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[sm-visible]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[rgba(0, 128, 0, 1)]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[block]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'Google Nexus 7 HD Emulator']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'Google Nexus 7 HD Emulator'
	at elementsTests.ResponsiveUtilitiesTest.nexus7ResponsiveTest(ResponsiveUtilitiesTest.java:297)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nexus7ResponsiveTest -->
      </class> <!-- elementsTests.ResponsiveUtilitiesTest -->
      <class name="elementsTests.ButtonsTest">
        <test-method status="PASS" signature="setUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="setUp" is-config="true" duration-ms="79924" started-at="2017-02-24T17:08:17Z" finished-at="2017-02-24T17:09:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sauce]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[off]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OS X 10.11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[54.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[iOS]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[iPhone 6 Plus]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[9.3]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[safari]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[1.5.3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="buttonsTestBeforeClass(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="buttonsTestBeforeClass" is-config="true" duration-ms="1" started-at="2017-02-24T17:09:37Z" finished-at="2017-02-24T17:09:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sauce]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[iOS]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[safari]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buttonsTestBeforeClass -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1282" started-at="2017-02-24T17:09:37Z" finished-at="2017-02-24T17:09:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.ctaButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ctaButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="ctaButtonMobileTest" duration-ms="1467" started-at="2017-02-24T17:09:38Z" data-provider="CTA Button Test Data" finished-at="2017-02-24T17:09:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@3688eb5b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctaButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:09:40Z" finished-at="2017-02-24T17:09:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1260" started-at="2017-02-24T17:09:40Z" finished-at="2017-02-24T17:09:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.ctaButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ctaButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="ctaButtonMobileTest" duration-ms="1503" started-at="2017-02-24T17:09:41Z" data-provider="CTA Button Test Data" finished-at="2017-02-24T17:09:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[background-color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@69f1a286]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctaButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:09:43Z" finished-at="2017-02-24T17:09:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1159" started-at="2017-02-24T17:09:43Z" finished-at="2017-02-24T17:09:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.ctaButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ctaButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="ctaButtonMobileTest" duration-ms="1425" started-at="2017-02-24T17:09:44Z" data-provider="CTA Button Test Data" finished-at="2017-02-24T17:09:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[background-image]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@7922d892]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctaButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:09:45Z" finished-at="2017-02-24T17:09:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1213" started-at="2017-02-24T17:09:45Z" finished-at="2017-02-24T17:09:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.ctaButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ctaButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="ctaButtonMobileTest" duration-ms="3515" started-at="2017-02-24T17:09:46Z" data-provider="CTA Button Test Data" finished-at="2017-02-24T17:09:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-top-style]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@457c9034]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctaButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:09:50Z" finished-at="2017-02-24T17:09:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1197" started-at="2017-02-24T17:09:50Z" finished-at="2017-02-24T17:09:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.ctaButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ctaButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="ctaButtonMobileTest" duration-ms="1405" started-at="2017-02-24T17:09:51Z" data-provider="CTA Button Test Data" finished-at="2017-02-24T17:09:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-bottom-style]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@345f69f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctaButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:09:53Z" finished-at="2017-02-24T17:09:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1055" started-at="2017-02-24T17:09:53Z" finished-at="2017-02-24T17:09:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.ctaButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ctaButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="ctaButtonMobileTest" duration-ms="1428" started-at="2017-02-24T17:09:54Z" data-provider="CTA Button Test Data" finished-at="2017-02-24T17:09:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-left-style]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@50de186c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctaButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:09:55Z" finished-at="2017-02-24T17:09:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1134" started-at="2017-02-24T17:09:55Z" finished-at="2017-02-24T17:09:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.ctaButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ctaButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="ctaButtonMobileTest" duration-ms="1493" started-at="2017-02-24T17:09:56Z" data-provider="CTA Button Test Data" finished-at="2017-02-24T17:09:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-right-style]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@3f57bcad]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctaButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:09:58Z" finished-at="2017-02-24T17:09:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1314" started-at="2017-02-24T17:09:58Z" finished-at="2017-02-24T17:09:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.ctaButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ctaButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="ctaButtonMobileTest" duration-ms="1440" started-at="2017-02-24T17:09:59Z" data-provider="CTA Button Test Data" finished-at="2017-02-24T17:10:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-bottom-left-radius]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@1e8b7643]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctaButtonMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1055" started-at="2017-02-24T17:10:00Z" finished-at="2017-02-24T17:10:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.ctaButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:10:00Z" finished-at="2017-02-24T17:10:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="ctaButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="ctaButtonMobileTest" duration-ms="1453" started-at="2017-02-24T17:10:02Z" data-provider="CTA Button Test Data" finished-at="2017-02-24T17:10:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-bottom-right-radius]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@51549490]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctaButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:10:03Z" finished-at="2017-02-24T17:10:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1093" started-at="2017-02-24T17:10:03Z" finished-at="2017-02-24T17:10:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.ctaButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ctaButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="ctaButtonMobileTest" duration-ms="1410" started-at="2017-02-24T17:10:04Z" data-provider="CTA Button Test Data" finished-at="2017-02-24T17:10:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-top-left-radius]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@71e9ebae]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctaButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:10:05Z" finished-at="2017-02-24T17:10:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1408" started-at="2017-02-24T17:10:05Z" finished-at="2017-02-24T17:10:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.ctaButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ctaButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="ctaButtonMobileTest" duration-ms="1531" started-at="2017-02-24T17:10:07Z" data-provider="CTA Button Test Data" finished-at="2017-02-24T17:10:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-top-right-radius]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@73d983ea]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctaButtonMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1624" started-at="2017-02-24T17:10:08Z" finished-at="2017-02-24T17:10:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.ctaButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:10:08Z" finished-at="2017-02-24T17:10:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="ctaButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="ctaButtonMobileTest" duration-ms="1561" started-at="2017-02-24T17:10:10Z" data-provider="CTA Button Test Data" finished-at="2017-02-24T17:10:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[text-decoration]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@36a5cabc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctaButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:10:12Z" finished-at="2017-02-24T17:10:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1354" started-at="2017-02-24T17:10:12Z" finished-at="2017-02-24T17:10:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.ctaButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ctaButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="ctaButtonMobileTest" duration-ms="1550" started-at="2017-02-24T17:10:13Z" data-provider="CTA Button Test Data" finished-at="2017-02-24T17:10:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[text-overflow]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@432038ec]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctaButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:10:15Z" finished-at="2017-02-24T17:10:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1413" started-at="2017-02-24T17:10:15Z" finished-at="2017-02-24T17:10:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.ctaButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ctaButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="ctaButtonMobileTest" duration-ms="1468" started-at="2017-02-24T17:10:16Z" data-provider="CTA Button Test Data" finished-at="2017-02-24T17:10:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[white-space]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@7daa0fbd]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctaButtonMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1073" started-at="2017-02-24T17:10:17Z" finished-at="2017-02-24T17:10:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.ctaButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:10:17Z" finished-at="2017-02-24T17:10:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="ctaButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="ctaButtonMobileTest" duration-ms="1514" started-at="2017-02-24T17:10:18Z" data-provider="CTA Button Test Data" finished-at="2017-02-24T17:10:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[overflow-x]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@42530531]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctaButtonMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="2910" started-at="2017-02-24T17:10:20Z" finished-at="2017-02-24T17:10:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.ctaButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:10:20Z" finished-at="2017-02-24T17:10:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="ctaButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="ctaButtonMobileTest" duration-ms="1583" started-at="2017-02-24T17:10:23Z" data-provider="CTA Button Test Data" finished-at="2017-02-24T17:10:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[overflow-y]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@5a3bc7ed]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctaButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:10:24Z" finished-at="2017-02-24T17:10:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1211" started-at="2017-02-24T17:10:24Z" finished-at="2017-02-24T17:10:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.ctaButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ctaButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="ctaButtonMobileTest" duration-ms="1455" started-at="2017-02-24T17:10:26Z" data-provider="CTA Button Test Data" finished-at="2017-02-24T17:10:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[display]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@181e731e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctaButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:10:27Z" finished-at="2017-02-24T17:10:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1215" started-at="2017-02-24T17:10:27Z" finished-at="2017-02-24T17:10:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.ctaButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ctaButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="ctaButtonMobileTest" duration-ms="1412" started-at="2017-02-24T17:10:28Z" data-provider="CTA Button Test Data" finished-at="2017-02-24T17:10:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[vertical-align]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@35645047]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctaButtonMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1180" started-at="2017-02-24T17:10:30Z" finished-at="2017-02-24T17:10:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.ctaButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:10:30Z" finished-at="2017-02-24T17:10:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="ctaButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="ctaButtonMobileTest" duration-ms="1545" started-at="2017-02-24T17:10:31Z" data-provider="CTA Button Test Data" finished-at="2017-02-24T17:10:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[cursor]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@6f44a157]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctaButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:10:32Z" finished-at="2017-02-24T17:10:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1101" started-at="2017-02-24T17:10:32Z" finished-at="2017-02-24T17:10:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.ctaButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ctaButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="ctaButtonMobileTest" duration-ms="1486" started-at="2017-02-24T17:10:34Z" data-provider="CTA Button Test Data" finished-at="2017-02-24T17:10:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[font-size]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@6bc407fd]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctaButtonMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1465" started-at="2017-02-24T17:10:35Z" finished-at="2017-02-24T17:10:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.ctaButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:10:35Z" finished-at="2017-02-24T17:10:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="ctaButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="ctaButtonMobileTest" duration-ms="1421" started-at="2017-02-24T17:10:37Z" data-provider="CTA Button Test Data" finished-at="2017-02-24T17:10:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[height]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@291f18]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctaButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:10:38Z" finished-at="2017-02-24T17:10:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1054" started-at="2017-02-24T17:10:38Z" finished-at="2017-02-24T17:10:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.ctaButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ctaButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="ctaButtonMobileTest" duration-ms="1401" started-at="2017-02-24T17:10:39Z" data-provider="CTA Button Test Data" finished-at="2017-02-24T17:10:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[line-height]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@17d88132]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctaButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:10:40Z" finished-at="2017-02-24T17:10:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1059" started-at="2017-02-24T17:10:40Z" finished-at="2017-02-24T17:10:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.ctaButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ctaButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="ctaButtonMobileTest" duration-ms="1403" started-at="2017-02-24T17:10:41Z" data-provider="CTA Button Test Data" finished-at="2017-02-24T17:10:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-top]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@5ddcc487]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctaButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:10:43Z" finished-at="2017-02-24T17:10:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1074" started-at="2017-02-24T17:10:43Z" finished-at="2017-02-24T17:10:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.ctaButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ctaButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="ctaButtonMobileTest" duration-ms="1429" started-at="2017-02-24T17:10:44Z" data-provider="CTA Button Test Data" finished-at="2017-02-24T17:10:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-bottom]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@16eccb2e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctaButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:10:45Z" finished-at="2017-02-24T17:10:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1086" started-at="2017-02-24T17:10:45Z" finished-at="2017-02-24T17:10:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.ctaButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ctaButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="ctaButtonMobileTest" duration-ms="1443" started-at="2017-02-24T17:10:46Z" data-provider="CTA Button Test Data" finished-at="2017-02-24T17:10:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-left]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@5ef5c734]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctaButtonMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1610" started-at="2017-02-24T17:10:48Z" finished-at="2017-02-24T17:10:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.ctaButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:10:48Z" finished-at="2017-02-24T17:10:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="ctaButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="ctaButtonMobileTest" duration-ms="1668" started-at="2017-02-24T17:10:50Z" data-provider="CTA Button Test Data" finished-at="2017-02-24T17:10:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-right]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@d771cc9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctaButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:10:51Z" finished-at="2017-02-24T17:10:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1090" started-at="2017-02-24T17:10:51Z" finished-at="2017-02-24T17:10:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonDisabledStateMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="defaultButtonDisabledStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="defaultButtonDisabledStateMobileTest" duration-ms="1491" started-at="2017-02-24T17:10:52Z" data-provider="Default Button-Disabled Test Data" finished-at="2017-02-24T17:10:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@36b4091c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonDisabledStateMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:10:54Z" finished-at="2017-02-24T17:10:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1155" started-at="2017-02-24T17:10:54Z" finished-at="2017-02-24T17:10:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonDisabledStateMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="defaultButtonDisabledStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="defaultButtonDisabledStateMobileTest" duration-ms="1490" started-at="2017-02-24T17:10:55Z" data-provider="Default Button-Disabled Test Data" finished-at="2017-02-24T17:10:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[background-color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@4671115f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonDisabledStateMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1458" started-at="2017-02-24T17:10:56Z" finished-at="2017-02-24T17:10:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonDisabledStateMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:10:56Z" finished-at="2017-02-24T17:10:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="defaultButtonDisabledStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="defaultButtonDisabledStateMobileTest" duration-ms="1427" started-at="2017-02-24T17:10:58Z" data-provider="Default Button-Disabled Test Data" finished-at="2017-02-24T17:10:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-top-width]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@36cda2c2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonDisabledStateMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:10:59Z" finished-at="2017-02-24T17:10:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1215" started-at="2017-02-24T17:10:59Z" finished-at="2017-02-24T17:11:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonDisabledStateMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="defaultButtonDisabledStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="defaultButtonDisabledStateMobileTest" duration-ms="1417" started-at="2017-02-24T17:11:01Z" data-provider="Default Button-Disabled Test Data" finished-at="2017-02-24T17:11:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-bottom-width]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@3697186]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonDisabledStateMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:11:02Z" finished-at="2017-02-24T17:11:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1490" started-at="2017-02-24T17:11:02Z" finished-at="2017-02-24T17:11:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonDisabledStateMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="defaultButtonDisabledStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="defaultButtonDisabledStateMobileTest" duration-ms="1447" started-at="2017-02-24T17:11:03Z" data-provider="Default Button-Disabled Test Data" finished-at="2017-02-24T17:11:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-left-width]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@1583741e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonDisabledStateMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:05Z" finished-at="2017-02-24T17:11:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1342" started-at="2017-02-24T17:11:05Z" finished-at="2017-02-24T17:11:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonDisabledStateMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="defaultButtonDisabledStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="defaultButtonDisabledStateMobileTest" duration-ms="1432" started-at="2017-02-24T17:11:06Z" data-provider="Default Button-Disabled Test Data" finished-at="2017-02-24T17:11:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-right-width]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@5b367418]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonDisabledStateMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:08Z" finished-at="2017-02-24T17:11:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1398" started-at="2017-02-24T17:11:08Z" finished-at="2017-02-24T17:11:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonDisabledStateMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="defaultButtonDisabledStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="defaultButtonDisabledStateMobileTest" duration-ms="1466" started-at="2017-02-24T17:11:09Z" data-provider="Default Button-Disabled Test Data" finished-at="2017-02-24T17:11:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[box-shadow]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@36060e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonDisabledStateMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:11:11Z" finished-at="2017-02-24T17:11:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1371" started-at="2017-02-24T17:11:11Z" finished-at="2017-02-24T17:11:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonDisabledStateMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="defaultButtonDisabledStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="defaultButtonDisabledStateMobileTest" duration-ms="1484" started-at="2017-02-24T17:11:12Z" data-provider="Default Button-Disabled Test Data" finished-at="2017-02-24T17:11:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[cursor]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@481ba2cf]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonDisabledStateMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:13Z" finished-at="2017-02-24T17:11:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1076" started-at="2017-02-24T17:11:13Z" finished-at="2017-02-24T17:11:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="defaultButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="defaultButtonMobileTest" duration-ms="2358" started-at="2017-02-24T17:11:14Z" data-provider="Default Button Test Data" finished-at="2017-02-24T17:11:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@46b61c56]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:17Z" finished-at="2017-02-24T17:11:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1245" started-at="2017-02-24T17:11:17Z" finished-at="2017-02-24T17:11:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="defaultButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="defaultButtonMobileTest" duration-ms="1532" started-at="2017-02-24T17:11:18Z" data-provider="Default Button Test Data" finished-at="2017-02-24T17:11:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[background-color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@2e48362c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:11:20Z" finished-at="2017-02-24T17:11:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1216" started-at="2017-02-24T17:11:20Z" finished-at="2017-02-24T17:11:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="defaultButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="defaultButtonMobileTest" duration-ms="1396" started-at="2017-02-24T17:11:21Z" data-provider="Default Button Test Data" finished-at="2017-02-24T17:11:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-top-style]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@1efe439d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:22Z" finished-at="2017-02-24T17:11:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1076" started-at="2017-02-24T17:11:22Z" finished-at="2017-02-24T17:11:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="defaultButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="defaultButtonMobileTest" duration-ms="1434" started-at="2017-02-24T17:11:23Z" data-provider="Default Button Test Data" finished-at="2017-02-24T17:11:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-bottom-style]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@be68757]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1063" started-at="2017-02-24T17:11:25Z" finished-at="2017-02-24T17:11:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:25Z" finished-at="2017-02-24T17:11:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="defaultButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="defaultButtonMobileTest" duration-ms="1408" started-at="2017-02-24T17:11:26Z" data-provider="Default Button Test Data" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-left-style]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@7d446ed1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1034" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="defaultButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="defaultButtonMobileTest" duration-ms="1394" started-at="2017-02-24T17:11:28Z" data-provider="Default Button Test Data" finished-at="2017-02-24T17:11:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-right-style]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@12d2ce03]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1231" started-at="2017-02-24T17:11:30Z" finished-at="2017-02-24T17:11:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:30Z" finished-at="2017-02-24T17:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="defaultButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="defaultButtonMobileTest" duration-ms="1443" started-at="2017-02-24T17:11:31Z" data-provider="Default Button Test Data" finished-at="2017-02-24T17:11:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-top-color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@7e5c856f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:11:32Z" finished-at="2017-02-24T17:11:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1395" started-at="2017-02-24T17:11:32Z" finished-at="2017-02-24T17:11:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="defaultButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="defaultButtonMobileTest" duration-ms="1424" started-at="2017-02-24T17:11:34Z" data-provider="Default Button Test Data" finished-at="2017-02-24T17:11:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-bottom-color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@413f69cc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:35Z" finished-at="2017-02-24T17:11:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1484" started-at="2017-02-24T17:11:35Z" finished-at="2017-02-24T17:11:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="defaultButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="defaultButtonMobileTest" duration-ms="1403" started-at="2017-02-24T17:11:37Z" data-provider="Default Button Test Data" finished-at="2017-02-24T17:11:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-left-color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@1f53a5dc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1079" started-at="2017-02-24T17:11:38Z" finished-at="2017-02-24T17:11:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:38Z" finished-at="2017-02-24T17:11:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="defaultButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="defaultButtonMobileTest" duration-ms="1415" started-at="2017-02-24T17:11:39Z" data-provider="Default Button Test Data" finished-at="2017-02-24T17:11:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-right-color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@1b75c2e3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:40Z" finished-at="2017-02-24T17:11:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1167" started-at="2017-02-24T17:11:40Z" finished-at="2017-02-24T17:11:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="defaultButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="defaultButtonMobileTest" duration-ms="1431" started-at="2017-02-24T17:11:42Z" data-provider="Default Button Test Data" finished-at="2017-02-24T17:11:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-bottom-left-radius]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@1984b1f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:11:43Z" finished-at="2017-02-24T17:11:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1056" started-at="2017-02-24T17:11:43Z" finished-at="2017-02-24T17:11:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="defaultButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="defaultButtonMobileTest" duration-ms="1407" started-at="2017-02-24T17:11:44Z" data-provider="Default Button Test Data" finished-at="2017-02-24T17:11:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-bottom-right-radius]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@3bd323e9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1094" started-at="2017-02-24T17:11:46Z" finished-at="2017-02-24T17:11:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:46Z" finished-at="2017-02-24T17:11:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="defaultButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="defaultButtonMobileTest" duration-ms="1426" started-at="2017-02-24T17:11:47Z" data-provider="Default Button Test Data" finished-at="2017-02-24T17:11:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-top-left-radius]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@39ac0c0a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1050" started-at="2017-02-24T17:11:48Z" finished-at="2017-02-24T17:11:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:48Z" finished-at="2017-02-24T17:11:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="defaultButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="defaultButtonMobileTest" duration-ms="1418" started-at="2017-02-24T17:11:49Z" data-provider="Default Button Test Data" finished-at="2017-02-24T17:11:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-top-right-radius]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@c7ba306]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:11:51Z" finished-at="2017-02-24T17:11:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1107" started-at="2017-02-24T17:11:51Z" finished-at="2017-02-24T17:11:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="defaultButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="defaultButtonMobileTest" duration-ms="1450" started-at="2017-02-24T17:11:52Z" data-provider="Default Button Test Data" finished-at="2017-02-24T17:11:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[text-decoration]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@4ff8d125]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1126" started-at="2017-02-24T17:11:53Z" finished-at="2017-02-24T17:11:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:53Z" finished-at="2017-02-24T17:11:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="defaultButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="defaultButtonMobileTest" duration-ms="1413" started-at="2017-02-24T17:11:54Z" data-provider="Default Button Test Data" finished-at="2017-02-24T17:11:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[text-overflow]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@6d167f58]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1177" started-at="2017-02-24T17:11:56Z" finished-at="2017-02-24T17:11:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:56Z" finished-at="2017-02-24T17:11:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="defaultButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="defaultButtonMobileTest" duration-ms="1424" started-at="2017-02-24T17:11:57Z" data-provider="Default Button Test Data" finished-at="2017-02-24T17:11:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[white-space]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@3403e2ac]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:58Z" finished-at="2017-02-24T17:11:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1061" started-at="2017-02-24T17:11:58Z" finished-at="2017-02-24T17:11:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="defaultButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="defaultButtonMobileTest" duration-ms="1461" started-at="2017-02-24T17:11:59Z" data-provider="Default Button Test Data" finished-at="2017-02-24T17:12:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[overflow-x]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@65b104b9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:12:01Z" finished-at="2017-02-24T17:12:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1328" started-at="2017-02-24T17:12:01Z" finished-at="2017-02-24T17:12:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="defaultButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="defaultButtonMobileTest" duration-ms="1443" started-at="2017-02-24T17:12:02Z" data-provider="Default Button Test Data" finished-at="2017-02-24T17:12:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[overflow-y]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@6c4980d3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:12:04Z" finished-at="2017-02-24T17:12:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1332" started-at="2017-02-24T17:12:04Z" finished-at="2017-02-24T17:12:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="defaultButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="defaultButtonMobileTest" duration-ms="1418" started-at="2017-02-24T17:12:05Z" data-provider="Default Button Test Data" finished-at="2017-02-24T17:12:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[display]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@327bcebd]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:06Z" finished-at="2017-02-24T17:12:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1564" started-at="2017-02-24T17:12:06Z" finished-at="2017-02-24T17:12:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="defaultButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="defaultButtonMobileTest" duration-ms="1404" started-at="2017-02-24T17:12:08Z" data-provider="Default Button Test Data" finished-at="2017-02-24T17:12:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[vertical-align]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@19c65cdc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:12:09Z" finished-at="2017-02-24T17:12:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1490" started-at="2017-02-24T17:12:09Z" finished-at="2017-02-24T17:12:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="defaultButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="defaultButtonMobileTest" duration-ms="1430" started-at="2017-02-24T17:12:11Z" data-provider="Default Button Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[cursor]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@74bf1791]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1411" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="defaultButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="defaultButtonMobileTest" duration-ms="1414" started-at="2017-02-24T17:12:14Z" data-provider="Default Button Test Data" finished-at="2017-02-24T17:12:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[font-size]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@54504ecd]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:12:15Z" finished-at="2017-02-24T17:12:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1336" started-at="2017-02-24T17:12:15Z" finished-at="2017-02-24T17:12:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="defaultButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="defaultButtonMobileTest" duration-ms="1424" started-at="2017-02-24T17:12:16Z" data-provider="Default Button Test Data" finished-at="2017-02-24T17:12:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[height]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@38b27cdc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:12:18Z" finished-at="2017-02-24T17:12:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1099" started-at="2017-02-24T17:12:18Z" finished-at="2017-02-24T17:12:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="defaultButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="defaultButtonMobileTest" duration-ms="1385" started-at="2017-02-24T17:12:19Z" data-provider="Default Button Test Data" finished-at="2017-02-24T17:12:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[line-height]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@1339e7aa]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:20Z" finished-at="2017-02-24T17:12:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1218" started-at="2017-02-24T17:12:20Z" finished-at="2017-02-24T17:12:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="defaultButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="defaultButtonMobileTest" duration-ms="1416" started-at="2017-02-24T17:12:21Z" data-provider="Default Button Test Data" finished-at="2017-02-24T17:12:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-top]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@1fb669c3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:12:23Z" finished-at="2017-02-24T17:12:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1017" started-at="2017-02-24T17:12:23Z" finished-at="2017-02-24T17:12:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="defaultButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="defaultButtonMobileTest" duration-ms="1439" started-at="2017-02-24T17:12:24Z" data-provider="Default Button Test Data" finished-at="2017-02-24T17:12:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-bottom]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@49c66ade]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:25Z" finished-at="2017-02-24T17:12:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1246" started-at="2017-02-24T17:12:25Z" finished-at="2017-02-24T17:12:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="defaultButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="defaultButtonMobileTest" duration-ms="1424" started-at="2017-02-24T17:12:27Z" data-provider="Default Button Test Data" finished-at="2017-02-24T17:12:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-left]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@6239aba6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:28Z" finished-at="2017-02-24T17:12:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1287" started-at="2017-02-24T17:12:28Z" finished-at="2017-02-24T17:12:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="defaultButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="defaultButtonMobileTest" duration-ms="1399" started-at="2017-02-24T17:12:29Z" data-provider="Default Button Test Data" finished-at="2017-02-24T17:12:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-right]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@3e6104fc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:12:31Z" finished-at="2017-02-24T17:12:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1340" started-at="2017-02-24T17:12:31Z" finished-at="2017-02-24T17:12:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.largeButtonDisabledStateMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="largeButtonDisabledStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="largeButtonDisabledStateMobileTest" duration-ms="1437" started-at="2017-02-24T17:12:32Z" data-provider="Default Button-Disabled Test Data" finished-at="2017-02-24T17:12:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@5f9be66c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- largeButtonDisabledStateMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1077" started-at="2017-02-24T17:12:33Z" finished-at="2017-02-24T17:12:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.largeButtonDisabledStateMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:33Z" finished-at="2017-02-24T17:12:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="largeButtonDisabledStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="largeButtonDisabledStateMobileTest" duration-ms="1435" started-at="2017-02-24T17:12:35Z" data-provider="Default Button-Disabled Test Data" finished-at="2017-02-24T17:12:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[background-color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@3abada5a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- largeButtonDisabledStateMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1176" started-at="2017-02-24T17:12:36Z" finished-at="2017-02-24T17:12:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.largeButtonDisabledStateMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:36Z" finished-at="2017-02-24T17:12:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="largeButtonDisabledStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="largeButtonDisabledStateMobileTest" duration-ms="1438" started-at="2017-02-24T17:12:37Z" data-provider="Default Button-Disabled Test Data" finished-at="2017-02-24T17:12:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-top-width]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@66c61024]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- largeButtonDisabledStateMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:39Z" finished-at="2017-02-24T17:12:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1009" started-at="2017-02-24T17:12:39Z" finished-at="2017-02-24T17:12:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.largeButtonDisabledStateMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="largeButtonDisabledStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="largeButtonDisabledStateMobileTest" duration-ms="1392" started-at="2017-02-24T17:12:40Z" data-provider="Default Button-Disabled Test Data" finished-at="2017-02-24T17:12:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-bottom-width]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@61fe30]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- largeButtonDisabledStateMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1440" started-at="2017-02-24T17:12:41Z" finished-at="2017-02-24T17:12:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.largeButtonDisabledStateMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:41Z" finished-at="2017-02-24T17:12:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="largeButtonDisabledStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="largeButtonDisabledStateMobileTest" duration-ms="2569" started-at="2017-02-24T17:12:42Z" data-provider="Default Button-Disabled Test Data" finished-at="2017-02-24T17:12:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-left-width]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@c9d0d6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- largeButtonDisabledStateMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:45Z" finished-at="2017-02-24T17:12:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1115" started-at="2017-02-24T17:12:45Z" finished-at="2017-02-24T17:12:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.largeButtonDisabledStateMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="largeButtonDisabledStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="largeButtonDisabledStateMobileTest" duration-ms="1447" started-at="2017-02-24T17:12:46Z" data-provider="Default Button-Disabled Test Data" finished-at="2017-02-24T17:12:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-right-width]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@6ccdb29f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- largeButtonDisabledStateMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:12:48Z" finished-at="2017-02-24T17:12:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1352" started-at="2017-02-24T17:12:48Z" finished-at="2017-02-24T17:12:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.largeButtonDisabledStateMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="largeButtonDisabledStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="largeButtonDisabledStateMobileTest" duration-ms="1426" started-at="2017-02-24T17:12:49Z" data-provider="Default Button-Disabled Test Data" finished-at="2017-02-24T17:12:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[box-shadow]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@3adcc812]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- largeButtonDisabledStateMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1310" started-at="2017-02-24T17:12:50Z" finished-at="2017-02-24T17:12:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.largeButtonDisabledStateMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:50Z" finished-at="2017-02-24T17:12:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="largeButtonDisabledStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="largeButtonDisabledStateMobileTest" duration-ms="1427" started-at="2017-02-24T17:12:52Z" data-provider="Default Button-Disabled Test Data" finished-at="2017-02-24T17:12:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[cursor]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@35432107]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- largeButtonDisabledStateMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:12:53Z" finished-at="2017-02-24T17:12:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1061" started-at="2017-02-24T17:12:53Z" finished-at="2017-02-24T17:12:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.largeButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="largeButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="largeButtonMobileTest" duration-ms="2470" started-at="2017-02-24T17:12:54Z" data-provider="Large Button Test Data" finished-at="2017-02-24T17:12:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[font-size]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@7b420819]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- largeButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:57Z" finished-at="2017-02-24T17:12:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1212" started-at="2017-02-24T17:12:57Z" finished-at="2017-02-24T17:12:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.largeButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="largeButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="largeButtonMobileTest" duration-ms="2403" started-at="2017-02-24T17:12:58Z" data-provider="Large Button Test Data" finished-at="2017-02-24T17:13:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[height]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@7a1a14a4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- largeButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:00Z" finished-at="2017-02-24T17:13:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1211" started-at="2017-02-24T17:13:00Z" finished-at="2017-02-24T17:13:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.largeButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="largeButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="largeButtonMobileTest" duration-ms="2765" started-at="2017-02-24T17:13:01Z" data-provider="Large Button Test Data" finished-at="2017-02-24T17:13:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[line-height]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@265adfad]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- largeButtonMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1242" started-at="2017-02-24T17:13:04Z" finished-at="2017-02-24T17:13:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.largeButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:04Z" finished-at="2017-02-24T17:13:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="largeButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="largeButtonMobileTest" duration-ms="2642" started-at="2017-02-24T17:13:05Z" data-provider="Large Button Test Data" finished-at="2017-02-24T17:13:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-top]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@a3d9978]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- largeButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:08Z" finished-at="2017-02-24T17:13:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1632" started-at="2017-02-24T17:13:08Z" finished-at="2017-02-24T17:13:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.largeButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="largeButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="largeButtonMobileTest" duration-ms="2698" started-at="2017-02-24T17:13:10Z" data-provider="Large Button Test Data" finished-at="2017-02-24T17:13:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-bottom]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@61544ae6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- largeButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:13:12Z" finished-at="2017-02-24T17:13:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1480" started-at="2017-02-24T17:13:12Z" finished-at="2017-02-24T17:13:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.largeButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="largeButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="largeButtonMobileTest" duration-ms="2666" started-at="2017-02-24T17:13:14Z" data-provider="Large Button Test Data" finished-at="2017-02-24T17:13:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-left]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@4b41dd5c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- largeButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:17Z" finished-at="2017-02-24T17:13:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1219" started-at="2017-02-24T17:13:17Z" finished-at="2017-02-24T17:13:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.largeButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="largeButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="largeButtonMobileTest" duration-ms="2813" started-at="2017-02-24T17:13:18Z" data-provider="Large Button Test Data" finished-at="2017-02-24T17:13:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-right]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@3b96c42e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- largeButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:21Z" finished-at="2017-02-24T17:13:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1154" started-at="2017-02-24T17:13:21Z" finished-at="2017-02-24T17:13:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.linkButtonFocusStateMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="linkButtonFocusStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="linkButtonFocusStateMobileTest" duration-ms="3381" started-at="2017-02-24T17:13:22Z" data-provider="Link Button-Focus state Test Data" finished-at="2017-02-24T17:13:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@3899782c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkButtonFocusStateMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:25Z" finished-at="2017-02-24T17:13:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1024" started-at="2017-02-24T17:13:25Z" finished-at="2017-02-24T17:13:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.linkButtonFocusStateMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="linkButtonFocusStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="linkButtonFocusStateMobileTest" duration-ms="3423" started-at="2017-02-24T17:13:26Z" data-provider="Link Button-Focus state Test Data" finished-at="2017-02-24T17:13:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[text-decoration]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@1603cd68]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkButtonFocusStateMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:30Z" finished-at="2017-02-24T17:13:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1438" started-at="2017-02-24T17:13:30Z" finished-at="2017-02-24T17:13:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.linkButtonHoverStateMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="linkButtonHoverStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="linkButtonHoverStateMobileTest" duration-ms="1" started-at="2017-02-24T17:13:31Z" data-provider="Link Button-Hover state Test Data" finished-at="2017-02-24T17:13:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@f80945f]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Hover operation not yet supported in iOS appium drivers]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Hover operation not yet supported in iOS appium drivers
	at elementsTests.ButtonsTest.linkButtonHoverStateMobileTest(ButtonsTest.java:648)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkButtonHoverStateMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1611" started-at="2017-02-24T17:13:31Z" finished-at="2017-02-24T17:13:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.linkButtonHoverStateMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:31Z" finished-at="2017-02-24T17:13:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="linkButtonHoverStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="linkButtonHoverStateMobileTest" duration-ms="0" started-at="2017-02-24T17:13:33Z" data-provider="Link Button-Hover state Test Data" finished-at="2017-02-24T17:13:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[text-decoration]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@23aa363a]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Hover operation not yet supported in iOS appium drivers]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Hover operation not yet supported in iOS appium drivers
	at elementsTests.ButtonsTest.linkButtonHoverStateMobileTest(ButtonsTest.java:648)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkButtonHoverStateMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:33Z" finished-at="2017-02-24T17:13:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1112" started-at="2017-02-24T17:13:33Z" finished-at="2017-02-24T17:13:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.linkButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="linkButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="linkButtonMobileTest" duration-ms="1400" started-at="2017-02-24T17:13:34Z" data-provider="Link Button Test Data" finished-at="2017-02-24T17:13:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@9ebe38b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkButtonMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="998" started-at="2017-02-24T17:13:35Z" finished-at="2017-02-24T17:13:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.linkButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:35Z" finished-at="2017-02-24T17:13:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="linkButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="linkButtonMobileTest" duration-ms="1446" started-at="2017-02-24T17:13:36Z" data-provider="Link Button Test Data" finished-at="2017-02-24T17:13:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[background-color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@4b23c30a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkButtonMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1410" started-at="2017-02-24T17:13:38Z" finished-at="2017-02-24T17:13:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.linkButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:38Z" finished-at="2017-02-24T17:13:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="linkButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="linkButtonMobileTest" duration-ms="1414" started-at="2017-02-24T17:13:39Z" data-provider="Link Button Test Data" finished-at="2017-02-24T17:13:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[background-image]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@38089a5a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkButtonMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1409" started-at="2017-02-24T17:13:40Z" finished-at="2017-02-24T17:13:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.linkButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:40Z" finished-at="2017-02-24T17:13:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="linkButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="linkButtonMobileTest" duration-ms="1415" started-at="2017-02-24T17:13:42Z" data-provider="Link Button Test Data" finished-at="2017-02-24T17:13:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-top-width]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@30e868be]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:43Z" finished-at="2017-02-24T17:13:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1094" started-at="2017-02-24T17:13:43Z" finished-at="2017-02-24T17:13:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.linkButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="linkButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="linkButtonMobileTest" duration-ms="1417" started-at="2017-02-24T17:13:44Z" data-provider="Link Button Test Data" finished-at="2017-02-24T17:13:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-bottom-width]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@66c92293]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkButtonMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1221" started-at="2017-02-24T17:13:46Z" finished-at="2017-02-24T17:13:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.linkButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:46Z" finished-at="2017-02-24T17:13:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="linkButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="linkButtonMobileTest" duration-ms="1477" started-at="2017-02-24T17:13:47Z" data-provider="Link Button Test Data" finished-at="2017-02-24T17:13:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-left-width]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@332796d3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:48Z" finished-at="2017-02-24T17:13:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1520" started-at="2017-02-24T17:13:48Z" finished-at="2017-02-24T17:13:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.linkButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="linkButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="linkButtonMobileTest" duration-ms="1456" started-at="2017-02-24T17:13:50Z" data-provider="Link Button Test Data" finished-at="2017-02-24T17:13:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-right-width]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@4f0100a7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:13:51Z" finished-at="2017-02-24T17:13:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1314" started-at="2017-02-24T17:13:51Z" finished-at="2017-02-24T17:13:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.linkButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="linkButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="linkButtonMobileTest" duration-ms="1427" started-at="2017-02-24T17:13:53Z" data-provider="Link Button Test Data" finished-at="2017-02-24T17:13:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[text-decoration]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@3cdf2c61]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkButtonMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1554" started-at="2017-02-24T17:13:54Z" finished-at="2017-02-24T17:13:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.linkButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:54Z" finished-at="2017-02-24T17:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="linkButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="linkButtonMobileTest" duration-ms="1458" started-at="2017-02-24T17:13:56Z" data-provider="Link Button Test Data" finished-at="2017-02-24T17:13:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[cursor]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@13ad5cd3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:13:57Z" finished-at="2017-02-24T17:13:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1063" started-at="2017-02-24T17:13:57Z" finished-at="2017-02-24T17:13:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.linkButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="linkButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="linkButtonMobileTest" duration-ms="1460" started-at="2017-02-24T17:13:58Z" data-provider="Link Button Test Data" finished-at="2017-02-24T17:14:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-top]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@1c33c17b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:14:00Z" finished-at="2017-02-24T17:14:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1100" started-at="2017-02-24T17:14:00Z" finished-at="2017-02-24T17:14:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.linkButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="linkButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="linkButtonMobileTest" duration-ms="1382" started-at="2017-02-24T17:14:01Z" data-provider="Link Button Test Data" finished-at="2017-02-24T17:14:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-bottom]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@5bf0fe62]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkButtonMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1437" started-at="2017-02-24T17:14:02Z" finished-at="2017-02-24T17:14:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.linkButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:14:02Z" finished-at="2017-02-24T17:14:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="linkButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="linkButtonMobileTest" duration-ms="1405" started-at="2017-02-24T17:14:04Z" data-provider="Link Button Test Data" finished-at="2017-02-24T17:14:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-left]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@1e097d59]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:14:05Z" finished-at="2017-02-24T17:14:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1008" started-at="2017-02-24T17:14:05Z" finished-at="2017-02-24T17:14:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.linkButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="linkButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="linkButtonMobileTest" duration-ms="1440" started-at="2017-02-24T17:14:06Z" data-provider="Link Button Test Data" finished-at="2017-02-24T17:14:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-right]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@673be18f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:14:07Z" finished-at="2017-02-24T17:14:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="2980" started-at="2017-02-24T17:14:07Z" finished-at="2017-02-24T17:14:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.mixAndMatchButtonsMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="mixAndMatchButtonsMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="mixAndMatchButtonsMobileTest" duration-ms="2795" started-at="2017-02-24T17:14:10Z" data-provider="Mix and Match Buttons Test Data" finished-at="2017-02-24T17:14:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[small-with-cta]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: small-btn-withCTA]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@6ce86ce1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@54e7df6a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mixAndMatchButtonsMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:14:13Z" finished-at="2017-02-24T17:14:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1019" started-at="2017-02-24T17:14:13Z" finished-at="2017-02-24T17:14:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.mixAndMatchButtonsMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="mixAndMatchButtonsMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="mixAndMatchButtonsMobileTest" duration-ms="2893" started-at="2017-02-24T17:14:14Z" data-provider="Mix and Match Buttons Test Data" finished-at="2017-02-24T17:14:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[xlarge-with-primary]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: xLarge-btn-withPrimary]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@3fed2870]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@77128536]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mixAndMatchButtonsMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:14:17Z" finished-at="2017-02-24T17:14:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1053" started-at="2017-02-24T17:14:17Z" finished-at="2017-02-24T17:14:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.mixAndMatchButtonsMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="mixAndMatchButtonsMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="mixAndMatchButtonsMobileTest" duration-ms="2855" started-at="2017-02-24T17:14:18Z" data-provider="Mix and Match Buttons Test Data" finished-at="2017-02-24T17:14:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[large-with-primary-disabled]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: large-btn-withPrimary-disabled]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@58326051]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@32c4e8b2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mixAndMatchButtonsMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:14:21Z" finished-at="2017-02-24T17:14:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1128" started-at="2017-02-24T17:14:21Z" finished-at="2017-02-24T17:14:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonDisabledStateMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="primaryButtonDisabledStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="primaryButtonDisabledStateMobileTest" duration-ms="1470" started-at="2017-02-24T17:14:22Z" data-provider="Primary Button-Disabled Test Data" finished-at="2017-02-24T17:14:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@ab7395e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonDisabledStateMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1078" started-at="2017-02-24T17:14:24Z" finished-at="2017-02-24T17:14:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonDisabledStateMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:14:24Z" finished-at="2017-02-24T17:14:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="primaryButtonDisabledStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="primaryButtonDisabledStateMobileTest" duration-ms="1411" started-at="2017-02-24T17:14:25Z" data-provider="Primary Button-Disabled Test Data" finished-at="2017-02-24T17:14:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[background-color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@50d13246]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonDisabledStateMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:14:26Z" finished-at="2017-02-24T17:14:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1228" started-at="2017-02-24T17:14:26Z" finished-at="2017-02-24T17:14:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonDisabledStateMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="primaryButtonDisabledStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="primaryButtonDisabledStateMobileTest" duration-ms="1433" started-at="2017-02-24T17:14:27Z" data-provider="Primary Button-Disabled Test Data" finished-at="2017-02-24T17:14:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-top-width]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@2bd08376]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonDisabledStateMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:14:29Z" finished-at="2017-02-24T17:14:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1160" started-at="2017-02-24T17:14:29Z" finished-at="2017-02-24T17:14:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonDisabledStateMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="primaryButtonDisabledStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="primaryButtonDisabledStateMobileTest" duration-ms="1413" started-at="2017-02-24T17:14:30Z" data-provider="Primary Button-Disabled Test Data" finished-at="2017-02-24T17:14:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-bottom-width]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@e70f13a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonDisabledStateMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:14:31Z" finished-at="2017-02-24T17:14:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1356" started-at="2017-02-24T17:14:31Z" finished-at="2017-02-24T17:14:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonDisabledStateMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="primaryButtonDisabledStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="primaryButtonDisabledStateMobileTest" duration-ms="1457" started-at="2017-02-24T17:14:33Z" data-provider="Primary Button-Disabled Test Data" finished-at="2017-02-24T17:14:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-left-width]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@3d3e5463]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonDisabledStateMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:14:34Z" finished-at="2017-02-24T17:14:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1200" started-at="2017-02-24T17:14:34Z" finished-at="2017-02-24T17:14:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonDisabledStateMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="primaryButtonDisabledStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="primaryButtonDisabledStateMobileTest" duration-ms="1413" started-at="2017-02-24T17:14:35Z" data-provider="Primary Button-Disabled Test Data" finished-at="2017-02-24T17:14:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-right-width]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@64a40280]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonDisabledStateMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:14:37Z" finished-at="2017-02-24T17:14:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1349" started-at="2017-02-24T17:14:37Z" finished-at="2017-02-24T17:14:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonDisabledStateMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="primaryButtonDisabledStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="primaryButtonDisabledStateMobileTest" duration-ms="1486" started-at="2017-02-24T17:14:38Z" data-provider="Primary Button-Disabled Test Data" finished-at="2017-02-24T17:14:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[box-shadow]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@4b40f651]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonDisabledStateMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1420" started-at="2017-02-24T17:14:40Z" finished-at="2017-02-24T17:14:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonDisabledStateMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:14:40Z" finished-at="2017-02-24T17:14:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="primaryButtonDisabledStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="primaryButtonDisabledStateMobileTest" duration-ms="1461" started-at="2017-02-24T17:14:41Z" data-provider="Primary Button-Disabled Test Data" finished-at="2017-02-24T17:14:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[text-decoration]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@42b02722]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonDisabledStateMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:14:43Z" finished-at="2017-02-24T17:14:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1359" started-at="2017-02-24T17:14:43Z" finished-at="2017-02-24T17:14:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonDisabledStateMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="primaryButtonDisabledStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="primaryButtonDisabledStateMobileTest" duration-ms="1436" started-at="2017-02-24T17:14:44Z" data-provider="Primary Button-Disabled Test Data" finished-at="2017-02-24T17:14:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[cursor]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@d62fe5b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonDisabledStateMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:14:45Z" finished-at="2017-02-24T17:14:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1137" started-at="2017-02-24T17:14:45Z" finished-at="2017-02-24T17:14:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="primaryButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="primaryButtonMobileTest" duration-ms="1449" started-at="2017-02-24T17:14:46Z" data-provider="Primary Button Test Data" finished-at="2017-02-24T17:14:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@49964d75]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:14:48Z" finished-at="2017-02-24T17:14:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1100" started-at="2017-02-24T17:14:48Z" finished-at="2017-02-24T17:14:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="primaryButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="primaryButtonMobileTest" duration-ms="1438" started-at="2017-02-24T17:14:49Z" data-provider="Primary Button Test Data" finished-at="2017-02-24T17:14:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[background-color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@528c868]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:14:50Z" finished-at="2017-02-24T17:14:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1311" started-at="2017-02-24T17:14:50Z" finished-at="2017-02-24T17:14:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="primaryButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="primaryButtonMobileTest" duration-ms="1447" started-at="2017-02-24T17:14:52Z" data-provider="Primary Button Test Data" finished-at="2017-02-24T17:14:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-top-style]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@466276d8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1092" started-at="2017-02-24T17:14:53Z" finished-at="2017-02-24T17:14:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:14:53Z" finished-at="2017-02-24T17:14:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="primaryButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="primaryButtonMobileTest" duration-ms="1419" started-at="2017-02-24T17:14:54Z" data-provider="Primary Button Test Data" finished-at="2017-02-24T17:14:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-bottom-style]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@5ce8d869]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1274" started-at="2017-02-24T17:14:56Z" finished-at="2017-02-24T17:14:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:14:56Z" finished-at="2017-02-24T17:14:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="primaryButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="primaryButtonMobileTest" duration-ms="1391" started-at="2017-02-24T17:14:57Z" data-provider="Primary Button Test Data" finished-at="2017-02-24T17:14:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-left-style]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@27eedb64]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1095" started-at="2017-02-24T17:14:58Z" finished-at="2017-02-24T17:14:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:14:58Z" finished-at="2017-02-24T17:14:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="primaryButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="primaryButtonMobileTest" duration-ms="1397" started-at="2017-02-24T17:14:59Z" data-provider="Primary Button Test Data" finished-at="2017-02-24T17:15:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-right-style]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@64c63c79]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:15:01Z" finished-at="2017-02-24T17:15:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1017" started-at="2017-02-24T17:15:01Z" finished-at="2017-02-24T17:15:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="primaryButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="primaryButtonMobileTest" duration-ms="1409" started-at="2017-02-24T17:15:02Z" data-provider="Primary Button Test Data" finished-at="2017-02-24T17:15:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-bottom-left-radius]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@31c7528f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:15:03Z" finished-at="2017-02-24T17:15:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1198" started-at="2017-02-24T17:15:03Z" finished-at="2017-02-24T17:15:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="primaryButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="primaryButtonMobileTest" duration-ms="1409" started-at="2017-02-24T17:15:05Z" data-provider="Primary Button Test Data" finished-at="2017-02-24T17:15:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-bottom-right-radius]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@2b76ff4e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:15:06Z" finished-at="2017-02-24T17:15:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1218" started-at="2017-02-24T17:15:06Z" finished-at="2017-02-24T17:15:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="primaryButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="primaryButtonMobileTest" duration-ms="1563" started-at="2017-02-24T17:15:07Z" data-provider="Primary Button Test Data" finished-at="2017-02-24T17:15:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-top-left-radius]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@7a1234bf]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1111" started-at="2017-02-24T17:15:09Z" finished-at="2017-02-24T17:15:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:15:09Z" finished-at="2017-02-24T17:15:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="primaryButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="primaryButtonMobileTest" duration-ms="1382" started-at="2017-02-24T17:15:10Z" data-provider="Primary Button Test Data" finished-at="2017-02-24T17:15:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-top-right-radius]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@2f62ea70]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:15:11Z" finished-at="2017-02-24T17:15:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1057" started-at="2017-02-24T17:15:11Z" finished-at="2017-02-24T17:15:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="primaryButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="primaryButtonMobileTest" duration-ms="1396" started-at="2017-02-24T17:15:12Z" data-provider="Primary Button Test Data" finished-at="2017-02-24T17:15:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[text-decoration]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@24ba9639]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1107" started-at="2017-02-24T17:15:14Z" finished-at="2017-02-24T17:15:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:15:14Z" finished-at="2017-02-24T17:15:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="primaryButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="primaryButtonMobileTest" duration-ms="1433" started-at="2017-02-24T17:15:15Z" data-provider="Primary Button Test Data" finished-at="2017-02-24T17:15:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[text-overflow]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@38aa816f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:15:16Z" finished-at="2017-02-24T17:15:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1012" started-at="2017-02-24T17:15:16Z" finished-at="2017-02-24T17:15:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="primaryButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="primaryButtonMobileTest" duration-ms="1391" started-at="2017-02-24T17:15:17Z" data-provider="Primary Button Test Data" finished-at="2017-02-24T17:15:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[white-space]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@53f6fd09]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:15:19Z" finished-at="2017-02-24T17:15:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1121" started-at="2017-02-24T17:15:19Z" finished-at="2017-02-24T17:15:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="primaryButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="primaryButtonMobileTest" duration-ms="1400" started-at="2017-02-24T17:15:20Z" data-provider="Primary Button Test Data" finished-at="2017-02-24T17:15:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[display]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@6bffbc6d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:15:21Z" finished-at="2017-02-24T17:15:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1045" started-at="2017-02-24T17:15:21Z" finished-at="2017-02-24T17:15:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="primaryButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="primaryButtonMobileTest" duration-ms="1386" started-at="2017-02-24T17:15:22Z" data-provider="Primary Button Test Data" finished-at="2017-02-24T17:15:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[vertical-align]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@1b84f475]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1070" started-at="2017-02-24T17:15:24Z" finished-at="2017-02-24T17:15:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:15:24Z" finished-at="2017-02-24T17:15:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="primaryButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="primaryButtonMobileTest" duration-ms="1388" started-at="2017-02-24T17:15:25Z" data-provider="Primary Button Test Data" finished-at="2017-02-24T17:15:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[cursor]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@7749bf93]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:15:26Z" finished-at="2017-02-24T17:15:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1252" started-at="2017-02-24T17:15:26Z" finished-at="2017-02-24T17:15:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="primaryButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="primaryButtonMobileTest" duration-ms="1390" started-at="2017-02-24T17:15:27Z" data-provider="Primary Button Test Data" finished-at="2017-02-24T17:15:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[font-size]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@13330ac6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:15:29Z" finished-at="2017-02-24T17:15:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1023" started-at="2017-02-24T17:15:29Z" finished-at="2017-02-24T17:15:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="primaryButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="primaryButtonMobileTest" duration-ms="1410" started-at="2017-02-24T17:15:30Z" data-provider="Primary Button Test Data" finished-at="2017-02-24T17:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[height]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@539d019]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:15:31Z" finished-at="2017-02-24T17:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1018" started-at="2017-02-24T17:15:31Z" finished-at="2017-02-24T17:15:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="primaryButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="primaryButtonMobileTest" duration-ms="1449" started-at="2017-02-24T17:15:32Z" data-provider="Primary Button Test Data" finished-at="2017-02-24T17:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[line-height]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@39a2bb97]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:15:34Z" finished-at="2017-02-24T17:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="998" started-at="2017-02-24T17:15:34Z" finished-at="2017-02-24T17:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="primaryButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="primaryButtonMobileTest" duration-ms="1415" started-at="2017-02-24T17:15:35Z" data-provider="Primary Button Test Data" finished-at="2017-02-24T17:15:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-top]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@3ad2e17]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:15:36Z" finished-at="2017-02-24T17:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1045" started-at="2017-02-24T17:15:36Z" finished-at="2017-02-24T17:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="primaryButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="primaryButtonMobileTest" duration-ms="3497" started-at="2017-02-24T17:15:37Z" data-provider="Primary Button Test Data" finished-at="2017-02-24T17:15:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-bottom]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@8c3619e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:15:41Z" finished-at="2017-02-24T17:15:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1038" started-at="2017-02-24T17:15:41Z" finished-at="2017-02-24T17:15:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="primaryButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="primaryButtonMobileTest" duration-ms="1396" started-at="2017-02-24T17:15:42Z" data-provider="Primary Button Test Data" finished-at="2017-02-24T17:15:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-left]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@4331d187]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1075" started-at="2017-02-24T17:15:43Z" finished-at="2017-02-24T17:15:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:15:43Z" finished-at="2017-02-24T17:15:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="primaryButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="primaryButtonMobileTest" duration-ms="1443" started-at="2017-02-24T17:15:44Z" data-provider="Primary Button Test Data" finished-at="2017-02-24T17:15:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-right]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@6f63b475]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:15:45Z" finished-at="2017-02-24T17:15:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1216" started-at="2017-02-24T17:15:45Z" finished-at="2017-02-24T17:15:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.smallButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="smallButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="smallButtonMobileTest" duration-ms="1386" started-at="2017-02-24T17:15:47Z" data-provider="Small Button Test Data" finished-at="2017-02-24T17:15:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[font-size]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@16fdec90]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smallButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:15:48Z" finished-at="2017-02-24T17:15:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1034" started-at="2017-02-24T17:15:48Z" finished-at="2017-02-24T17:15:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.smallButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="smallButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="smallButtonMobileTest" duration-ms="1439" started-at="2017-02-24T17:15:49Z" data-provider="Small Button Test Data" finished-at="2017-02-24T17:15:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[height]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@1afdd473]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smallButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:15:51Z" finished-at="2017-02-24T17:15:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1192" started-at="2017-02-24T17:15:51Z" finished-at="2017-02-24T17:15:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.smallButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="smallButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="smallButtonMobileTest" duration-ms="1425" started-at="2017-02-24T17:15:52Z" data-provider="Small Button Test Data" finished-at="2017-02-24T17:15:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[line-height]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@40238dd0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smallButtonMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1284" started-at="2017-02-24T17:15:53Z" finished-at="2017-02-24T17:15:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.smallButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:15:53Z" finished-at="2017-02-24T17:15:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="smallButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="smallButtonMobileTest" duration-ms="1472" started-at="2017-02-24T17:15:54Z" data-provider="Small Button Test Data" finished-at="2017-02-24T17:15:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-top]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@7776ab]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smallButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:15:56Z" finished-at="2017-02-24T17:15:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1090" started-at="2017-02-24T17:15:56Z" finished-at="2017-02-24T17:15:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.smallButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="smallButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="smallButtonMobileTest" duration-ms="1401" started-at="2017-02-24T17:15:57Z" data-provider="Small Button Test Data" finished-at="2017-02-24T17:15:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-bottom]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@79179359]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smallButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:15:58Z" finished-at="2017-02-24T17:15:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1102" started-at="2017-02-24T17:15:58Z" finished-at="2017-02-24T17:16:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.smallButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="smallButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="smallButtonMobileTest" duration-ms="1437" started-at="2017-02-24T17:16:00Z" data-provider="Small Button Test Data" finished-at="2017-02-24T17:16:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-left]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@dbd8e44]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smallButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:16:01Z" finished-at="2017-02-24T17:16:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1412" started-at="2017-02-24T17:16:01Z" finished-at="2017-02-24T17:16:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.smallButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="smallButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="smallButtonMobileTest" duration-ms="1461" started-at="2017-02-24T17:16:02Z" data-provider="Small Button Test Data" finished-at="2017-02-24T17:16:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-right]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@51acdf2e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smallButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:16:04Z" finished-at="2017-02-24T17:16:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1067" started-at="2017-02-24T17:16:04Z" finished-at="2017-02-24T17:16:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.xLargeButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xLargeButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="xLargeButtonMobileTest" duration-ms="2594" started-at="2017-02-24T17:16:05Z" data-provider="XLarge Button Test Data" finished-at="2017-02-24T17:16:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[font-size]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@79d94571]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xLargeButtonMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="2062" started-at="2017-02-24T17:16:07Z" finished-at="2017-02-24T17:16:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.xLargeButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:16:07Z" finished-at="2017-02-24T17:16:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="xLargeButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="xLargeButtonMobileTest" duration-ms="2577" started-at="2017-02-24T17:16:10Z" data-provider="XLarge Button Test Data" finished-at="2017-02-24T17:16:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[height]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@4dd02341]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xLargeButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:16:12Z" finished-at="2017-02-24T17:16:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1241" started-at="2017-02-24T17:16:12Z" finished-at="2017-02-24T17:16:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.xLargeButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xLargeButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="xLargeButtonMobileTest" duration-ms="2511" started-at="2017-02-24T17:16:13Z" data-provider="XLarge Button Test Data" finished-at="2017-02-24T17:16:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[line-height]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@3212a8d7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xLargeButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:16:16Z" finished-at="2017-02-24T17:16:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1127" started-at="2017-02-24T17:16:16Z" finished-at="2017-02-24T17:16:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.xLargeButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xLargeButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="xLargeButtonMobileTest" duration-ms="2815" started-at="2017-02-24T17:16:17Z" data-provider="XLarge Button Test Data" finished-at="2017-02-24T17:16:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-top]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@7a1a3478]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xLargeButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:16:20Z" finished-at="2017-02-24T17:16:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1354" started-at="2017-02-24T17:16:20Z" finished-at="2017-02-24T17:16:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.xLargeButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xLargeButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="xLargeButtonMobileTest" duration-ms="2696" started-at="2017-02-24T17:16:21Z" data-provider="XLarge Button Test Data" finished-at="2017-02-24T17:16:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-bottom]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@495b0487]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xLargeButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:16:24Z" finished-at="2017-02-24T17:16:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1248" started-at="2017-02-24T17:16:24Z" finished-at="2017-02-24T17:16:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.xLargeButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xLargeButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="xLargeButtonMobileTest" duration-ms="2864" started-at="2017-02-24T17:16:25Z" data-provider="XLarge Button Test Data" finished-at="2017-02-24T17:16:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-left]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@55dfcc6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xLargeButtonMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="beforeMethod" is-config="true" duration-ms="1117" started-at="2017-02-24T17:16:28Z" finished-at="2017-02-24T17:16:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.xLargeButtonMobileTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:16:28Z" finished-at="2017-02-24T17:16:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="xLargeButtonMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="xLargeButtonMobileTest" duration-ms="2936" started-at="2017-02-24T17:16:29Z" data-provider="XLarge Button Test Data" finished-at="2017-02-24T17:16:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-right]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@222eb8aa]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xLargeButtonMobileTest -->
        <test-method status="PASS" signature="tearDown(java.lang.String)[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="tearDown" is-config="true" duration-ms="1517" started-at="2017-02-24T17:16:32Z" finished-at="2017-02-24T17:16:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@27808f31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:16:32Z" finished-at="2017-02-24T17:16:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- elementsTests.ButtonsTest -->
      <class name="elementsTests.InputsTest">
        <test-method status="PASS" signature="setUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="setUp" is-config="true" duration-ms="80360" started-at="2017-02-24T17:08:17Z" finished-at="2017-02-24T17:09:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sauce]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[off]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OS X 10.11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[54.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[iOS]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[iPhone 6 Plus]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[9.3]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[safari]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[1.5.3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="InputsTestBeforeClass(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="InputsTestBeforeClass" is-config="true" duration-ms="0" started-at="2017-02-24T17:09:38Z" finished-at="2017-02-24T17:09:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OS X 10.11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[iOS]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InputsTestBeforeClass -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1486" started-at="2017-02-24T17:09:38Z" finished-at="2017-02-24T17:09:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.basicInputActiveMobileTest(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="basicInputActiveMobileTest(java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, [Ljava.lang.String;, java.lang.String, [Ljava.lang.String;, java.lang.String)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="basicInputActiveMobileTest" duration-ms="40148" started-at="2017-02-24T17:09:39Z" data-provider="Inputs - Basic (single line - Active) Test Data" finished-at="2017-02-24T17:10:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1px]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[solid]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@41294f8]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@225129c]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[6px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[14px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[14px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[[Ljava.lang.String;@20435c40]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[3px]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[[Ljava.lang.String;@573906eb]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[18px]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[[Ljava.lang.String;@479ceda0]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[12px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- basicInputActiveMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:10:19Z" finished-at="2017-02-24T17:10:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1085" started-at="2017-02-24T17:10:19Z" finished-at="2017-02-24T17:10:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.basicInputDisabledMobileTest(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="basicInputDisabledMobileTest(java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, [Ljava.lang.String;, java.lang.String)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="basicInputDisabledMobileTest" duration-ms="35369" started-at="2017-02-24T17:10:20Z" data-provider="Inputs - Basic (single line - disabled) Test Data" finished-at="2017-02-24T17:10:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1px]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[solid]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@6d07a63d]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@571c5681]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[6px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[14px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[14px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[[Ljava.lang.String;@488d1cd7]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[3px]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[[Ljava.lang.String;@68dc098b]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[14px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- basicInputDisabledMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:10:56Z" finished-at="2017-02-24T17:10:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="7172" started-at="2017-02-24T17:10:56Z" finished-at="2017-02-24T17:11:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.basicInputErrorFocusMobileTest(java.lang.String[],java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="basicInputErrorFocusMobileTest([Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="basicInputErrorFocusMobileTest" duration-ms="0" started-at="2017-02-24T17:11:03Z" data-provider="Inputs - Basic (single line - Error Focus) Test Data" finished-at="2017-02-24T17:11:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@4b6690c0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@46268f08]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@2a76840c]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[rgba(219, 0, 32, 1)]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[12px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[the focus-box shadow operation is not supported on iOS]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: the focus-box shadow operation is not supported on iOS
	at elementsTests.InputsTest.basicInputErrorFocusMobileTest(InputsTest.java:1535)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- basicInputErrorFocusMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:03Z" finished-at="2017-02-24T17:11:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1659" started-at="2017-02-24T17:11:03Z" finished-at="2017-02-24T17:11:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.basicInputErrorMobileTest(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="basicInputErrorMobileTest(java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, [Ljava.lang.String;, java.lang.String, [Ljava.lang.String;, java.lang.String)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="basicInputErrorMobileTest" duration-ms="39122" started-at="2017-02-24T17:11:05Z" data-provider="Inputs - Basic (single line - Error) Test Data" finished-at="2017-02-24T17:11:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1px]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[solid]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@38ba6ce3]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@d278d2b]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[6px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[14px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[14px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[[Ljava.lang.String;@2d6c53fc]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[3px]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[[Ljava.lang.String;@25f4878b]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[18px]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[[Ljava.lang.String;@4e423aa2]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[12px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- basicInputErrorMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:44Z" finished-at="2017-02-24T17:11:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1172" started-at="2017-02-24T17:11:44Z" finished-at="2017-02-24T17:11:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.basicInputFocusMobileTest(java.lang.String[],java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:11:45Z" finished-at="2017-02-24T17:11:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="basicInputFocusMobileTest([Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, [Ljava.lang.String;, java.lang.String)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="basicInputFocusMobileTest" duration-ms="0" started-at="2017-02-24T17:11:45Z" data-provider="Inputs - Basic (single line - Focus) Test Data" finished-at="2017-02-24T17:11:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@eda25e5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@7cf6a5f9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@623e088f]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[12px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[the focus-box shadow operation is not supported on iOS]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: the focus-box shadow operation is not supported on iOS
	at elementsTests.InputsTest.basicInputFocusMobileTest(InputsTest.java:1504)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- basicInputFocusMobileTest -->
        <test-method status="SKIP" signature="basicSelectInputFocusMobileTest(java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="basicSelectInputFocusMobileTest" duration-ms="0" started-at="2017-02-24T17:11:45Z" data-provider="Basic Select Input Test (Focus) Test Data" finished-at="2017-02-24T17:11:45Z">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Method private void elementsTests.InputsTest.basicSelectInputFocusMobileTest(java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException requires a @DataProvider named : Basic Select Input Test (Focus) Test Data]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Method private void elementsTests.InputsTest.basicSelectInputFocusMobileTest(java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException requires a @DataProvider named : Basic Select Input Test (Focus) Test Data
	at org.testng.internal.Parameters.findDataProvider(Parameters.java:263)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:419)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1274)
	at org.testng.internal.Invoker.createParameters(Invoker.java:989)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1079)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- basicSelectInputFocusMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1038" started-at="2017-02-24T17:11:45Z" finished-at="2017-02-24T17:11:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.basicSelectInputMobileTest(org.openqa.selenium.ScreenOrientation,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="basicSelectInputMobileTest(org.openqa.selenium.ScreenOrientation, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="basicSelectInputMobileTest" duration-ms="37994" started-at="2017-02-24T17:11:46Z" data-provider="Mobile : Basic Select Input Test Data" finished-at="2017-02-24T17:12:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[36px]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[14px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[14px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[6px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[1px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[solid]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[[Ljava.lang.String;@7fbdb894]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[14px]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[18px]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[[Ljava.lang.String;@3081f72c]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[[Ljava.lang.String;@3148f668]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[[Ljava.lang.String;@6e005dc9]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[12px]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[16px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- basicSelectInputMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:24Z" finished-at="2017-02-24T17:12:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="2104" started-at="2017-02-24T17:12:24Z" finished-at="2017-02-24T17:12:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.basicSelectInputMobileTest(org.openqa.selenium.ScreenOrientation,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="basicSelectInputMobileTest(org.openqa.selenium.ScreenOrientation, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="basicSelectInputMobileTest" duration-ms="40086" started-at="2017-02-24T17:12:26Z" data-provider="Mobile : Basic Select Input Test Data" finished-at="2017-02-24T17:13:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[36px]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[14px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[14px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[6px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[1px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[solid]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[[Ljava.lang.String;@7ceb3185]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[14px]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[18px]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[[Ljava.lang.String;@436c81a3]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[[Ljava.lang.String;@3561c410]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[[Ljava.lang.String;@59e32960]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[12px]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[16px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- basicSelectInputMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:06Z" finished-at="2017-02-24T17:13:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1420" started-at="2017-02-24T17:13:06Z" finished-at="2017-02-24T17:13:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.checkboxDisabledStateMobileTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkboxDisabledStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="checkboxDisabledStateMobileTest" duration-ms="1405" started-at="2017-02-24T17:13:07Z" data-provider="Check Box - Disabled State Test Data" finished-at="2017-02-24T17:13:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[background-color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@7c214cc0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkboxDisabledStateMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1057" started-at="2017-02-24T17:13:09Z" finished-at="2017-02-24T17:13:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.checkboxDisabledStateMobileTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:09Z" finished-at="2017-02-24T17:13:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="checkboxDisabledStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="checkboxDisabledStateMobileTest" duration-ms="1410" started-at="2017-02-24T17:13:10Z" data-provider="Check Box - Disabled State Test Data" finished-at="2017-02-24T17:13:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-top-color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@5b67bb7e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkboxDisabledStateMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1649" started-at="2017-02-24T17:13:11Z" finished-at="2017-02-24T17:13:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.checkboxDisabledStateMobileTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:11Z" finished-at="2017-02-24T17:13:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="checkboxDisabledStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="checkboxDisabledStateMobileTest" duration-ms="1423" started-at="2017-02-24T17:13:13Z" data-provider="Check Box - Disabled State Test Data" finished-at="2017-02-24T17:13:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-bottom-color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@609db546]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkboxDisabledStateMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:14Z" finished-at="2017-02-24T17:13:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1071" started-at="2017-02-24T17:13:14Z" finished-at="2017-02-24T17:13:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.checkboxDisabledStateMobileTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkboxDisabledStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="checkboxDisabledStateMobileTest" duration-ms="1442" started-at="2017-02-24T17:13:15Z" data-provider="Check Box - Disabled State Test Data" finished-at="2017-02-24T17:13:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-left-color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@20f5281c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkboxDisabledStateMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:17Z" finished-at="2017-02-24T17:13:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1073" started-at="2017-02-24T17:13:17Z" finished-at="2017-02-24T17:13:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.checkboxDisabledStateMobileTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkboxDisabledStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="checkboxDisabledStateMobileTest" duration-ms="1415" started-at="2017-02-24T17:13:18Z" data-provider="Check Box - Disabled State Test Data" finished-at="2017-02-24T17:13:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-right-color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@56c4278e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkboxDisabledStateMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:19Z" finished-at="2017-02-24T17:13:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1100" started-at="2017-02-24T17:13:19Z" finished-at="2017-02-24T17:13:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.checkboxFocusStateMobileTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkboxFocusStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="checkboxFocusStateMobileTest" duration-ms="2276" started-at="2017-02-24T17:13:21Z" data-provider="Check Box - Focus State Test Data" finished-at="2017-02-24T17:13:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-top-color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@301eda63]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkboxFocusStateMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:13:23Z" finished-at="2017-02-24T17:13:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1078" started-at="2017-02-24T17:13:23Z" finished-at="2017-02-24T17:13:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.checkboxFocusStateMobileTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkboxFocusStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="checkboxFocusStateMobileTest" duration-ms="2299" started-at="2017-02-24T17:13:24Z" data-provider="Check Box - Focus State Test Data" finished-at="2017-02-24T17:13:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-bottom-color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@3d246ea3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkboxFocusStateMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:13:26Z" finished-at="2017-02-24T17:13:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1068" started-at="2017-02-24T17:13:26Z" finished-at="2017-02-24T17:13:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.checkboxFocusStateMobileTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkboxFocusStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="checkboxFocusStateMobileTest" duration-ms="2254" started-at="2017-02-24T17:13:27Z" data-provider="Check Box - Focus State Test Data" finished-at="2017-02-24T17:13:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-left-color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@341814d3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkboxFocusStateMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:13:29Z" finished-at="2017-02-24T17:13:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1183" started-at="2017-02-24T17:13:29Z" finished-at="2017-02-24T17:13:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.checkboxFocusStateMobileTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkboxFocusStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="checkboxFocusStateMobileTest" duration-ms="2332" started-at="2017-02-24T17:13:31Z" data-provider="Check Box - Focus State Test Data" finished-at="2017-02-24T17:13:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-right-color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@4397ad89]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkboxFocusStateMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:13:33Z" finished-at="2017-02-24T17:13:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1054" started-at="2017-02-24T17:13:33Z" finished-at="2017-02-24T17:13:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.checkboxNormalStateMobileTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkboxNormalStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="checkboxNormalStateMobileTest" duration-ms="1416" started-at="2017-02-24T17:13:34Z" data-provider="Check Box - Normal State Test Data" finished-at="2017-02-24T17:13:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[z-index]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@59cba5a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkboxNormalStateMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1014" started-at="2017-02-24T17:13:35Z" finished-at="2017-02-24T17:13:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.checkboxNormalStateMobileTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:35Z" finished-at="2017-02-24T17:13:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="checkboxNormalStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="checkboxNormalStateMobileTest" duration-ms="1408" started-at="2017-02-24T17:13:36Z" data-provider="Check Box - Normal State Test Data" finished-at="2017-02-24T17:13:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[position]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@1bd39d3c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkboxNormalStateMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1048" started-at="2017-02-24T17:13:38Z" finished-at="2017-02-24T17:13:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.checkboxNormalStateMobileTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:38Z" finished-at="2017-02-24T17:13:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="checkboxNormalStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="checkboxNormalStateMobileTest" duration-ms="1437" started-at="2017-02-24T17:13:39Z" data-provider="Check Box - Normal State Test Data" finished-at="2017-02-24T17:13:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[left]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@6f19ac19]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkboxNormalStateMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:13:40Z" finished-at="2017-02-24T17:13:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1062" started-at="2017-02-24T17:13:40Z" finished-at="2017-02-24T17:13:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.checkboxNormalStateMobileTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkboxNormalStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="checkboxNormalStateMobileTest" duration-ms="1402" started-at="2017-02-24T17:13:41Z" data-provider="Check Box - Normal State Test Data" finished-at="2017-02-24T17:13:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[height]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@119cbf96]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkboxNormalStateMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:43Z" finished-at="2017-02-24T17:13:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1084" started-at="2017-02-24T17:13:43Z" finished-at="2017-02-24T17:13:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.checkboxNormalStateMobileTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkboxNormalStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="checkboxNormalStateMobileTest" duration-ms="1424" started-at="2017-02-24T17:13:44Z" data-provider="Check Box - Normal State Test Data" finished-at="2017-02-24T17:13:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[width]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@71329995]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkboxNormalStateMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:13:45Z" finished-at="2017-02-24T17:13:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1192" started-at="2017-02-24T17:13:45Z" finished-at="2017-02-24T17:13:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.checkboxNormalStateMobileTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkboxNormalStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="checkboxNormalStateMobileTest" duration-ms="1412" started-at="2017-02-24T17:13:47Z" data-provider="Check Box - Normal State Test Data" finished-at="2017-02-24T17:13:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-top-width]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@768fc0f2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkboxNormalStateMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1331" started-at="2017-02-24T17:13:48Z" finished-at="2017-02-24T17:13:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.checkboxNormalStateMobileTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:48Z" finished-at="2017-02-24T17:13:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="checkboxNormalStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="checkboxNormalStateMobileTest" duration-ms="1420" started-at="2017-02-24T17:13:49Z" data-provider="Check Box - Normal State Test Data" finished-at="2017-02-24T17:13:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-bottom-width]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@5454d35e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkboxNormalStateMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:13:51Z" finished-at="2017-02-24T17:13:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1103" started-at="2017-02-24T17:13:51Z" finished-at="2017-02-24T17:13:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.checkboxNormalStateMobileTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkboxNormalStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="checkboxNormalStateMobileTest" duration-ms="1404" started-at="2017-02-24T17:13:52Z" data-provider="Check Box - Normal State Test Data" finished-at="2017-02-24T17:13:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-left-width]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@20c0a64d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkboxNormalStateMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1250" started-at="2017-02-24T17:13:53Z" finished-at="2017-02-24T17:13:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.checkboxNormalStateMobileTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:53Z" finished-at="2017-02-24T17:13:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="checkboxNormalStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="checkboxNormalStateMobileTest" duration-ms="1485" started-at="2017-02-24T17:13:54Z" data-provider="Check Box - Normal State Test Data" finished-at="2017-02-24T17:13:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-right-width]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@455b6df1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkboxNormalStateMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:56Z" finished-at="2017-02-24T17:13:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1100" started-at="2017-02-24T17:13:56Z" finished-at="2017-02-24T17:13:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.checkboxNormalStateMobileTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkboxNormalStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="checkboxNormalStateMobileTest" duration-ms="1404" started-at="2017-02-24T17:13:57Z" data-provider="Check Box - Normal State Test Data" finished-at="2017-02-24T17:13:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-bottom-style]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@4ddbbdf8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkboxNormalStateMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1023" started-at="2017-02-24T17:13:58Z" finished-at="2017-02-24T17:13:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.checkboxNormalStateMobileTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:58Z" finished-at="2017-02-24T17:13:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="checkboxNormalStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="checkboxNormalStateMobileTest" duration-ms="1439" started-at="2017-02-24T17:13:59Z" data-provider="Check Box - Normal State Test Data" finished-at="2017-02-24T17:14:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-top-style]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@3f67593e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkboxNormalStateMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:14:01Z" finished-at="2017-02-24T17:14:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1040" started-at="2017-02-24T17:14:01Z" finished-at="2017-02-24T17:14:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.checkboxNormalStateMobileTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkboxNormalStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="checkboxNormalStateMobileTest" duration-ms="1403" started-at="2017-02-24T17:14:02Z" data-provider="Check Box - Normal State Test Data" finished-at="2017-02-24T17:14:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-left-style]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@1ab06251]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkboxNormalStateMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:14:03Z" finished-at="2017-02-24T17:14:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1086" started-at="2017-02-24T17:14:03Z" finished-at="2017-02-24T17:14:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.checkboxNormalStateMobileTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkboxNormalStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="checkboxNormalStateMobileTest" duration-ms="1417" started-at="2017-02-24T17:14:04Z" data-provider="Check Box - Normal State Test Data" finished-at="2017-02-24T17:14:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-right-style]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@41ab013]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkboxNormalStateMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:14:06Z" finished-at="2017-02-24T17:14:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1038" started-at="2017-02-24T17:14:06Z" finished-at="2017-02-24T17:14:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.checkboxNormalStateMobileTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkboxNormalStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="checkboxNormalStateMobileTest" duration-ms="3192" started-at="2017-02-24T17:14:07Z" data-provider="Check Box - Normal State Test Data" finished-at="2017-02-24T17:14:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-top-color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@14bee915]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkboxNormalStateMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:14:10Z" finished-at="2017-02-24T17:14:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1037" started-at="2017-02-24T17:14:10Z" finished-at="2017-02-24T17:14:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.checkboxNormalStateMobileTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkboxNormalStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="checkboxNormalStateMobileTest" duration-ms="1432" started-at="2017-02-24T17:14:11Z" data-provider="Check Box - Normal State Test Data" finished-at="2017-02-24T17:14:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-bottom-color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@1115ec15]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkboxNormalStateMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:14:13Z" finished-at="2017-02-24T17:14:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1732" started-at="2017-02-24T17:14:13Z" finished-at="2017-02-24T17:14:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.checkboxNormalStateMobileTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkboxNormalStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="checkboxNormalStateMobileTest" duration-ms="1413" started-at="2017-02-24T17:14:14Z" data-provider="Check Box - Normal State Test Data" finished-at="2017-02-24T17:14:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-left-color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@82ea68c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkboxNormalStateMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1801" started-at="2017-02-24T17:14:16Z" finished-at="2017-02-24T17:14:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.checkboxNormalStateMobileTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:14:16Z" finished-at="2017-02-24T17:14:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="checkboxNormalStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="checkboxNormalStateMobileTest" duration-ms="1405" started-at="2017-02-24T17:14:18Z" data-provider="Check Box - Normal State Test Data" finished-at="2017-02-24T17:14:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-right-color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@59e505b2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkboxNormalStateMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1112" started-at="2017-02-24T17:14:19Z" finished-at="2017-02-24T17:14:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.checkboxNormalStateMobileTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:14:19Z" finished-at="2017-02-24T17:14:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="checkboxNormalStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="checkboxNormalStateMobileTest" duration-ms="1453" started-at="2017-02-24T17:14:20Z" data-provider="Check Box - Normal State Test Data" finished-at="2017-02-24T17:14:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-top-left-radius]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@3af0a9da]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkboxNormalStateMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1250" started-at="2017-02-24T17:14:21Z" finished-at="2017-02-24T17:14:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.checkboxNormalStateMobileTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:14:21Z" finished-at="2017-02-24T17:14:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="checkboxNormalStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="checkboxNormalStateMobileTest" duration-ms="1438" started-at="2017-02-24T17:14:23Z" data-provider="Check Box - Normal State Test Data" finished-at="2017-02-24T17:14:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-top-right-radius]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@43b9fd5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkboxNormalStateMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:14:24Z" finished-at="2017-02-24T17:14:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1169" started-at="2017-02-24T17:14:24Z" finished-at="2017-02-24T17:14:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.checkboxNormalStateMobileTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkboxNormalStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="checkboxNormalStateMobileTest" duration-ms="1404" started-at="2017-02-24T17:14:25Z" data-provider="Check Box - Normal State Test Data" finished-at="2017-02-24T17:14:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-bottom-left-radius]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@79dc5318]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkboxNormalStateMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:14:27Z" finished-at="2017-02-24T17:14:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1716" started-at="2017-02-24T17:14:27Z" finished-at="2017-02-24T17:14:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.checkboxNormalStateMobileTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkboxNormalStateMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="checkboxNormalStateMobileTest" duration-ms="1399" started-at="2017-02-24T17:14:28Z" data-provider="Check Box - Normal State Test Data" finished-at="2017-02-24T17:14:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-bottom-right-radius]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@8e50104]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkboxNormalStateMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:14:30Z" finished-at="2017-02-24T17:14:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1039" started-at="2017-02-24T17:14:30Z" finished-at="2017-02-24T17:14:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.inputBoxPasswordHideMobileTest(org.openqa.selenium.ScreenOrientation,java.lang.String,java.lang.String[],java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="inputBoxPasswordHideMobileTest(org.openqa.selenium.ScreenOrientation, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="inputBoxPasswordHideMobileTest" duration-ms="7561" started-at="2017-02-24T17:14:31Z" data-provider="Mobile : Input Box - Password Hide Test Data" finished-at="2017-02-24T17:14:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4px]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@3d9c13b5]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@492691d7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inputBoxPasswordHideMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:14:38Z" finished-at="2017-02-24T17:14:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1920" started-at="2017-02-24T17:14:38Z" finished-at="2017-02-24T17:14:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.inputBoxPasswordHideMobileTest(org.openqa.selenium.ScreenOrientation,java.lang.String,java.lang.String[],java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="inputBoxPasswordHideMobileTest(org.openqa.selenium.ScreenOrientation, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="inputBoxPasswordHideMobileTest" duration-ms="8082" started-at="2017-02-24T17:14:40Z" data-provider="Mobile : Input Box - Password Hide Test Data" finished-at="2017-02-24T17:14:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4px]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@27216cd]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@558bdf1f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inputBoxPasswordHideMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:14:48Z" finished-at="2017-02-24T17:14:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1142" started-at="2017-02-24T17:14:48Z" finished-at="2017-02-24T17:14:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.inputBoxPasswordShowMobileTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="inputBoxPasswordShowMobileTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="inputBoxPasswordShowMobileTest" duration-ms="18270" started-at="2017-02-24T17:14:50Z" data-provider="Mobile : Input Box - Password Show Test Data" finished-at="2017-02-24T17:15:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12px]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[rgba(106, 112, 112, 1)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[8px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[1px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[rgba(106, 112, 112, 1)]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[solid]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[[Ljava.lang.String;@8576fa0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inputBoxPasswordShowMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:15:08Z" finished-at="2017-02-24T17:15:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1201" started-at="2017-02-24T17:15:08Z" finished-at="2017-02-24T17:15:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.inputBoxShowPasswordFocusStateMobileTest() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="inputBoxShowPasswordFocusStateMobileTest()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="inputBoxShowPasswordFocusStateMobileTest" duration-ms="4241" started-at="2017-02-24T17:15:09Z" finished-at="2017-02-24T17:15:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inputBoxShowPasswordFocusStateMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:15:13Z" finished-at="2017-02-24T17:15:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1567" started-at="2017-02-24T17:15:13Z" finished-at="2017-02-24T17:15:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.inputBoxShowPasswordPaddingMobileTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="inputBoxShowPasswordPaddingMobileTest()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="inputBoxShowPasswordPaddingMobileTest" duration-ms="5578" started-at="2017-02-24T17:15:15Z" finished-at="2017-02-24T17:15:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inputBoxShowPasswordPaddingMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:15:20Z" finished-at="2017-02-24T17:15:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1984" started-at="2017-02-24T17:15:20Z" finished-at="2017-02-24T17:15:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.labelForCheckBoxMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="labelForCheckBoxMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, java.lang.String)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="labelForCheckBoxMobileTest" duration-ms="2775" started-at="2017-02-24T17:15:22Z" data-provider="Check Box - Label Test Data" finished-at="2017-02-24T17:15:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[checkbox-unchecked]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.xpath: //label[@for='checkboxInput-unchecked']]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@7582ff54]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[inline-block]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- labelForCheckBoxMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:15:25Z" finished-at="2017-02-24T17:15:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1067" started-at="2017-02-24T17:15:25Z" finished-at="2017-02-24T17:15:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.labelForCheckBoxMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="labelForCheckBoxMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, java.lang.String)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="labelForCheckBoxMobileTest" duration-ms="2847" started-at="2017-02-24T17:15:26Z" data-provider="Check Box - Label Test Data" finished-at="2017-02-24T17:15:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[checkbox-checked]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.xpath: //label[@for='checkboxInput-checked']]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@67545b57]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[inline-block]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- labelForCheckBoxMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:15:29Z" finished-at="2017-02-24T17:15:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1451" started-at="2017-02-24T17:15:29Z" finished-at="2017-02-24T17:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.labelForCheckBoxMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="labelForCheckBoxMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, java.lang.String)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="labelForCheckBoxMobileTest" duration-ms="3637" started-at="2017-02-24T17:15:31Z" data-provider="Check Box - Label Test Data" finished-at="2017-02-24T17:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[checkbox-unchecked-focus]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.xpath: //label[@for='checkboxInput-unchecked-focus']]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@6c2c1385]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[inline-block]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- labelForCheckBoxMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:15:34Z" finished-at="2017-02-24T17:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1095" started-at="2017-02-24T17:15:34Z" finished-at="2017-02-24T17:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.labelForCheckBoxMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="labelForCheckBoxMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, java.lang.String)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="labelForCheckBoxMobileTest" duration-ms="5862" started-at="2017-02-24T17:15:35Z" data-provider="Check Box - Label Test Data" finished-at="2017-02-24T17:15:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[checkbox-checked-focus]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.xpath: //label[@for='checkboxInput-checked-focus']]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@5f354bcf]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[inline-block]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- labelForCheckBoxMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:15:41Z" finished-at="2017-02-24T17:15:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1047" started-at="2017-02-24T17:15:41Z" finished-at="2017-02-24T17:15:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.labelForCheckBoxMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="labelForCheckBoxMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, java.lang.String)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="labelForCheckBoxMobileTest" duration-ms="2863" started-at="2017-02-24T17:15:42Z" data-provider="Check Box - Label Test Data" finished-at="2017-02-24T17:15:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[checkbox-unchecked-disabled]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.xpath: //label[@for='checkboxInput-unchecked-disabled']]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@3daf7722]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[inline-block]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- labelForCheckBoxMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:15:45Z" finished-at="2017-02-24T17:15:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1086" started-at="2017-02-24T17:15:45Z" finished-at="2017-02-24T17:15:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.labelForCheckBoxMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="labelForCheckBoxMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, java.lang.String)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="labelForCheckBoxMobileTest" duration-ms="2809" started-at="2017-02-24T17:15:46Z" data-provider="Check Box - Label Test Data" finished-at="2017-02-24T17:15:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[checkbox-checked-disabled]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.xpath: //label[@for='checkboxInput-checked-disabled']]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@78641d23]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[inline-block]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- labelForCheckBoxMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:15:49Z" finished-at="2017-02-24T17:15:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1097" started-at="2017-02-24T17:15:49Z" finished-at="2017-02-24T17:15:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.labelForCheckBoxMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="labelForCheckBoxMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, java.lang.String)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="labelForCheckBoxMobileTest" duration-ms="2894" started-at="2017-02-24T17:15:50Z" data-provider="Check Box - Label Test Data" finished-at="2017-02-24T17:15:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[checkbox-long-label]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.xpath: //label[@for='longLabel']]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@74589991]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[inline-block]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- labelForCheckBoxMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:15:53Z" finished-at="2017-02-24T17:15:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1106" started-at="2017-02-24T17:15:53Z" finished-at="2017-02-24T17:15:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.multiLineTextInputMobileTest(java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="multiLineTextInputMobileTest(java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="multiLineTextInputMobileTest" duration-ms="33626" started-at="2017-02-24T17:15:54Z" data-provider="MultiLine Input Text Test Data" finished-at="2017-02-24T17:16:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1px]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[solid]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@4f5991f6]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[9px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[14px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[6px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[14px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[[Ljava.lang.String;@484094a5]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[[Ljava.lang.String;@38234a38]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[18px]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[12px]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[16px]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[[Ljava.lang.String;@63fbfaeb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multiLineTextInputMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:16:28Z" finished-at="2017-02-24T17:16:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1820" started-at="2017-02-24T17:16:28Z" finished-at="2017-02-24T17:16:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.multiTextInputFocusMobileTest(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="multiTextInputFocusMobileTest(java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="multiTextInputFocusMobileTest" duration-ms="0" started-at="2017-02-24T17:16:30Z" data-provider="Multi Text Input (Focus) Test Data" finished-at="2017-02-24T17:16:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1px]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[solid]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@112f364d]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@5ccbeb64]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[the focus-box shadow operation is not supported on iOS]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: the focus-box shadow operation is not supported on iOS
	at elementsTests.InputsTest.multiTextInputFocusMobileTest(InputsTest.java:1734)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multiTextInputFocusMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:16:30Z" finished-at="2017-02-24T17:16:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1265" started-at="2017-02-24T17:16:30Z" finished-at="2017-02-24T17:16:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.singleLineInputUnderlineMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="singleLineInputUnderlineMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="singleLineInputUnderlineMobileTest" duration-ms="9793" started-at="2017-02-24T17:16:31Z" data-provider="Single Line Input - underline Test Data" finished-at="2017-02-24T17:16:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[input-underline]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: input-underline]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@22356acd]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[block]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@386f0da3]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@39655d3e]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[[Ljava.lang.String;@34f22f9d]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[all]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[ease]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleLineInputUnderlineMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:16:41Z" finished-at="2017-02-24T17:16:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1036" started-at="2017-02-24T17:16:41Z" finished-at="2017-02-24T17:16:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.singleLineInputUnderlineMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="singleLineInputUnderlineMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="singleLineInputUnderlineMobileTest" duration-ms="10033" started-at="2017-02-24T17:16:42Z" data-provider="Single Line Input - underline Test Data" finished-at="2017-02-24T17:16:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[input-underline-error]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: input-underline-error]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@3d1848cc]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[block]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@7dda48d9]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@6e4566f1]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[[Ljava.lang.String;@4b6e2263]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[all]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[ease]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleLineInputUnderlineMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:16:52Z" finished-at="2017-02-24T17:16:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="2108" started-at="2017-02-24T17:16:52Z" finished-at="2017-02-24T17:16:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.slInputDisabledMobileTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="slInputDisabledMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="slInputDisabledMobileTest" duration-ms="1423" started-at="2017-02-24T17:16:54Z" data-provider="Single Line Input Disabled Test Data" finished-at="2017-02-24T17:16:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-bottom-width]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@344f4dea]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slInputDisabledMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:16:55Z" finished-at="2017-02-24T17:16:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1859" started-at="2017-02-24T17:16:55Z" finished-at="2017-02-24T17:16:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.slInputDisabledMobileTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="slInputDisabledMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="slInputDisabledMobileTest" duration-ms="1417" started-at="2017-02-24T17:16:57Z" data-provider="Single Line Input Disabled Test Data" finished-at="2017-02-24T17:16:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-bottom-style]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@1b7c473a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slInputDisabledMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:16:58Z" finished-at="2017-02-24T17:16:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1592" started-at="2017-02-24T17:16:58Z" finished-at="2017-02-24T17:17:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.slInputDisabledMobileTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="slInputDisabledMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="slInputDisabledMobileTest" duration-ms="1488" started-at="2017-02-24T17:17:00Z" data-provider="Single Line Input Disabled Test Data" finished-at="2017-02-24T17:17:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-bottom-color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@5e4bd84a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slInputDisabledMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:17:02Z" finished-at="2017-02-24T17:17:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1423" started-at="2017-02-24T17:17:02Z" finished-at="2017-02-24T17:17:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.slInputDisabledMobileTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="slInputDisabledMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="slInputDisabledMobileTest" duration-ms="1400" started-at="2017-02-24T17:17:03Z" data-provider="Single Line Input Disabled Test Data" finished-at="2017-02-24T17:17:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@648c94da]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slInputDisabledMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:17:04Z" finished-at="2017-02-24T17:17:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1114" started-at="2017-02-24T17:17:04Z" finished-at="2017-02-24T17:17:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.slInputDisabledMobileTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="slInputDisabledMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="slInputDisabledMobileTest" duration-ms="3017" started-at="2017-02-24T17:17:06Z" data-provider="Single Line Input Disabled Test Data" finished-at="2017-02-24T17:17:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[background-color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@2a62b5bc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slInputDisabledMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1215" started-at="2017-02-24T17:17:09Z" finished-at="2017-02-24T17:17:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.slInputDisabledMobileTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:17:09Z" finished-at="2017-02-24T17:17:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="slInputDisabledMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="slInputDisabledMobileTest" duration-ms="1397" started-at="2017-02-24T17:17:10Z" data-provider="Single Line Input Disabled Test Data" finished-at="2017-02-24T17:17:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[font-family]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@53de625d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slInputDisabledMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:17:11Z" finished-at="2017-02-24T17:17:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1113" started-at="2017-02-24T17:17:11Z" finished-at="2017-02-24T17:17:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.slInputErroredMobileTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="slInputErroredMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="slInputErroredMobileTest" duration-ms="1485" started-at="2017-02-24T17:17:12Z" data-provider="Single Line Input Errored Test Data" finished-at="2017-02-24T17:17:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-bottom-width]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@535779e4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slInputErroredMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:17:14Z" finished-at="2017-02-24T17:17:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1122" started-at="2017-02-24T17:17:14Z" finished-at="2017-02-24T17:17:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.slInputErroredMobileTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="slInputErroredMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="slInputErroredMobileTest" duration-ms="1408" started-at="2017-02-24T17:17:15Z" data-provider="Single Line Input Errored Test Data" finished-at="2017-02-24T17:17:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-bottom-style]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@53fd0d10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slInputErroredMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:17:16Z" finished-at="2017-02-24T17:17:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1038" started-at="2017-02-24T17:17:16Z" finished-at="2017-02-24T17:17:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.slInputErroredMobileTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="slInputErroredMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="slInputErroredMobileTest" duration-ms="1530" started-at="2017-02-24T17:17:17Z" data-provider="Single Line Input Errored Test Data" finished-at="2017-02-24T17:17:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-bottom-color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@6c0d9d86]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slInputErroredMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:17:19Z" finished-at="2017-02-24T17:17:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1118" started-at="2017-02-24T17:17:19Z" finished-at="2017-02-24T17:17:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.slInputErroredMobileTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="slInputErroredMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="slInputErroredMobileTest" duration-ms="1399" started-at="2017-02-24T17:17:20Z" data-provider="Single Line Input Errored Test Data" finished-at="2017-02-24T17:17:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[font-size]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@4ce1d6d0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slInputErroredMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:17:21Z" finished-at="2017-02-24T17:17:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="2009" started-at="2017-02-24T17:17:21Z" finished-at="2017-02-24T17:17:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.slInputErroredMobileTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="slInputErroredMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="slInputErroredMobileTest" duration-ms="1533" started-at="2017-02-24T17:17:23Z" data-provider="Single Line Input Errored Test Data" finished-at="2017-02-24T17:17:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@24111ef1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slInputErroredMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:17:25Z" finished-at="2017-02-24T17:17:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1821" started-at="2017-02-24T17:17:25Z" finished-at="2017-02-24T17:17:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.slInputErroredMobileTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="slInputErroredMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="slInputErroredMobileTest" duration-ms="1420" started-at="2017-02-24T17:17:27Z" data-provider="Single Line Input Errored Test Data" finished-at="2017-02-24T17:17:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-top-style]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@1f3f02ee]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slInputErroredMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:17:28Z" finished-at="2017-02-24T17:17:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1223" started-at="2017-02-24T17:17:28Z" finished-at="2017-02-24T17:17:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.slInputErroredMobileTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="slInputErroredMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="slInputErroredMobileTest" duration-ms="1403" started-at="2017-02-24T17:17:29Z" data-provider="Single Line Input Errored Test Data" finished-at="2017-02-24T17:17:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-right-style]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@1fde5d22]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slInputErroredMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1091" started-at="2017-02-24T17:17:31Z" finished-at="2017-02-24T17:17:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.slInputErroredMobileTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:17:31Z" finished-at="2017-02-24T17:17:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="slInputErroredMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="slInputErroredMobileTest" duration-ms="1408" started-at="2017-02-24T17:17:32Z" data-provider="Single Line Input Errored Test Data" finished-at="2017-02-24T17:17:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-left-style]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@5dcb4f5f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slInputErroredMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1049" started-at="2017-02-24T17:17:33Z" finished-at="2017-02-24T17:17:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.slInputErroredMobileTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:17:33Z" finished-at="2017-02-24T17:17:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="slInputErroredMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="slInputErroredMobileTest" duration-ms="1440" started-at="2017-02-24T17:17:34Z" data-provider="Single Line Input Errored Test Data" finished-at="2017-02-24T17:17:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-top]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@71812481]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slInputErroredMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:17:36Z" finished-at="2017-02-24T17:17:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1286" started-at="2017-02-24T17:17:36Z" finished-at="2017-02-24T17:17:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.slInputErroredMobileTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="slInputErroredMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="slInputErroredMobileTest" duration-ms="1513" started-at="2017-02-24T17:17:37Z" data-provider="Single Line Input Errored Test Data" finished-at="2017-02-24T17:17:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-right]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@16ce702d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slInputErroredMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:17:39Z" finished-at="2017-02-24T17:17:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1201" started-at="2017-02-24T17:17:39Z" finished-at="2017-02-24T17:17:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.slInputErroredMobileTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="slInputErroredMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="slInputErroredMobileTest" duration-ms="1524" started-at="2017-02-24T17:17:40Z" data-provider="Single Line Input Errored Test Data" finished-at="2017-02-24T17:17:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-bottom]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@7b94089b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slInputErroredMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:17:41Z" finished-at="2017-02-24T17:17:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1550" started-at="2017-02-24T17:17:41Z" finished-at="2017-02-24T17:17:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.slInputErroredMobileTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="slInputErroredMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="slInputErroredMobileTest" duration-ms="1426" started-at="2017-02-24T17:17:43Z" data-provider="Single Line Input Errored Test Data" finished-at="2017-02-24T17:17:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-left]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@7ca20101]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slInputErroredMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:17:44Z" finished-at="2017-02-24T17:17:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1597" started-at="2017-02-24T17:17:44Z" finished-at="2017-02-24T17:17:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.slInputErroredMobileTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="slInputErroredMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="slInputErroredMobileTest" duration-ms="1505" started-at="2017-02-24T17:17:46Z" data-provider="Single Line Input Errored Test Data" finished-at="2017-02-24T17:17:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[font-family]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@47f9738]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slInputErroredMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:17:47Z" finished-at="2017-02-24T17:17:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1232" started-at="2017-02-24T17:17:47Z" finished-at="2017-02-24T17:17:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.slInputMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="slInputMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="slInputMobileTest" duration-ms="2804" started-at="2017-02-24T17:17:49Z" data-provider="Single Line Input Wi/Wo Values Test Data" finished-at="2017-02-24T17:17:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[input-with-value]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: sl-text-input]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@6155d082]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@3a5ecce3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slInputMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1072" started-at="2017-02-24T17:17:51Z" finished-at="2017-02-24T17:17:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.slInputMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:17:51Z" finished-at="2017-02-24T17:17:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="slInputMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="slInputMobileTest" duration-ms="2824" started-at="2017-02-24T17:17:52Z" data-provider="Single Line Input Wi/Wo Values Test Data" finished-at="2017-02-24T17:17:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[input-without-value]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: sl-text-input-without-value]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@561868a0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@2ea6e30c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slInputMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:17:55Z" finished-at="2017-02-24T17:17:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1697" started-at="2017-02-24T17:17:55Z" finished-at="2017-02-24T17:17:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.slInputReadOnlyMobileTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="slInputReadOnlyMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="slInputReadOnlyMobileTest" duration-ms="1399" started-at="2017-02-24T17:17:57Z" data-provider="Single Line Input ReadOnly Test Data" finished-at="2017-02-24T17:17:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-bottom-width]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@6138e79a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slInputReadOnlyMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:17:58Z" finished-at="2017-02-24T17:17:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1356" started-at="2017-02-24T17:17:58Z" finished-at="2017-02-24T17:18:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.slInputReadOnlyMobileTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="slInputReadOnlyMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="slInputReadOnlyMobileTest" duration-ms="1422" started-at="2017-02-24T17:18:00Z" data-provider="Single Line Input ReadOnly Test Data" finished-at="2017-02-24T17:18:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-bottom-style]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@2dcd168a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slInputReadOnlyMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:18:01Z" finished-at="2017-02-24T17:18:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1233" started-at="2017-02-24T17:18:01Z" finished-at="2017-02-24T17:18:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.slInputReadOnlyMobileTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="slInputReadOnlyMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="slInputReadOnlyMobileTest" duration-ms="1409" started-at="2017-02-24T17:18:02Z" data-provider="Single Line Input ReadOnly Test Data" finished-at="2017-02-24T17:18:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-bottom-color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@388526fb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slInputReadOnlyMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1288" started-at="2017-02-24T17:18:04Z" finished-at="2017-02-24T17:18:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.slInputReadOnlyMobileTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:18:04Z" finished-at="2017-02-24T17:18:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="slInputReadOnlyMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="slInputReadOnlyMobileTest" duration-ms="1435" started-at="2017-02-24T17:18:05Z" data-provider="Single Line Input ReadOnly Test Data" finished-at="2017-02-24T17:18:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@21a21c64]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slInputReadOnlyMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:18:07Z" finished-at="2017-02-24T17:18:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1052" started-at="2017-02-24T17:18:07Z" finished-at="2017-02-24T17:18:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.slInputReadOnlyMobileTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="slInputReadOnlyMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="slInputReadOnlyMobileTest" duration-ms="1430" started-at="2017-02-24T17:18:08Z" data-provider="Single Line Input ReadOnly Test Data" finished-at="2017-02-24T17:18:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[font-size]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@7803bfd]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slInputReadOnlyMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1092" started-at="2017-02-24T17:18:09Z" finished-at="2017-02-24T17:18:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.slInputReadOnlyMobileTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:18:09Z" finished-at="2017-02-24T17:18:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="slInputReadOnlyMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="slInputReadOnlyMobileTest" duration-ms="1412" started-at="2017-02-24T17:18:10Z" data-provider="Single Line Input ReadOnly Test Data" finished-at="2017-02-24T17:18:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-top-style]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@42bc14c1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slInputReadOnlyMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1758" started-at="2017-02-24T17:18:12Z" finished-at="2017-02-24T17:18:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.slInputReadOnlyMobileTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:18:12Z" finished-at="2017-02-24T17:18:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="slInputReadOnlyMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="slInputReadOnlyMobileTest" duration-ms="1401" started-at="2017-02-24T17:18:13Z" data-provider="Single Line Input ReadOnly Test Data" finished-at="2017-02-24T17:18:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-right-style]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@531f4093]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slInputReadOnlyMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:18:15Z" finished-at="2017-02-24T17:18:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1114" started-at="2017-02-24T17:18:15Z" finished-at="2017-02-24T17:18:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.slInputReadOnlyMobileTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="slInputReadOnlyMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="slInputReadOnlyMobileTest" duration-ms="1385" started-at="2017-02-24T17:18:16Z" data-provider="Single Line Input ReadOnly Test Data" finished-at="2017-02-24T17:18:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-left-style]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@62ef27a8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slInputReadOnlyMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:18:17Z" finished-at="2017-02-24T17:18:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1324" started-at="2017-02-24T17:18:17Z" finished-at="2017-02-24T17:18:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.slInputReadOnlyMobileTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="slInputReadOnlyMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="slInputReadOnlyMobileTest" duration-ms="1425" started-at="2017-02-24T17:18:19Z" data-provider="Single Line Input ReadOnly Test Data" finished-at="2017-02-24T17:18:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-top]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@6436a7db]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slInputReadOnlyMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:18:20Z" finished-at="2017-02-24T17:18:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1198" started-at="2017-02-24T17:18:20Z" finished-at="2017-02-24T17:18:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.slInputReadOnlyMobileTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="slInputReadOnlyMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="slInputReadOnlyMobileTest" duration-ms="1418" started-at="2017-02-24T17:18:21Z" data-provider="Single Line Input ReadOnly Test Data" finished-at="2017-02-24T17:18:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-right]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@460ebd80]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slInputReadOnlyMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1504" started-at="2017-02-24T17:18:23Z" finished-at="2017-02-24T17:18:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.slInputReadOnlyMobileTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:18:23Z" finished-at="2017-02-24T17:18:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="slInputReadOnlyMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="slInputReadOnlyMobileTest" duration-ms="1481" started-at="2017-02-24T17:18:24Z" data-provider="Single Line Input ReadOnly Test Data" finished-at="2017-02-24T17:18:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-bottom]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@6f3c660a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slInputReadOnlyMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:18:26Z" finished-at="2017-02-24T17:18:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1176" started-at="2017-02-24T17:18:26Z" finished-at="2017-02-24T17:18:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.slInputReadOnlyMobileTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="slInputReadOnlyMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="slInputReadOnlyMobileTest" duration-ms="1418" started-at="2017-02-24T17:18:27Z" data-provider="Single Line Input ReadOnly Test Data" finished-at="2017-02-24T17:18:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-left]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@74f5ce22]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slInputReadOnlyMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1137" started-at="2017-02-24T17:18:28Z" finished-at="2017-02-24T17:18:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.slInputReadOnlyMobileTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:18:28Z" finished-at="2017-02-24T17:18:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="slInputReadOnlyMobileTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="slInputReadOnlyMobileTest" duration-ms="1385" started-at="2017-02-24T17:18:29Z" data-provider="Single Line Input ReadOnly Test Data" finished-at="2017-02-24T17:18:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[font-family]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@25aca718]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slInputReadOnlyMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:18:31Z" finished-at="2017-02-24T17:18:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1059" started-at="2017-02-24T17:18:31Z" finished-at="2017-02-24T17:18:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.svgIconForCheckBoxMobileTest(java.lang.String,org.openqa.selenium.By,org.openqa.selenium.By,java.lang.String,java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="svgIconForCheckBoxMobileTest(java.lang.String, org.openqa.selenium.By, org.openqa.selenium.By, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="svgIconForCheckBoxMobileTest" duration-ms="7445" started-at="2017-02-24T17:18:32Z" data-provider="Check Box - SVG Icon Test Data" finished-at="2017-02-24T17:18:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[unchecked]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: checkboxInput-unchecked]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.xpath: //span[@id='checkbox-unchecked']/*[local-name() = 'svg']]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@6fb365ed]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@6e950bcf]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- svgIconForCheckBoxMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1732" started-at="2017-02-24T17:18:39Z" finished-at="2017-02-24T17:18:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.svgIconForCheckBoxMobileTest(java.lang.String,org.openqa.selenium.By,org.openqa.selenium.By,java.lang.String,java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:18:39Z" finished-at="2017-02-24T17:18:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="svgIconForCheckBoxMobileTest(java.lang.String, org.openqa.selenium.By, org.openqa.selenium.By, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="svgIconForCheckBoxMobileTest" duration-ms="5864" started-at="2017-02-24T17:18:41Z" data-provider="Check Box - SVG Icon Test Data" finished-at="2017-02-24T17:18:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[checked]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: checkboxInput-checked]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.xpath: //span[@id='checkbox-checked']/*[local-name() = 'svg']]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@16414e40]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@74bada02]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- svgIconForCheckBoxMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:18:47Z" finished-at="2017-02-24T17:18:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1164" started-at="2017-02-24T17:18:47Z" finished-at="2017-02-24T17:18:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.svgIconForCheckBoxMobileTest(java.lang.String,org.openqa.selenium.By,org.openqa.selenium.By,java.lang.String,java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="svgIconForCheckBoxMobileTest(java.lang.String, org.openqa.selenium.By, org.openqa.selenium.By, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="svgIconForCheckBoxMobileTest" duration-ms="5858" started-at="2017-02-24T17:18:48Z" data-provider="Check Box - SVG Icon Test Data" finished-at="2017-02-24T17:18:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[unchecked-focus]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: checkboxInput-unchecked-focus]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.xpath: //span[@id='checkbox-unchecked-focus']/*[local-name() = 'svg']]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@525575]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@46dffdc3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- svgIconForCheckBoxMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:18:54Z" finished-at="2017-02-24T17:18:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1243" started-at="2017-02-24T17:18:54Z" finished-at="2017-02-24T17:18:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.svgIconForCheckBoxMobileTest(java.lang.String,org.openqa.selenium.By,org.openqa.selenium.By,java.lang.String,java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="svgIconForCheckBoxMobileTest(java.lang.String, org.openqa.selenium.By, org.openqa.selenium.By, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="svgIconForCheckBoxMobileTest" duration-ms="6037" started-at="2017-02-24T17:18:55Z" data-provider="Check Box - SVG Icon Test Data" finished-at="2017-02-24T17:19:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[checked-focus]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: checkboxInput-checked-focus]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.xpath: //span[@id='checkbox-checked-focus']/*[local-name() = 'svg']]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@5a709816]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@78383390]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- svgIconForCheckBoxMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:19:01Z" finished-at="2017-02-24T17:19:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1560" started-at="2017-02-24T17:19:01Z" finished-at="2017-02-24T17:19:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.textLabelInputMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="textLabelInputMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="textLabelInputMobileTest" duration-ms="2820" started-at="2017-02-24T17:19:03Z" data-provider="Text Label Input Test Data" finished-at="2017-02-24T17:19:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[text-label-input]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: sl-text-label-input]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@6ad3381f]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@53dbe163]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textLabelInputMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:19:05Z" finished-at="2017-02-24T17:19:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1061" started-at="2017-02-24T17:19:05Z" finished-at="2017-02-24T17:19:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.textLabelInputMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="textLabelInputMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="textLabelInputMobileTest" duration-ms="2796" started-at="2017-02-24T17:19:06Z" data-provider="Text Label Input Test Data" finished-at="2017-02-24T17:19:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[text-label-input-errored]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: sl-text-label-input-error]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@db57326]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@34a875b3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textLabelInputMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:19:09Z" finished-at="2017-02-24T17:19:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1059" started-at="2017-02-24T17:19:09Z" finished-at="2017-02-24T17:19:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.textLabelInputMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="textLabelInputMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="textLabelInputMobileTest" duration-ms="2834" started-at="2017-02-24T17:19:10Z" data-provider="Text Label Input Test Data" finished-at="2017-02-24T17:19:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[text-label-input-disabled]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: sl-text-label-input-disabled]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@4748a0f9]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@4b14918a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textLabelInputMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:19:13Z" finished-at="2017-02-24T17:19:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="beforeMethod" is-config="true" duration-ms="1208" started-at="2017-02-24T17:19:13Z" finished-at="2017-02-24T17:19:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.textLabelInputMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="textLabelInputMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="textLabelInputMobileTest" duration-ms="2872" started-at="2017-02-24T17:19:14Z" data-provider="Text Label Input Test Data" finished-at="2017-02-24T17:19:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[text-label-input-readonly]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: sl-text-label-input-readonly]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@6d1ef78d]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@1a6c1270]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textLabelInputMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@37d31475]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:19:17Z" finished-at="2017-02-24T17:19:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="tearDown(java.lang.String)[pri:0, instance:elementsTests.InputsTest@37d31475]" name="tearDown" is-config="true" duration-ms="1822" started-at="2017-02-24T17:19:17Z" finished-at="2017-02-24T17:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- elementsTests.InputsTest -->
      <class name="elementsTests.IconsTest">
        <test-method status="PASS" signature="setUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.IconsTest@1d8d30f7]" name="setUp" is-config="true" duration-ms="83077" started-at="2017-02-24T17:08:17Z" finished-at="2017-02-24T17:09:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sauce]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[off]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OS X 10.11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[54.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[iOS]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[iPhone 6 Plus]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[9.3]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[safari]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[1.5.3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="typographyTestBeforeClass(java.lang.String, java.lang.String)[pri:0, instance:elementsTests.IconsTest@1d8d30f7]" name="typographyTestBeforeClass" is-config="true" duration-ms="0" started-at="2017-02-24T17:09:40Z" finished-at="2017-02-24T17:09:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[off]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- typographyTestBeforeClass -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.IconsTest@1d8d30f7]" name="beforeMethod" is-config="true" duration-ms="1131" started-at="2017-02-24T17:09:40Z" finished-at="2017-02-24T17:09:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.IconsTest.iconChangeClassAndHrefMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="iconChangeClassAndHrefMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.IconsTest@1d8d30f7]" name="iconChangeClassAndHrefMobileTest" duration-ms="2837" started-at="2017-02-24T17:09:41Z" data-provider="Change Class and href Test Data" finished-at="2017-02-24T17:09:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class-18-href-24]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.xpath: //p[@name='icon-change-class-18-href-24']/*[local-name() = 'svg']]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@70f02c32]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@62010f5c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- iconChangeClassAndHrefMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.IconsTest@1d8d30f7]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:09:44Z" finished-at="2017-02-24T17:09:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.IconsTest@1d8d30f7]" name="beforeMethod" is-config="true" duration-ms="1394" started-at="2017-02-24T17:09:44Z" finished-at="2017-02-24T17:09:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.IconsTest.iconChangeClassAndHrefMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="iconChangeClassAndHrefMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.IconsTest@1d8d30f7]" name="iconChangeClassAndHrefMobileTest" duration-ms="4577" started-at="2017-02-24T17:09:46Z" data-provider="Change Class and href Test Data" finished-at="2017-02-24T17:09:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class-24-href-18]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.xpath: //p[@name='icon-change-class-24-href-18']/*[local-name() = 'svg']]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@51fadaff]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@401f7633]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- iconChangeClassAndHrefMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.IconsTest@1d8d30f7]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:09:50Z" finished-at="2017-02-24T17:09:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.IconsTest@1d8d30f7]" name="beforeMethod" is-config="true" duration-ms="982" started-at="2017-02-24T17:09:50Z" finished-at="2017-02-24T17:09:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.IconsTest.iconFillColorMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="iconFillColorMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.IconsTest@1d8d30f7]" name="iconFillColorMobileTest" duration-ms="1424" started-at="2017-02-24T17:09:51Z" data-provider="Icons Fill Color Test Data" finished-at="2017-02-24T17:09:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[icon-fill-color-18]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.xpath: //p[@name='icon-fill-color-18']/*[local-name() = 'svg']]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@31ff43be]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- iconFillColorMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.IconsTest@1d8d30f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:09:53Z" finished-at="2017-02-24T17:09:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.IconsTest@1d8d30f7]" name="beforeMethod" is-config="true" duration-ms="1049" started-at="2017-02-24T17:09:53Z" finished-at="2017-02-24T17:09:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.IconsTest.iconFillColorMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="iconFillColorMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.IconsTest@1d8d30f7]" name="iconFillColorMobileTest" duration-ms="1440" started-at="2017-02-24T17:09:54Z" data-provider="Icons Fill Color Test Data" finished-at="2017-02-24T17:09:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[icon-fill-color-24]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.xpath: //p[@name='icon-fill-color-24']/*[local-name() = 'svg']]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@5b6ec132]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- iconFillColorMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.IconsTest@1d8d30f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:09:55Z" finished-at="2017-02-24T17:09:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.IconsTest@1d8d30f7]" name="beforeMethod" is-config="true" duration-ms="1033" started-at="2017-02-24T17:09:55Z" finished-at="2017-02-24T17:09:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.IconsTest.iconFillColorMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="iconFillColorMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.IconsTest@1d8d30f7]" name="iconFillColorMobileTest" duration-ms="1442" started-at="2017-02-24T17:09:56Z" data-provider="Icons Fill Color Test Data" finished-at="2017-02-24T17:09:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[icon-default-color-18]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.xpath: //p[@name='icon-default-color-18']/*[local-name() = 'svg']]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@5c44c582]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- iconFillColorMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.IconsTest@1d8d30f7]" name="beforeMethod" is-config="true" duration-ms="1198" started-at="2017-02-24T17:09:58Z" finished-at="2017-02-24T17:09:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.IconsTest.iconFillColorMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.IconsTest@1d8d30f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:09:58Z" finished-at="2017-02-24T17:09:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="iconFillColorMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.IconsTest@1d8d30f7]" name="iconFillColorMobileTest" duration-ms="1406" started-at="2017-02-24T17:09:59Z" data-provider="Icons Fill Color Test Data" finished-at="2017-02-24T17:10:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[icon-default-color-24]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.xpath: //p[@name='icon-default-color-24']/*[local-name() = 'svg']]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@67d18ed7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- iconFillColorMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.IconsTest@1d8d30f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:10:00Z" finished-at="2017-02-24T17:10:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.IconsTest@1d8d30f7]" name="beforeMethod" is-config="true" duration-ms="1140" started-at="2017-02-24T17:10:00Z" finished-at="2017-02-24T17:10:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.IconsTest.iconSizeMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="iconSizeMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.IconsTest@1d8d30f7]" name="iconSizeMobileTest" duration-ms="2804" started-at="2017-02-24T17:10:01Z" data-provider="Icons Size Test Data" finished-at="2017-02-24T17:10:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[regular-icon-size-18]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.xpath: //p[@name='icon-size-18']/*[local-name() = 'svg']]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@2c78d320]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@132e0cc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- iconSizeMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.IconsTest@1d8d30f7]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:10:04Z" finished-at="2017-02-24T17:10:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.IconsTest@1d8d30f7]" name="beforeMethod" is-config="true" duration-ms="1423" started-at="2017-02-24T17:10:04Z" finished-at="2017-02-24T17:10:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.IconsTest.iconSizeMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="iconSizeMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.IconsTest@1d8d30f7]" name="iconSizeMobileTest" duration-ms="2835" started-at="2017-02-24T17:10:06Z" data-provider="Icons Size Test Data" finished-at="2017-02-24T17:10:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[regular-icon-size-24]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.xpath: //p[@name='icon-size-24']/*[local-name() = 'svg']]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@7b205dbd]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@106cc338]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- iconSizeMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.IconsTest@1d8d30f7]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:10:08Z" finished-at="2017-02-24T17:10:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.IconsTest@1d8d30f7]" name="beforeMethod" is-config="true" duration-ms="1367" started-at="2017-02-24T17:10:08Z" finished-at="2017-02-24T17:10:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.IconsTest.iconSizeMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="iconSizeMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.IconsTest@1d8d30f7]" name="iconSizeMobileTest" duration-ms="2900" started-at="2017-02-24T17:10:10Z" data-provider="Icons Size Test Data" finished-at="2017-02-24T17:10:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[font-setting-icon-18]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.xpath: //p[@name='icon-font-setting-18']/*[local-name() = 'svg']]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@7a67e3c6]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@6cc558c6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- iconSizeMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.IconsTest@1d8d30f7]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:10:13Z" finished-at="2017-02-24T17:10:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.IconsTest@1d8d30f7]" name="beforeMethod" is-config="true" duration-ms="1505" started-at="2017-02-24T17:10:13Z" finished-at="2017-02-24T17:10:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.IconsTest.iconSizeMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="iconSizeMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.IconsTest@1d8d30f7]" name="iconSizeMobileTest" duration-ms="2942" started-at="2017-02-24T17:10:14Z" data-provider="Icons Size Test Data" finished-at="2017-02-24T17:10:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[font-setting-icon-24]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.xpath: //p[@name='icon-font-setting-24']/*[local-name() = 'svg']]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@15713d56]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@63f259c3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- iconSizeMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.IconsTest@1d8d30f7]" name="beforeMethod" is-config="true" duration-ms="1141" started-at="2017-02-24T17:10:17Z" finished-at="2017-02-24T17:10:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.IconsTest.iconSizeMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.IconsTest@1d8d30f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:10:17Z" finished-at="2017-02-24T17:10:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="iconSizeMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.IconsTest@1d8d30f7]" name="iconSizeMobileTest" duration-ms="2935" started-at="2017-02-24T17:10:18Z" data-provider="Icons Size Test Data" finished-at="2017-02-24T17:10:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[icon-in-a-button]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.xpath: //button[@name='icon-in-a-button']/*[local-name() = 'svg']]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@26ceffa8]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@600b90df]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- iconSizeMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.IconsTest@1d8d30f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:10:21Z" finished-at="2017-02-24T17:10:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="tearDown(java.lang.String)[pri:0, instance:elementsTests.IconsTest@1d8d30f7]" name="tearDown" is-config="true" duration-ms="1361" started-at="2017-02-24T17:10:21Z" finished-at="2017-02-24T17:10:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- elementsTests.IconsTest -->
      <class name="elementsTests.TemplatesTest">
        <test-method status="PASS" signature="setUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="setUp" is-config="true" duration-ms="83096" started-at="2017-02-24T17:10:49Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sauce]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[off]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OS X 10.11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[54.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[iOS]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[iPhone 6 Plus]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[9.3]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[safari]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[1.5.3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="beforeClass(java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeClass" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sauce]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 6 Plus]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.lgTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="lgTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="lgTemplateMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="iOS: LG Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-single]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[1024px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.TemplatesTest.lgTemplateMobileiOSTest(TemplatesTest.java:518)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgTemplateMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.lgTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="lgTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="lgTemplateMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="iOS: LG Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-main]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[682.65625px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.TemplatesTest.lgTemplateMobileiOSTest(TemplatesTest.java:518)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgTemplateMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.lgTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="lgTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="lgTemplateMobileiOSTest" duration-ms="1" started-at="2017-02-24T17:12:12Z" data-provider="iOS: LG Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-sidebar]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[341.328125px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.TemplatesTest.lgTemplateMobileiOSTest(TemplatesTest.java:518)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgTemplateMobileiOSTest -->
        <test-method status="SKIP" signature="lgTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="lgTemplateMobileiOSTest" duration-ms="1" started-at="2017-02-24T17:12:12Z" data-provider="iOS: LG Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-main-left]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[682.65625px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.TemplatesTest.lgTemplateMobileiOSTest(TemplatesTest.java:518)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgTemplateMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.lgTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="lgTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="lgTemplateMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="iOS: LG Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-sidebar-left]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[341.328125px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.TemplatesTest.lgTemplateMobileiOSTest(TemplatesTest.java:518)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgTemplateMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.lgTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.lgTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.lgTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="lgTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="lgTemplateMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="iOS: LG Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-static-large]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[800px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.TemplatesTest.lgTemplateMobileiOSTest(TemplatesTest.java:518)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgTemplateMobileiOSTest -->
        <test-method status="SKIP" signature="lgTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="lgTemplateMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="iOS: LG Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-static-small]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[480px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.TemplatesTest.lgTemplateMobileiOSTest(TemplatesTest.java:518)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgTemplateMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="lgTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="lgTemplateMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="iOS: LG Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-single-adjoin]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[1024px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.TemplatesTest.lgTemplateMobileiOSTest(TemplatesTest.java:518)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgTemplateMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.lgTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.lgTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="lgTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="lgTemplateMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="iOS: LG Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-main-adjoin]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[682.65625px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.TemplatesTest.lgTemplateMobileiOSTest(TemplatesTest.java:518)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgTemplateMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.lgTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="lgTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="lgTemplateMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="iOS: LG Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-single-bottom]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[1024px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.TemplatesTest.lgTemplateMobileiOSTest(TemplatesTest.java:518)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgTemplateMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="lgTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="lgTemplateMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="iOS: LG Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-sidebar-adjoin]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[341.328125px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.TemplatesTest.lgTemplateMobileiOSTest(TemplatesTest.java:518)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgTemplateMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.lgTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.lgTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="lgTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="lgTemplateMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="iOS: LG Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-smallgap]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[1024px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.TemplatesTest.lgTemplateMobileiOSTest(TemplatesTest.java:518)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgTemplateMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="lgTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="lgTemplateMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="iOS: LG Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-single-smallgap]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[1024px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.TemplatesTest.lgTemplateMobileiOSTest(TemplatesTest.java:518)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgTemplateMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.lgTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="lgTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="lgTemplateMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="iOS: LG Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-sidebar-smallgap]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[341.328125px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.TemplatesTest.lgTemplateMobileiOSTest(TemplatesTest.java:518)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgTemplateMobileiOSTest -->
        <test-method status="SKIP" signature="lgTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="lgTemplateMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="iOS: LG Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-main-smallgap]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[682.65625px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.TemplatesTest.lgTemplateMobileiOSTest(TemplatesTest.java:518)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgTemplateMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.lgTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.lgTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="lgTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="lgTemplateMobileiOSTest" duration-ms="1" started-at="2017-02-24T17:12:12Z" data-provider="iOS: LG Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-single-smallgap-bottom]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[1024px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.TemplatesTest.lgTemplateMobileiOSTest(TemplatesTest.java:518)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgTemplateMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.lgTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.lgTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="lgTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="lgTemplateMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="iOS: LG Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-single-largegap]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[1024px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.TemplatesTest.lgTemplateMobileiOSTest(TemplatesTest.java:518)
	at sun.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgTemplateMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.lgTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.lgTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="lgTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="lgTemplateMobileiOSTest" duration-ms="1" started-at="2017-02-24T17:12:12Z" data-provider="iOS: LG Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-main-largegap]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[682.65625px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.TemplatesTest.lgTemplateMobileiOSTest(TemplatesTest.java:518)
	at sun.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgTemplateMobileiOSTest -->
        <test-method status="SKIP" signature="lgTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="lgTemplateMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="iOS: LG Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-largegap]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[1024px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.TemplatesTest.lgTemplateMobileiOSTest(TemplatesTest.java:518)
	at sun.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgTemplateMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.lgTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="lgTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="lgTemplateMobileiOSTest" duration-ms="1" started-at="2017-02-24T17:12:12Z" data-provider="iOS: LG Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-single-largegap-bottom]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[1024px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.TemplatesTest.lgTemplateMobileiOSTest(TemplatesTest.java:518)
	at sun.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgTemplateMobileiOSTest -->
        <test-method status="SKIP" signature="lgTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="lgTemplateMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="iOS: LG Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-sidebar-largegap]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[341.328125px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.TemplatesTest.lgTemplateMobileiOSTest(TemplatesTest.java:518)
	at sun.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgTemplateMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.lgTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.mdTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.mdTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="mdTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="mdTemplateMobileAndroidTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="Android: MD Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-single]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[962px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as Google Nexus 7 HD Emulator]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as Google Nexus 7 HD Emulator
	at elementsTests.TemplatesTest.mdTemplateMobileAndroidTest(TemplatesTest.java:683)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTemplateMobileAndroidTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="mdTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="mdTemplateMobileAndroidTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="Android: MD Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-main]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[962px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as Google Nexus 7 HD Emulator]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as Google Nexus 7 HD Emulator
	at elementsTests.TemplatesTest.mdTemplateMobileAndroidTest(TemplatesTest.java:683)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTemplateMobileAndroidTest -->
        <test-method status="SKIP" signature="mdTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="mdTemplateMobileAndroidTest" duration-ms="1" started-at="2017-02-24T17:12:12Z" data-provider="Android: MD Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-sidebar]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[962px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as Google Nexus 7 HD Emulator]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as Google Nexus 7 HD Emulator
	at elementsTests.TemplatesTest.mdTemplateMobileAndroidTest(TemplatesTest.java:683)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTemplateMobileAndroidTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.mdTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="mdTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="mdTemplateMobileAndroidTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="Android: MD Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-main-left]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[962px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as Google Nexus 7 HD Emulator]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as Google Nexus 7 HD Emulator
	at elementsTests.TemplatesTest.mdTemplateMobileAndroidTest(TemplatesTest.java:683)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTemplateMobileAndroidTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.mdTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="mdTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="mdTemplateMobileAndroidTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="Android: MD Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-static-small]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[801.65625px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as Google Nexus 7 HD Emulator]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as Google Nexus 7 HD Emulator
	at elementsTests.TemplatesTest.mdTemplateMobileAndroidTest(TemplatesTest.java:683)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTemplateMobileAndroidTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.mdTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.mdTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="mdTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="mdTemplateMobileAndroidTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="Android: MD Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-sidebar-left]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[962px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as Google Nexus 7 HD Emulator]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as Google Nexus 7 HD Emulator
	at elementsTests.TemplatesTest.mdTemplateMobileAndroidTest(TemplatesTest.java:683)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTemplateMobileAndroidTest -->
        <test-method status="SKIP" signature="mdTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="mdTemplateMobileAndroidTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="Android: MD Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-single-adjoin]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[962px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as Google Nexus 7 HD Emulator]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as Google Nexus 7 HD Emulator
	at elementsTests.TemplatesTest.mdTemplateMobileAndroidTest(TemplatesTest.java:683)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTemplateMobileAndroidTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.mdTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="mdTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="mdTemplateMobileAndroidTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="Android: MD Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-static-large]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[801.65625px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as Google Nexus 7 HD Emulator]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as Google Nexus 7 HD Emulator
	at elementsTests.TemplatesTest.mdTemplateMobileAndroidTest(TemplatesTest.java:683)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTemplateMobileAndroidTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.mdTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.mdTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="mdTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="mdTemplateMobileAndroidTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="Android: MD Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-main-adjoin]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[962px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as Google Nexus 7 HD Emulator]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as Google Nexus 7 HD Emulator
	at elementsTests.TemplatesTest.mdTemplateMobileAndroidTest(TemplatesTest.java:683)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTemplateMobileAndroidTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.mdTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="mdTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="mdTemplateMobileAndroidTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="Android: MD Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-sidebar-adjoin]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[962px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as Google Nexus 7 HD Emulator]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as Google Nexus 7 HD Emulator
	at elementsTests.TemplatesTest.mdTemplateMobileAndroidTest(TemplatesTest.java:683)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTemplateMobileAndroidTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.mdTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="mdTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="mdTemplateMobileAndroidTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="Android: MD Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-single-bottom]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[962px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as Google Nexus 7 HD Emulator]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as Google Nexus 7 HD Emulator
	at elementsTests.TemplatesTest.mdTemplateMobileAndroidTest(TemplatesTest.java:683)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTemplateMobileAndroidTest -->
        <test-method status="SKIP" signature="mdTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="mdTemplateMobileAndroidTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="Android: MD Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-single-smallgap]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[962px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as Google Nexus 7 HD Emulator]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as Google Nexus 7 HD Emulator
	at elementsTests.TemplatesTest.mdTemplateMobileAndroidTest(TemplatesTest.java:683)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTemplateMobileAndroidTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.mdTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.mdTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.mdTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.mdTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="mdTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="mdTemplateMobileAndroidTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="Android: MD Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-main-smallgap]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[962px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as Google Nexus 7 HD Emulator]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as Google Nexus 7 HD Emulator
	at elementsTests.TemplatesTest.mdTemplateMobileAndroidTest(TemplatesTest.java:683)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTemplateMobileAndroidTest -->
        <test-method status="SKIP" signature="mdTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="mdTemplateMobileAndroidTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="Android: MD Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-smallgap]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[962px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as Google Nexus 7 HD Emulator]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as Google Nexus 7 HD Emulator
	at elementsTests.TemplatesTest.mdTemplateMobileAndroidTest(TemplatesTest.java:683)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTemplateMobileAndroidTest -->
        <test-method status="SKIP" signature="mdTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="mdTemplateMobileAndroidTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="Android: MD Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-single-smallgap-bottom]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[962px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as Google Nexus 7 HD Emulator]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as Google Nexus 7 HD Emulator
	at elementsTests.TemplatesTest.mdTemplateMobileAndroidTest(TemplatesTest.java:683)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTemplateMobileAndroidTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.mdTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="mdTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="mdTemplateMobileAndroidTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="Android: MD Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-sidebar-smallgap]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[962px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as Google Nexus 7 HD Emulator]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as Google Nexus 7 HD Emulator
	at elementsTests.TemplatesTest.mdTemplateMobileAndroidTest(TemplatesTest.java:683)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTemplateMobileAndroidTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="mdTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="mdTemplateMobileAndroidTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="Android: MD Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-single-largegap]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[962px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as Google Nexus 7 HD Emulator]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as Google Nexus 7 HD Emulator
	at elementsTests.TemplatesTest.mdTemplateMobileAndroidTest(TemplatesTest.java:683)
	at sun.reflect.GeneratedMethodAccessor49.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTemplateMobileAndroidTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.mdTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="mdTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="mdTemplateMobileAndroidTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="Android: MD Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-largegap]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[962px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as Google Nexus 7 HD Emulator]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as Google Nexus 7 HD Emulator
	at elementsTests.TemplatesTest.mdTemplateMobileAndroidTest(TemplatesTest.java:683)
	at sun.reflect.GeneratedMethodAccessor49.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTemplateMobileAndroidTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.mdTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.mdTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.mdTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="mdTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="mdTemplateMobileAndroidTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="Android: MD Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-main-largegap]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[962px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as Google Nexus 7 HD Emulator]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as Google Nexus 7 HD Emulator
	at elementsTests.TemplatesTest.mdTemplateMobileAndroidTest(TemplatesTest.java:683)
	at sun.reflect.GeneratedMethodAccessor49.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTemplateMobileAndroidTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="mdTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="mdTemplateMobileAndroidTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="Android: MD Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-sidebar-largegap]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[962px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as Google Nexus 7 HD Emulator]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as Google Nexus 7 HD Emulator
	at elementsTests.TemplatesTest.mdTemplateMobileAndroidTest(TemplatesTest.java:683)
	at sun.reflect.GeneratedMethodAccessor49.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTemplateMobileAndroidTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.mdTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="mdTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="mdTemplateMobileAndroidTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="Android: MD Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-single-largegap-bottom]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[962px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as Google Nexus 7 HD Emulator]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as Google Nexus 7 HD Emulator
	at elementsTests.TemplatesTest.mdTemplateMobileAndroidTest(TemplatesTest.java:683)
	at sun.reflect.GeneratedMethodAccessor49.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTemplateMobileAndroidTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.mdTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.mdTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="mdTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="mdTemplateMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="iOS: MD Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-single]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[768px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.TemplatesTest.mdTemplateMobileiOSTest(TemplatesTest.java:463)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTemplateMobileiOSTest -->
        <test-method status="SKIP" signature="mdTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="mdTemplateMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="iOS: MD Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-main]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[768px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.TemplatesTest.mdTemplateMobileiOSTest(TemplatesTest.java:463)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTemplateMobileiOSTest -->
        <test-method status="SKIP" signature="mdTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="mdTemplateMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="iOS: MD Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-sidebar]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[768px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.TemplatesTest.mdTemplateMobileiOSTest(TemplatesTest.java:463)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTemplateMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.mdTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.mdTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="mdTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="mdTemplateMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="iOS: MD Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-main-left]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[768px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.TemplatesTest.mdTemplateMobileiOSTest(TemplatesTest.java:463)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTemplateMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="mdTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="mdTemplateMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="iOS: MD Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-static-small]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[639.984375px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.TemplatesTest.mdTemplateMobileiOSTest(TemplatesTest.java:463)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTemplateMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.mdTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="mdTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="mdTemplateMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="iOS: MD Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-sidebar-left]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[768px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.TemplatesTest.mdTemplateMobileiOSTest(TemplatesTest.java:463)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTemplateMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.mdTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="mdTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="mdTemplateMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="iOS: MD Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-static-large]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[639.984375px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.TemplatesTest.mdTemplateMobileiOSTest(TemplatesTest.java:463)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTemplateMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="mdTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="mdTemplateMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="iOS: MD Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-single-adjoin]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[768px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.TemplatesTest.mdTemplateMobileiOSTest(TemplatesTest.java:463)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTemplateMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.mdTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.mdTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.mdTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="mdTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="mdTemplateMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="iOS: MD Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-main-adjoin]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[768px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.TemplatesTest.mdTemplateMobileiOSTest(TemplatesTest.java:463)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTemplateMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.mdTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="mdTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="mdTemplateMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="iOS: MD Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-sidebar-adjoin]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[768px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.TemplatesTest.mdTemplateMobileiOSTest(TemplatesTest.java:463)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTemplateMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.mdTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="mdTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="mdTemplateMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="iOS: MD Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-single-bottom]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[768px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.TemplatesTest.mdTemplateMobileiOSTest(TemplatesTest.java:463)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTemplateMobileiOSTest -->
        <test-method status="SKIP" signature="mdTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="mdTemplateMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="iOS: MD Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-single-smallgap]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[768px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.TemplatesTest.mdTemplateMobileiOSTest(TemplatesTest.java:463)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTemplateMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.mdTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="mdTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="mdTemplateMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="iOS: MD Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-main-smallgap]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[768px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.TemplatesTest.mdTemplateMobileiOSTest(TemplatesTest.java:463)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTemplateMobileiOSTest -->
        <test-method status="SKIP" signature="mdTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="mdTemplateMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="iOS: MD Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-smallgap]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[768px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.TemplatesTest.mdTemplateMobileiOSTest(TemplatesTest.java:463)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTemplateMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.mdTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.mdTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.mdTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="mdTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="mdTemplateMobileiOSTest" duration-ms="1" started-at="2017-02-24T17:12:12Z" data-provider="iOS: MD Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-single-smallgap-bottom]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[768px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.TemplatesTest.mdTemplateMobileiOSTest(TemplatesTest.java:463)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTemplateMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.mdTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="mdTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="mdTemplateMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="iOS: MD Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-sidebar-smallgap]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[768px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.TemplatesTest.mdTemplateMobileiOSTest(TemplatesTest.java:463)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTemplateMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.mdTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="mdTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="mdTemplateMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="iOS: MD Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-single-largegap]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[768px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.TemplatesTest.mdTemplateMobileiOSTest(TemplatesTest.java:463)
	at sun.reflect.GeneratedMethodAccessor50.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTemplateMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.mdTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="mdTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="mdTemplateMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="iOS: MD Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-largegap]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[768px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.TemplatesTest.mdTemplateMobileiOSTest(TemplatesTest.java:463)
	at sun.reflect.GeneratedMethodAccessor50.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTemplateMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.mdTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="mdTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="mdTemplateMobileiOSTest" duration-ms="1" started-at="2017-02-24T17:12:12Z" data-provider="iOS: MD Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-main-largegap]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[768px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.TemplatesTest.mdTemplateMobileiOSTest(TemplatesTest.java:463)
	at sun.reflect.GeneratedMethodAccessor50.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTemplateMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.mdTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.mdTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="mdTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="mdTemplateMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="iOS: MD Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-single-largegap-bottom]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[768px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.TemplatesTest.mdTemplateMobileiOSTest(TemplatesTest.java:463)
	at sun.reflect.GeneratedMethodAccessor50.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTemplateMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="mdTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="mdTemplateMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="iOS: MD Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-sidebar-largegap]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[768px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.TemplatesTest.mdTemplateMobileiOSTest(TemplatesTest.java:463)
	at sun.reflect.GeneratedMethodAccessor50.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTemplateMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.smTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="smTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="smTemplateMobileAndroidTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="Android: SM Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-single]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[601px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as Google Nexus 7 HD Emulator]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as Google Nexus 7 HD Emulator
	at elementsTests.TemplatesTest.smTemplateMobileAndroidTest(TemplatesTest.java:628)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTemplateMobileAndroidTest -->
        <test-method status="SKIP" signature="smTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="smTemplateMobileAndroidTest" duration-ms="1" started-at="2017-02-24T17:12:12Z" data-provider="Android: SM Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-main]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[601px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as Google Nexus 7 HD Emulator]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as Google Nexus 7 HD Emulator
	at elementsTests.TemplatesTest.smTemplateMobileAndroidTest(TemplatesTest.java:628)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTemplateMobileAndroidTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.smTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="smTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="smTemplateMobileAndroidTest" duration-ms="1" started-at="2017-02-24T17:12:12Z" data-provider="Android: SM Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-main-left]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[601px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as Google Nexus 7 HD Emulator]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as Google Nexus 7 HD Emulator
	at elementsTests.TemplatesTest.smTemplateMobileAndroidTest(TemplatesTest.java:628)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTemplateMobileAndroidTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="smTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="smTemplateMobileAndroidTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="Android: SM Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-sidebar]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[601px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as Google Nexus 7 HD Emulator]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as Google Nexus 7 HD Emulator
	at elementsTests.TemplatesTest.smTemplateMobileAndroidTest(TemplatesTest.java:628)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTemplateMobileAndroidTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.smTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.smTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="smTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="smTemplateMobileAndroidTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="Android: SM Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-static-small]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[500.828125px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as Google Nexus 7 HD Emulator]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as Google Nexus 7 HD Emulator
	at elementsTests.TemplatesTest.smTemplateMobileAndroidTest(TemplatesTest.java:628)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTemplateMobileAndroidTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.smTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.smTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.smTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="smTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="smTemplateMobileAndroidTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="Android: SM Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-sidebar-left]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[601px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as Google Nexus 7 HD Emulator]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as Google Nexus 7 HD Emulator
	at elementsTests.TemplatesTest.smTemplateMobileAndroidTest(TemplatesTest.java:628)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTemplateMobileAndroidTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="smTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="smTemplateMobileAndroidTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="Android: SM Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-static-large]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[500.828125px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as Google Nexus 7 HD Emulator]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as Google Nexus 7 HD Emulator
	at elementsTests.TemplatesTest.smTemplateMobileAndroidTest(TemplatesTest.java:628)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTemplateMobileAndroidTest -->
        <test-method status="SKIP" signature="smTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="smTemplateMobileAndroidTest" duration-ms="1" started-at="2017-02-24T17:12:12Z" data-provider="Android: SM Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-single-adjoin]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[601px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as Google Nexus 7 HD Emulator]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as Google Nexus 7 HD Emulator
	at elementsTests.TemplatesTest.smTemplateMobileAndroidTest(TemplatesTest.java:628)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTemplateMobileAndroidTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.smTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="smTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="smTemplateMobileAndroidTest" duration-ms="1" started-at="2017-02-24T17:12:12Z" data-provider="Android: SM Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-main-adjoin]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[601px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as Google Nexus 7 HD Emulator]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as Google Nexus 7 HD Emulator
	at elementsTests.TemplatesTest.smTemplateMobileAndroidTest(TemplatesTest.java:628)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTemplateMobileAndroidTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.smTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="smTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="smTemplateMobileAndroidTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="Android: SM Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-sidebar-adjoin]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[601px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as Google Nexus 7 HD Emulator]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as Google Nexus 7 HD Emulator
	at elementsTests.TemplatesTest.smTemplateMobileAndroidTest(TemplatesTest.java:628)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTemplateMobileAndroidTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.smTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="smTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="smTemplateMobileAndroidTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="Android: SM Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-single-smallgap]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[601px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as Google Nexus 7 HD Emulator]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as Google Nexus 7 HD Emulator
	at elementsTests.TemplatesTest.smTemplateMobileAndroidTest(TemplatesTest.java:628)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTemplateMobileAndroidTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.smTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.smTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="smTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="smTemplateMobileAndroidTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="Android: SM Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-single-bottom]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[601px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as Google Nexus 7 HD Emulator]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as Google Nexus 7 HD Emulator
	at elementsTests.TemplatesTest.smTemplateMobileAndroidTest(TemplatesTest.java:628)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTemplateMobileAndroidTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.smTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.smTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="smTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="smTemplateMobileAndroidTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="Android: SM Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-sidebar-smallgap]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[601px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as Google Nexus 7 HD Emulator]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as Google Nexus 7 HD Emulator
	at elementsTests.TemplatesTest.smTemplateMobileAndroidTest(TemplatesTest.java:628)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTemplateMobileAndroidTest -->
        <test-method status="SKIP" signature="smTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="smTemplateMobileAndroidTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="Android: SM Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-main-smallgap]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[601px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as Google Nexus 7 HD Emulator]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as Google Nexus 7 HD Emulator
	at elementsTests.TemplatesTest.smTemplateMobileAndroidTest(TemplatesTest.java:628)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTemplateMobileAndroidTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.smTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="smTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="smTemplateMobileAndroidTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="Android: SM Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-smallgap]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[601px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as Google Nexus 7 HD Emulator]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as Google Nexus 7 HD Emulator
	at elementsTests.TemplatesTest.smTemplateMobileAndroidTest(TemplatesTest.java:628)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTemplateMobileAndroidTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.smTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.smTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="smTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="smTemplateMobileAndroidTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="Android: SM Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-single-smallgap-bottom]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[601px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as Google Nexus 7 HD Emulator]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as Google Nexus 7 HD Emulator
	at elementsTests.TemplatesTest.smTemplateMobileAndroidTest(TemplatesTest.java:628)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTemplateMobileAndroidTest -->
        <test-method status="SKIP" signature="smTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="smTemplateMobileAndroidTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="Android: SM Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-largegap]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[601px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as Google Nexus 7 HD Emulator]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as Google Nexus 7 HD Emulator
	at elementsTests.TemplatesTest.smTemplateMobileAndroidTest(TemplatesTest.java:628)
	at sun.reflect.GeneratedMethodAccessor51.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTemplateMobileAndroidTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.smTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="smTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="smTemplateMobileAndroidTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="Android: SM Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-single-largegap]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[601px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as Google Nexus 7 HD Emulator]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as Google Nexus 7 HD Emulator
	at elementsTests.TemplatesTest.smTemplateMobileAndroidTest(TemplatesTest.java:628)
	at sun.reflect.GeneratedMethodAccessor51.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTemplateMobileAndroidTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.smTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.smTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="smTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="smTemplateMobileAndroidTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="Android: SM Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-sidebar-largegap]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[601px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as Google Nexus 7 HD Emulator]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as Google Nexus 7 HD Emulator
	at elementsTests.TemplatesTest.smTemplateMobileAndroidTest(TemplatesTest.java:628)
	at sun.reflect.GeneratedMethodAccessor51.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTemplateMobileAndroidTest -->
        <test-method status="SKIP" signature="smTemplateMobileAndroidTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="smTemplateMobileAndroidTest" duration-ms="0" started-at="2017-02-24T17:12:12Z" data-provider="Android: SM Template Test Data" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-main-largegap]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[601px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as Google Nexus 7 HD Emulator]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as Google Nexus 7 HD Emulator
	at elementsTests.TemplatesTest.smTemplateMobileAndroidTest(TemplatesTest.java:628)
	at sun.reflect.GeneratedMethodAccessor51.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTemplateMobileAndroidTest -->
        <test-method status="PASS" signature="smTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="smTemplateMobileiOSTest" duration-ms="10238" started-at="2017-02-24T17:12:12Z" data-provider="iOS: SM Template Test Data" finished-at="2017-02-24T17:12:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-single]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[736px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTemplateMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:12Z" finished-at="2017-02-24T17:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.smTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:12:23Z" finished-at="2017-02-24T17:12:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.smTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:23Z" finished-at="2017-02-24T17:12:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="smTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="smTemplateMobileiOSTest" duration-ms="9217" started-at="2017-02-24T17:12:23Z" data-provider="iOS: SM Template Test Data" finished-at="2017-02-24T17:12:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-main]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[736px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTemplateMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:12:32Z" finished-at="2017-02-24T17:12:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="smTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="smTemplateMobileiOSTest" duration-ms="9067" started-at="2017-02-24T17:12:32Z" data-provider="iOS: SM Template Test Data" finished-at="2017-02-24T17:12:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-sidebar]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[736px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTemplateMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:32Z" finished-at="2017-02-24T17:12:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.smTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:41Z" finished-at="2017-02-24T17:12:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:12:41Z" finished-at="2017-02-24T17:12:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.smTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="smTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="smTemplateMobileiOSTest" duration-ms="10252" started-at="2017-02-24T17:12:41Z" data-provider="iOS: SM Template Test Data" finished-at="2017-02-24T17:12:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-main-left]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[736px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTemplateMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:51Z" finished-at="2017-02-24T17:12:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:51Z" finished-at="2017-02-24T17:12:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.smTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="smTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="smTemplateMobileiOSTest" duration-ms="9121" started-at="2017-02-24T17:12:51Z" data-provider="iOS: SM Template Test Data" finished-at="2017-02-24T17:13:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-sidebar-left]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[736px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTemplateMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:13:00Z" finished-at="2017-02-24T17:13:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="smTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="smTemplateMobileiOSTest" duration-ms="9272" started-at="2017-02-24T17:13:00Z" data-provider="iOS: SM Template Test Data" finished-at="2017-02-24T17:13:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-static-small]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[613.328125px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTemplateMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:00Z" finished-at="2017-02-24T17:13:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.smTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:13:10Z" finished-at="2017-02-24T17:13:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:10Z" finished-at="2017-02-24T17:13:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.smTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="smTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="smTemplateMobileiOSTest" duration-ms="9835" started-at="2017-02-24T17:13:10Z" data-provider="iOS: SM Template Test Data" finished-at="2017-02-24T17:13:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-static-large]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[613.328125px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTemplateMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:13:19Z" finished-at="2017-02-24T17:13:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:19Z" finished-at="2017-02-24T17:13:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.smTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="smTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="smTemplateMobileiOSTest" duration-ms="8953" started-at="2017-02-24T17:13:19Z" data-provider="iOS: SM Template Test Data" finished-at="2017-02-24T17:13:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-single-adjoin]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[736px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTemplateMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:28Z" finished-at="2017-02-24T17:13:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.smTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="smTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="smTemplateMobileiOSTest" duration-ms="9441" started-at="2017-02-24T17:13:28Z" data-provider="iOS: SM Template Test Data" finished-at="2017-02-24T17:13:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-main-adjoin]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[736px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTemplateMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:28Z" finished-at="2017-02-24T17:13:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:13:38Z" finished-at="2017-02-24T17:13:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:38Z" finished-at="2017-02-24T17:13:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.smTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="smTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="smTemplateMobileiOSTest" duration-ms="8993" started-at="2017-02-24T17:13:38Z" data-provider="iOS: SM Template Test Data" finished-at="2017-02-24T17:13:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-sidebar-adjoin]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[736px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTemplateMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:13:47Z" finished-at="2017-02-24T17:13:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:47Z" finished-at="2017-02-24T17:13:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.smTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="smTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="smTemplateMobileiOSTest" duration-ms="9403" started-at="2017-02-24T17:13:47Z" data-provider="iOS: SM Template Test Data" finished-at="2017-02-24T17:13:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-single-bottom]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[736px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTemplateMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:13:56Z" finished-at="2017-02-24T17:13:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:56Z" finished-at="2017-02-24T17:13:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.smTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="smTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="smTemplateMobileiOSTest" duration-ms="8752" started-at="2017-02-24T17:13:56Z" data-provider="iOS: SM Template Test Data" finished-at="2017-02-24T17:14:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-single-smallgap]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[736px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTemplateMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:14:05Z" finished-at="2017-02-24T17:14:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="smTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="smTemplateMobileiOSTest" duration-ms="10703" started-at="2017-02-24T17:14:05Z" data-provider="iOS: SM Template Test Data" finished-at="2017-02-24T17:14:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-smallgap]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[736px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTemplateMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:14:05Z" finished-at="2017-02-24T17:14:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.smTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:14:16Z" finished-at="2017-02-24T17:14:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.smTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:14:16Z" finished-at="2017-02-24T17:14:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="smTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="smTemplateMobileiOSTest" duration-ms="9028" started-at="2017-02-24T17:14:16Z" data-provider="iOS: SM Template Test Data" finished-at="2017-02-24T17:14:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-main-smallgap]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[736px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTemplateMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:14:25Z" finished-at="2017-02-24T17:14:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:14:25Z" finished-at="2017-02-24T17:14:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.smTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="smTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="smTemplateMobileiOSTest" duration-ms="9217" started-at="2017-02-24T17:14:25Z" data-provider="iOS: SM Template Test Data" finished-at="2017-02-24T17:14:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-sidebar-smallgap]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[736px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTemplateMobileiOSTest -->
        <test-method status="PASS" signature="smTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="smTemplateMobileiOSTest" duration-ms="9069" started-at="2017-02-24T17:14:34Z" data-provider="iOS: SM Template Test Data" finished-at="2017-02-24T17:14:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-single-smallgap-bottom]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[736px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTemplateMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:14:34Z" finished-at="2017-02-24T17:14:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:14:34Z" finished-at="2017-02-24T17:14:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.smTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:14:43Z" finished-at="2017-02-24T17:14:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="smTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="smTemplateMobileiOSTest" duration-ms="8961" started-at="2017-02-24T17:14:43Z" data-provider="iOS: SM Template Test Data" finished-at="2017-02-24T17:14:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-single-largegap]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[736px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTemplateMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:14:43Z" finished-at="2017-02-24T17:14:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.smTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:14:52Z" finished-at="2017-02-24T17:14:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.smTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:14:52Z" finished-at="2017-02-24T17:14:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="smTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="smTemplateMobileiOSTest" duration-ms="8838" started-at="2017-02-24T17:14:52Z" data-provider="iOS: SM Template Test Data" finished-at="2017-02-24T17:15:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-largegap]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[736px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTemplateMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:15:01Z" finished-at="2017-02-24T17:15:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.smTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:15:01Z" finished-at="2017-02-24T17:15:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="smTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="smTemplateMobileiOSTest" duration-ms="8961" started-at="2017-02-24T17:15:01Z" data-provider="iOS: SM Template Test Data" finished-at="2017-02-24T17:15:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-main-largegap]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[736px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTemplateMobileiOSTest -->
        <test-method status="PASS" signature="smTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="smTemplateMobileiOSTest" duration-ms="9464" started-at="2017-02-24T17:15:10Z" data-provider="iOS: SM Template Test Data" finished-at="2017-02-24T17:15:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-sidebar-largegap]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[736px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTemplateMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:15:10Z" finished-at="2017-02-24T17:15:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:15:10Z" finished-at="2017-02-24T17:15:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.smTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:15:19Z" finished-at="2017-02-24T17:15:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:15:19Z" finished-at="2017-02-24T17:15:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.smTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="smTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="smTemplateMobileiOSTest" duration-ms="8687" started-at="2017-02-24T17:15:19Z" data-provider="iOS: SM Template Test Data" finished-at="2017-02-24T17:15:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-single-largegap-bottom]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[736px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTemplateMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:15:28Z" finished-at="2017-02-24T17:15:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:15:28Z" finished-at="2017-02-24T17:15:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xlTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="xlTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="xlTemplateMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:15:28Z" data-provider="iOS: XL Template Test Data" finished-at="2017-02-24T17:15:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-main]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[910.65625px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Pro']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Pro'
	at elementsTests.TemplatesTest.xlTemplateMobileiOSTest(TemplatesTest.java:573)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlTemplateMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:15:28Z" finished-at="2017-02-24T17:15:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:15:28Z" finished-at="2017-02-24T17:15:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xlTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="xlTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="xlTemplateMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:15:28Z" data-provider="iOS: XL Template Test Data" finished-at="2017-02-24T17:15:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-single]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[1366px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Pro']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Pro'
	at elementsTests.TemplatesTest.xlTemplateMobileiOSTest(TemplatesTest.java:573)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlTemplateMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:15:28Z" finished-at="2017-02-24T17:15:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="xlTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="xlTemplateMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:15:28Z" data-provider="iOS: XL Template Test Data" finished-at="2017-02-24T17:15:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-sidebar]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[455.328125px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Pro']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Pro'
	at elementsTests.TemplatesTest.xlTemplateMobileiOSTest(TemplatesTest.java:573)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlTemplateMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:15:28Z" finished-at="2017-02-24T17:15:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xlTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:15:28Z" finished-at="2017-02-24T17:15:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xlTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="xlTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="xlTemplateMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:15:28Z" data-provider="iOS: XL Template Test Data" finished-at="2017-02-24T17:15:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-main-left]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[910.65625px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Pro']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Pro'
	at elementsTests.TemplatesTest.xlTemplateMobileiOSTest(TemplatesTest.java:573)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlTemplateMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:15:28Z" finished-at="2017-02-24T17:15:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:15:28Z" finished-at="2017-02-24T17:15:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:15:28Z" finished-at="2017-02-24T17:15:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xlTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="xlTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="xlTemplateMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:15:28Z" data-provider="iOS: XL Template Test Data" finished-at="2017-02-24T17:15:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-sidebar-left]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[455.328125px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Pro']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Pro'
	at elementsTests.TemplatesTest.xlTemplateMobileiOSTest(TemplatesTest.java:573)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlTemplateMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:15:28Z" finished-at="2017-02-24T17:15:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xlTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:15:28Z" finished-at="2017-02-24T17:15:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:15:28Z" finished-at="2017-02-24T17:15:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:15:28Z" finished-at="2017-02-24T17:15:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xlTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="xlTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="xlTemplateMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:15:28Z" data-provider="iOS: XL Template Test Data" finished-at="2017-02-24T17:15:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-static-large]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[800px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Pro']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Pro'
	at elementsTests.TemplatesTest.xlTemplateMobileiOSTest(TemplatesTest.java:573)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlTemplateMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:15:28Z" finished-at="2017-02-24T17:15:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xlTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:15:28Z" finished-at="2017-02-24T17:15:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="xlTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="xlTemplateMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:15:28Z" data-provider="iOS: XL Template Test Data" finished-at="2017-02-24T17:15:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-static-small]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[480px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Pro']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Pro'
	at elementsTests.TemplatesTest.xlTemplateMobileiOSTest(TemplatesTest.java:573)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlTemplateMobileiOSTest -->
        <test-method status="SKIP" signature="xlTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="xlTemplateMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:15:28Z" data-provider="iOS: XL Template Test Data" finished-at="2017-02-24T17:15:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-single-adjoin]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[1366px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Pro']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Pro'
	at elementsTests.TemplatesTest.xlTemplateMobileiOSTest(TemplatesTest.java:573)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlTemplateMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:15:28Z" finished-at="2017-02-24T17:15:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:15:28Z" finished-at="2017-02-24T17:15:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xlTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:15:28Z" finished-at="2017-02-24T17:15:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="xlTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="xlTemplateMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:15:28Z" data-provider="iOS: XL Template Test Data" finished-at="2017-02-24T17:15:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-main-adjoin]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[910.65625px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Pro']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Pro'
	at elementsTests.TemplatesTest.xlTemplateMobileiOSTest(TemplatesTest.java:573)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlTemplateMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:15:28Z" finished-at="2017-02-24T17:15:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:15:28Z" finished-at="2017-02-24T17:15:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xlTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:15:28Z" finished-at="2017-02-24T17:15:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xlTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="xlTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="xlTemplateMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:15:28Z" data-provider="iOS: XL Template Test Data" finished-at="2017-02-24T17:15:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-single-bottom]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[1366px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Pro']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Pro'
	at elementsTests.TemplatesTest.xlTemplateMobileiOSTest(TemplatesTest.java:573)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlTemplateMobileiOSTest -->
        <test-method status="SKIP" signature="xlTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="xlTemplateMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:15:28Z" data-provider="iOS: XL Template Test Data" finished-at="2017-02-24T17:15:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-sidebar-adjoin]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[455.328125px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Pro']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Pro'
	at elementsTests.TemplatesTest.xlTemplateMobileiOSTest(TemplatesTest.java:573)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlTemplateMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:15:28Z" finished-at="2017-02-24T17:15:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xlTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:15:28Z" finished-at="2017-02-24T17:15:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xlTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:15:28Z" finished-at="2017-02-24T17:15:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:15:28Z" finished-at="2017-02-24T17:15:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="xlTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="xlTemplateMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:15:28Z" data-provider="iOS: XL Template Test Data" finished-at="2017-02-24T17:15:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-single-smallgap]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[1366px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Pro']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Pro'
	at elementsTests.TemplatesTest.xlTemplateMobileiOSTest(TemplatesTest.java:573)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlTemplateMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:15:28Z" finished-at="2017-02-24T17:15:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xlTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:15:28Z" finished-at="2017-02-24T17:15:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="xlTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="xlTemplateMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:15:28Z" data-provider="iOS: XL Template Test Data" finished-at="2017-02-24T17:15:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-smallgap]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[1366px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Pro']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Pro'
	at elementsTests.TemplatesTest.xlTemplateMobileiOSTest(TemplatesTest.java:573)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlTemplateMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:15:28Z" finished-at="2017-02-24T17:15:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:15:28Z" finished-at="2017-02-24T17:15:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xlTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="xlTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="xlTemplateMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:15:28Z" data-provider="iOS: XL Template Test Data" finished-at="2017-02-24T17:15:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-main-smallgap]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[910.65625px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Pro']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Pro'
	at elementsTests.TemplatesTest.xlTemplateMobileiOSTest(TemplatesTest.java:573)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlTemplateMobileiOSTest -->
        <test-method status="SKIP" signature="xlTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="xlTemplateMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:15:28Z" data-provider="iOS: XL Template Test Data" finished-at="2017-02-24T17:15:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-sidebar-smallgap]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[455.328125px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Pro']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Pro'
	at elementsTests.TemplatesTest.xlTemplateMobileiOSTest(TemplatesTest.java:573)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlTemplateMobileiOSTest -->
        <test-method status="SKIP" signature="xlTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="xlTemplateMobileiOSTest" duration-ms="1" started-at="2017-02-24T17:15:28Z" data-provider="iOS: XL Template Test Data" finished-at="2017-02-24T17:15:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-single-smallgap-bottom]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[1366px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Pro']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Pro'
	at elementsTests.TemplatesTest.xlTemplateMobileiOSTest(TemplatesTest.java:573)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlTemplateMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:15:28Z" finished-at="2017-02-24T17:15:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:15:28Z" finished-at="2017-02-24T17:15:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xlTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:15:28Z" finished-at="2017-02-24T17:15:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="xlTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="xlTemplateMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:15:28Z" data-provider="iOS: XL Template Test Data" finished-at="2017-02-24T17:15:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-single-largegap]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[1366px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Pro']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Pro'
	at elementsTests.TemplatesTest.xlTemplateMobileiOSTest(TemplatesTest.java:573)
	at sun.reflect.GeneratedMethodAccessor55.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlTemplateMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:15:28Z" finished-at="2017-02-24T17:15:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xlTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:15:28Z" finished-at="2017-02-24T17:15:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:15:28Z" finished-at="2017-02-24T17:15:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xlTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="xlTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="xlTemplateMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:15:28Z" data-provider="iOS: XL Template Test Data" finished-at="2017-02-24T17:15:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-largegap]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[1366px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Pro']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Pro'
	at elementsTests.TemplatesTest.xlTemplateMobileiOSTest(TemplatesTest.java:573)
	at sun.reflect.GeneratedMethodAccessor55.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlTemplateMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:15:28Z" finished-at="2017-02-24T17:15:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:15:28Z" finished-at="2017-02-24T17:15:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xlTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="xlTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="xlTemplateMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:15:28Z" data-provider="iOS: XL Template Test Data" finished-at="2017-02-24T17:15:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-sidebar-largegap]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[455.328125px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Pro']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Pro'
	at elementsTests.TemplatesTest.xlTemplateMobileiOSTest(TemplatesTest.java:573)
	at sun.reflect.GeneratedMethodAccessor55.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlTemplateMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:15:28Z" finished-at="2017-02-24T17:15:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:15:28Z" finished-at="2017-02-24T17:15:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xlTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:15:28Z" finished-at="2017-02-24T17:15:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:15:28Z" finished-at="2017-02-24T17:15:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xlTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="xlTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="xlTemplateMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:15:28Z" data-provider="iOS: XL Template Test Data" finished-at="2017-02-24T17:15:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-main-largegap]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[910.65625px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Pro']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Pro'
	at elementsTests.TemplatesTest.xlTemplateMobileiOSTest(TemplatesTest.java:573)
	at sun.reflect.GeneratedMethodAccessor55.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlTemplateMobileiOSTest -->
        <test-method status="SKIP" signature="xlTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="xlTemplateMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:15:28Z" data-provider="iOS: XL Template Test Data" finished-at="2017-02-24T17:15:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-single-largegap-bottom]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[1366px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Pro']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Pro'
	at elementsTests.TemplatesTest.xlTemplateMobileiOSTest(TemplatesTest.java:573)
	at sun.reflect.GeneratedMethodAccessor55.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlTemplateMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:15:28Z" finished-at="2017-02-24T17:15:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="xsTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="xsTemplateMobileiOSTest" duration-ms="9840" started-at="2017-02-24T17:15:28Z" data-provider="iOS: XS Template Test Data" finished-at="2017-02-24T17:15:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-single]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[414px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsTemplateMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:15:28Z" finished-at="2017-02-24T17:15:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xsTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:15:38Z" finished-at="2017-02-24T17:15:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:15:38Z" finished-at="2017-02-24T17:15:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xsTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xsTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="xsTemplateMobileiOSTest" duration-ms="10986" started-at="2017-02-24T17:15:38Z" data-provider="iOS: XS Template Test Data" finished-at="2017-02-24T17:15:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-main]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[414px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsTemplateMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:15:49Z" finished-at="2017-02-24T17:15:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:15:49Z" finished-at="2017-02-24T17:15:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xsTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xsTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="xsTemplateMobileiOSTest" duration-ms="9186" started-at="2017-02-24T17:15:49Z" data-provider="iOS: XS Template Test Data" finished-at="2017-02-24T17:15:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-sidebar]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[414px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsTemplateMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:15:58Z" finished-at="2017-02-24T17:15:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="xsTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="xsTemplateMobileiOSTest" duration-ms="9197" started-at="2017-02-24T17:15:58Z" data-provider="iOS: XS Template Test Data" finished-at="2017-02-24T17:16:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-main-left]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[414px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsTemplateMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:15:58Z" finished-at="2017-02-24T17:15:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xsTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:16:07Z" finished-at="2017-02-24T17:16:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="xsTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="xsTemplateMobileiOSTest" duration-ms="9466" started-at="2017-02-24T17:16:07Z" data-provider="iOS: XS Template Test Data" finished-at="2017-02-24T17:16:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-sidebar-left]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[414px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsTemplateMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:16:07Z" finished-at="2017-02-24T17:16:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xsTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:16:17Z" finished-at="2017-02-24T17:16:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:16:17Z" finished-at="2017-02-24T17:16:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xsTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xsTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="xsTemplateMobileiOSTest" duration-ms="9240" started-at="2017-02-24T17:16:17Z" data-provider="iOS: XS Template Test Data" finished-at="2017-02-24T17:16:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-static-small]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[414px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsTemplateMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:16:26Z" finished-at="2017-02-24T17:16:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="xsTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="xsTemplateMobileiOSTest" duration-ms="8812" started-at="2017-02-24T17:16:26Z" data-provider="iOS: XS Template Test Data" finished-at="2017-02-24T17:16:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-static-large]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[414px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsTemplateMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:16:26Z" finished-at="2017-02-24T17:16:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xsTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:16:35Z" finished-at="2017-02-24T17:16:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="xsTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="xsTemplateMobileiOSTest" duration-ms="8991" started-at="2017-02-24T17:16:35Z" data-provider="iOS: XS Template Test Data" finished-at="2017-02-24T17:16:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-single-adjoin]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[414px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsTemplateMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:16:35Z" finished-at="2017-02-24T17:16:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xsTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:16:44Z" finished-at="2017-02-24T17:16:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:16:44Z" finished-at="2017-02-24T17:16:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xsTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xsTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="xsTemplateMobileiOSTest" duration-ms="8958" started-at="2017-02-24T17:16:44Z" data-provider="iOS: XS Template Test Data" finished-at="2017-02-24T17:16:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-main-adjoin]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[414px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsTemplateMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:16:53Z" finished-at="2017-02-24T17:16:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xsTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:16:53Z" finished-at="2017-02-24T17:16:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="xsTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="xsTemplateMobileiOSTest" duration-ms="8932" started-at="2017-02-24T17:16:53Z" data-provider="iOS: XS Template Test Data" finished-at="2017-02-24T17:17:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-sidebar-adjoin]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[414px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsTemplateMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:17:02Z" finished-at="2017-02-24T17:17:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="xsTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="xsTemplateMobileiOSTest" duration-ms="10551" started-at="2017-02-24T17:17:02Z" data-provider="iOS: XS Template Test Data" finished-at="2017-02-24T17:17:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-sidebar-adjoin]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[414px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsTemplateMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:17:02Z" finished-at="2017-02-24T17:17:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xsTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:17:12Z" finished-at="2017-02-24T17:17:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:17:12Z" finished-at="2017-02-24T17:17:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xsTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xsTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="xsTemplateMobileiOSTest" duration-ms="8678" started-at="2017-02-24T17:17:12Z" data-provider="iOS: XS Template Test Data" finished-at="2017-02-24T17:17:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-single-bottom]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[414px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsTemplateMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:17:21Z" finished-at="2017-02-24T17:17:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:17:21Z" finished-at="2017-02-24T17:17:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xsTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xsTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="xsTemplateMobileiOSTest" duration-ms="9050" started-at="2017-02-24T17:17:21Z" data-provider="iOS: XS Template Test Data" finished-at="2017-02-24T17:17:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-single-smallgap]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[414px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsTemplateMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:17:30Z" finished-at="2017-02-24T17:17:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:17:30Z" finished-at="2017-02-24T17:17:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xsTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xsTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="xsTemplateMobileiOSTest" duration-ms="8955" started-at="2017-02-24T17:17:30Z" data-provider="iOS: XS Template Test Data" finished-at="2017-02-24T17:17:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-smallgap]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[414px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsTemplateMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:17:39Z" finished-at="2017-02-24T17:17:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:17:39Z" finished-at="2017-02-24T17:17:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xsTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xsTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="xsTemplateMobileiOSTest" duration-ms="8783" started-at="2017-02-24T17:17:39Z" data-provider="iOS: XS Template Test Data" finished-at="2017-02-24T17:17:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-main-smallgap]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[414px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsTemplateMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:17:48Z" finished-at="2017-02-24T17:17:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xsTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xsTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="xsTemplateMobileiOSTest" duration-ms="8940" started-at="2017-02-24T17:17:48Z" data-provider="iOS: XS Template Test Data" finished-at="2017-02-24T17:17:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-sidebar-smallgap]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[414px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsTemplateMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:17:48Z" finished-at="2017-02-24T17:17:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:17:57Z" finished-at="2017-02-24T17:17:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xsTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:17:57Z" finished-at="2017-02-24T17:17:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="xsTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="xsTemplateMobileiOSTest" duration-ms="8908" started-at="2017-02-24T17:17:57Z" data-provider="iOS: XS Template Test Data" finished-at="2017-02-24T17:18:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-single-smallgap-bottom]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[414px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsTemplateMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:18:05Z" finished-at="2017-02-24T17:18:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="xsTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="xsTemplateMobileiOSTest" duration-ms="9395" started-at="2017-02-24T17:18:05Z" data-provider="iOS: XS Template Test Data" finished-at="2017-02-24T17:18:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-single-largegap]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[414px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsTemplateMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:18:05Z" finished-at="2017-02-24T17:18:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xsTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:18:15Z" finished-at="2017-02-24T17:18:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xsTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:18:15Z" finished-at="2017-02-24T17:18:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="xsTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="xsTemplateMobileiOSTest" duration-ms="8857" started-at="2017-02-24T17:18:15Z" data-provider="iOS: XS Template Test Data" finished-at="2017-02-24T17:18:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-largegap]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[414px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsTemplateMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:18:24Z" finished-at="2017-02-24T17:18:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:18:24Z" finished-at="2017-02-24T17:18:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xsTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xsTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="xsTemplateMobileiOSTest" duration-ms="8960" started-at="2017-02-24T17:18:24Z" data-provider="iOS: XS Template Test Data" finished-at="2017-02-24T17:18:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-main-largegap]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[414px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsTemplateMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:18:33Z" finished-at="2017-02-24T17:18:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:18:33Z" finished-at="2017-02-24T17:18:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xsTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xsTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="xsTemplateMobileiOSTest" duration-ms="10807" started-at="2017-02-24T17:18:33Z" data-provider="iOS: XS Template Test Data" finished-at="2017-02-24T17:18:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-double-sidebar-largegap]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[414px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsTemplateMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:18:43Z" finished-at="2017-02-24T17:18:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:18:43Z" finished-at="2017-02-24T17:18:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xsTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xsTemplateMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="xsTemplateMobileiOSTest" duration-ms="9315" started-at="2017-02-24T17:18:43Z" data-provider="iOS: XS Template Test Data" finished-at="2017-02-24T17:18:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: template-single-largegap-bottom]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[414px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsTemplateMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:18:53Z" finished-at="2017-02-24T17:18:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="tearDown(java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@9a7504c]" name="tearDown" is-config="true" duration-ms="1054" started-at="2017-02-24T17:18:53Z" finished-at="2017-02-24T17:18:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- elementsTests.TemplatesTest -->
      <class name="compoundsTests.ButtonsTest">
        <test-method status="PASS" signature="setUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="setUp" is-config="true" duration-ms="54628" started-at="2017-02-24T17:16:34Z" finished-at="2017-02-24T17:17:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sauce]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[off]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OS X 10.11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[54.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[iOS]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[iPhone 6 Plus]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[9.3]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[safari]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[1.5.3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="avatarDisplayTestBeforeClass(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="avatarDisplayTestBeforeClass" is-config="true" duration-ms="1" started-at="2017-02-24T17:17:28Z" finished-at="2017-02-24T17:17:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sauce]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avatarDisplayTestBeforeClass -->
        <test-method status="PASS" signature="validButtonPropTypesMobileTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="validButtonPropTypesMobileTest" duration-ms="11111" started-at="2017-02-24T17:17:28Z" data-provider="Valid Button Prop Types Test Data" finished-at="2017-02-24T17:17:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: '',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[btnSize: 'large',]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'default-large',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[pe-btn--btn_large]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@18a136ac]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@77d67cf3]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[[Ljava.lang.String;@6dee4f1b]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[[Ljava.lang.String;@176b3f44]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validButtonPropTypesMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:17:28Z" finished-at="2017-02-24T17:17:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.validButtonPropTypesMobileTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:17:39Z" finished-at="2017-02-24T17:17:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:17:39Z" finished-at="2017-02-24T17:17:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.validButtonPropTypesMobileTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="validButtonPropTypesMobileTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="validButtonPropTypesMobileTest" duration-ms="7418" started-at="2017-02-24T17:17:39Z" data-provider="Valid Button Prop Types Test Data" finished-at="2017-02-24T17:17:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: '',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[btnSize: 'xlarge',]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'default-xlarge',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[pe-btn--btn_xlarge]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@6ee6f53]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@421bba99]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[[Ljava.lang.String;@5d12a356]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[[Ljava.lang.String;@134d26af]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validButtonPropTypesMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:17:47Z" finished-at="2017-02-24T17:17:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.validButtonPropTypesMobileTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:17:47Z" finished-at="2017-02-24T17:17:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="validButtonPropTypesMobileTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="validButtonPropTypesMobileTest" duration-ms="6685" started-at="2017-02-24T17:17:47Z" data-provider="Valid Button Prop Types Test Data" finished-at="2017-02-24T17:17:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: '',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[btnSize: 'small',]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'default-small',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[pe-btn--btn_small]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@66ac5762]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@797cf65c]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[[Ljava.lang.String;@31bcf236]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[[Ljava.lang.String;@4b3ed2f0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validButtonPropTypesMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:17:53Z" finished-at="2017-02-24T17:17:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.validButtonPropTypesMobileTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:17:53Z" finished-at="2017-02-24T17:17:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="validButtonPropTypesMobileTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="validButtonPropTypesMobileTest" duration-ms="6636" started-at="2017-02-24T17:17:53Z" data-provider="Valid Button Prop Types Test Data" finished-at="2017-02-24T17:18:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: '',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[btnSize: '',]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'just-default',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[pe-btn]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@4fad9bb2]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@517d4a0d]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[[Ljava.lang.String;@7862f56]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[[Ljava.lang.String;@3a12c404]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validButtonPropTypesMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:18:00Z" finished-at="2017-02-24T17:18:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="validButtonPropTypesMobileTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="validButtonPropTypesMobileTest" duration-ms="6801" started-at="2017-02-24T17:18:00Z" data-provider="Valid Button Prop Types Test Data" finished-at="2017-02-24T17:18:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: '',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'default',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[pe-btn]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@1941a8ff]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@22d7b4f8]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[[Ljava.lang.String;@149dd36b]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[[Ljava.lang.String;@38831718]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validButtonPropTypesMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:18:00Z" finished-at="2017-02-24T17:18:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.validButtonPropTypesMobileTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:18:07Z" finished-at="2017-02-24T17:18:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:18:07Z" finished-at="2017-02-24T17:18:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.validButtonPropTypesMobileTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="validButtonPropTypesMobileTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="validButtonPropTypesMobileTest" duration-ms="6659" started-at="2017-02-24T17:18:07Z" data-provider="Valid Button Prop Types Test Data" finished-at="2017-02-24T17:18:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[pe-btn]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@2c1156a7]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@33fe57a9]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[[Ljava.lang.String;@4982cc36]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[[Ljava.lang.String;@691939c9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validButtonPropTypesMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:18:13Z" finished-at="2017-02-24T17:18:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="validButtonPropTypesMobileTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="validButtonPropTypesMobileTest" duration-ms="6609" started-at="2017-02-24T17:18:13Z" data-provider="Valid Button Prop Types Test Data" finished-at="2017-02-24T17:18:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: 'primary',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[btnSize: 'large',]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'primary-large',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[pe-btn__primary--btn_large]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@4f1bfe23]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@e19bb76]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[[Ljava.lang.String;@512535ff]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[[Ljava.lang.String;@71529963]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validButtonPropTypesMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:18:13Z" finished-at="2017-02-24T17:18:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.validButtonPropTypesMobileTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:18:20Z" finished-at="2017-02-24T17:18:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:18:20Z" finished-at="2017-02-24T17:18:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.validButtonPropTypesMobileTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="validButtonPropTypesMobileTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="validButtonPropTypesMobileTest" duration-ms="6588" started-at="2017-02-24T17:18:20Z" data-provider="Valid Button Prop Types Test Data" finished-at="2017-02-24T17:18:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: 'primary',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[btnSize: 'xlarge',]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'primary-xlarge',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[pe-btn__primary--btn_xlarge]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@61a88b8c]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@22295ec4]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[[Ljava.lang.String;@5adb0db3]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[[Ljava.lang.String;@3f270e0a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validButtonPropTypesMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:18:27Z" finished-at="2017-02-24T17:18:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="validButtonPropTypesMobileTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="validButtonPropTypesMobileTest" duration-ms="7992" started-at="2017-02-24T17:18:27Z" data-provider="Valid Button Prop Types Test Data" finished-at="2017-02-24T17:18:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: 'primary',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[btnSize: 'small',]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'primary-small',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[pe-btn__primary--btn_small]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@1a760689]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@7241a47d]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[[Ljava.lang.String;@70f59913]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[[Ljava.lang.String;@77258e59]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validButtonPropTypesMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:18:27Z" finished-at="2017-02-24T17:18:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.validButtonPropTypesMobileTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:18:35Z" finished-at="2017-02-24T17:18:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:18:35Z" finished-at="2017-02-24T17:18:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.validButtonPropTypesMobileTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="validButtonPropTypesMobileTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="validButtonPropTypesMobileTest" duration-ms="6455" started-at="2017-02-24T17:18:35Z" data-provider="Valid Button Prop Types Test Data" finished-at="2017-02-24T17:18:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: 'primary',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[btnSize: '',]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'just-primary',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[pe-btn__primary]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@5dcd8c7a]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@2250b9f2]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[[Ljava.lang.String;@7e3181aa]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[[Ljava.lang.String;@253d9f73]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validButtonPropTypesMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:18:41Z" finished-at="2017-02-24T17:18:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="validButtonPropTypesMobileTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="validButtonPropTypesMobileTest" duration-ms="6426" started-at="2017-02-24T17:18:41Z" data-provider="Valid Button Prop Types Test Data" finished-at="2017-02-24T17:18:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: 'primary',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'primary',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[pe-btn__primary]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@142269f2]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@331acdad]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[[Ljava.lang.String;@41d426b5]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[[Ljava.lang.String;@8dbfffb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validButtonPropTypesMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:18:41Z" finished-at="2017-02-24T17:18:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.validButtonPropTypesMobileTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:18:48Z" finished-at="2017-02-24T17:18:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.validButtonPropTypesMobileTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="validButtonPropTypesMobileTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="validButtonPropTypesMobileTest" duration-ms="6869" started-at="2017-02-24T17:18:48Z" data-provider="Valid Button Prop Types Test Data" finished-at="2017-02-24T17:18:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: 'primary',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[pe-btn__primary]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@f316aeb]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@6aa3a905]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[[Ljava.lang.String;@a22cb6a]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[[Ljava.lang.String;@5dd1c9f2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validButtonPropTypesMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:18:48Z" finished-at="2017-02-24T17:18:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="validButtonPropTypesMobileTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="validButtonPropTypesMobileTest" duration-ms="6393" started-at="2017-02-24T17:18:54Z" data-provider="Valid Button Prop Types Test Data" finished-at="2017-02-24T17:19:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: 'cta',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[btnSize: 'large',]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'cta-large',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[pe-btn__cta--btn_large]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@59b38691]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@2e2ff723]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[[Ljava.lang.String;@324a0017]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[[Ljava.lang.String;@6187d1f5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validButtonPropTypesMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:18:54Z" finished-at="2017-02-24T17:18:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:18:54Z" finished-at="2017-02-24T17:18:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.validButtonPropTypesMobileTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:19:01Z" finished-at="2017-02-24T17:19:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:19:01Z" finished-at="2017-02-24T17:19:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.validButtonPropTypesMobileTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="validButtonPropTypesMobileTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="validButtonPropTypesMobileTest" duration-ms="11048" started-at="2017-02-24T17:19:01Z" data-provider="Valid Button Prop Types Test Data" finished-at="2017-02-24T17:19:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: 'cta',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[btnSize: 'xlarge',]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'cta-xlarge',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[pe-btn__cta--btn_xlarge]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@2445445a]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@7502291e]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[[Ljava.lang.String;@17aad511]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[[Ljava.lang.String;@487db668]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validButtonPropTypesMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:19:12Z" finished-at="2017-02-24T17:19:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:19:12Z" finished-at="2017-02-24T17:19:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.validButtonPropTypesMobileTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="validButtonPropTypesMobileTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="validButtonPropTypesMobileTest" duration-ms="6349" started-at="2017-02-24T17:19:12Z" data-provider="Valid Button Prop Types Test Data" finished-at="2017-02-24T17:19:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: 'cta',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[btnSize: 'small',]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'cta-small',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[pe-btn__cta--btn_small]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@46944ca9]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@22bac7bc]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[[Ljava.lang.String;@63798ca7]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[[Ljava.lang.String;@4612b856]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validButtonPropTypesMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:19:18Z" finished-at="2017-02-24T17:19:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:19:18Z" finished-at="2017-02-24T17:19:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.validButtonPropTypesMobileTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="validButtonPropTypesMobileTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="validButtonPropTypesMobileTest" duration-ms="6498" started-at="2017-02-24T17:19:18Z" data-provider="Valid Button Prop Types Test Data" finished-at="2017-02-24T17:19:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: 'cta',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'just-small',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[pe-btn__cta]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@22875539]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@5674e1f2]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[[Ljava.lang.String;@79c7532f]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[[Ljava.lang.String;@2a448449]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validButtonPropTypesMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:19:25Z" finished-at="2017-02-24T17:19:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.validButtonPropTypesMobileTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="validButtonPropTypesMobileTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="validButtonPropTypesMobileTest" duration-ms="6470" started-at="2017-02-24T17:19:25Z" data-provider="Valid Button Prop Types Test Data" finished-at="2017-02-24T17:19:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: 'cta',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'cta',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[pe-btn__cta]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@32f232a5]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@43f82e78]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[[Ljava.lang.String;@e54303]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[[Ljava.lang.String;@e8df99a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validButtonPropTypesMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:19:25Z" finished-at="2017-02-24T17:19:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:19:31Z" finished-at="2017-02-24T17:19:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:19:31Z" finished-at="2017-02-24T17:19:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.validButtonPropTypesMobileTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="validButtonPropTypesMobileTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="validButtonPropTypesMobileTest" duration-ms="6355" started-at="2017-02-24T17:19:31Z" data-provider="Valid Button Prop Types Test Data" finished-at="2017-02-24T17:19:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: 'cta',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[pe-btn__cta]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@2dc995f4]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@2f40e5db]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[[Ljava.lang.String;@517566b]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[[Ljava.lang.String;@64b73e7a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validButtonPropTypesMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:19:38Z" finished-at="2017-02-24T17:19:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="verifyButtonInvalidPropTypesMobileTest(java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="verifyButtonInvalidPropTypesMobileTest" duration-ms="3047" started-at="2017-02-24T17:19:38Z" data-provider="Invalid Button Prop Types Test Data" finished-at="2017-02-24T17:19:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: 'somejunk',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[btnSize: 'large',]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'default-large',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@50468873]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@146587a2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyButtonInvalidPropTypesMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:19:38Z" finished-at="2017-02-24T17:19:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.verifyButtonInvalidPropTypesMobileTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:19:41Z" finished-at="2017-02-24T17:19:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.verifyButtonInvalidPropTypesMobileTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:19:41Z" finished-at="2017-02-24T17:19:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="verifyButtonInvalidPropTypesMobileTest(java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="verifyButtonInvalidPropTypesMobileTest" duration-ms="3548" started-at="2017-02-24T17:19:41Z" data-provider="Invalid Button Prop Types Test Data" finished-at="2017-02-24T17:19:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: 'somejunk',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[btnSize: 'xlarge',]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'default-xlarge',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@5f0e9815]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@76884e4b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyButtonInvalidPropTypesMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:19:44Z" finished-at="2017-02-24T17:19:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:19:44Z" finished-at="2017-02-24T17:19:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.verifyButtonInvalidPropTypesMobileTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyButtonInvalidPropTypesMobileTest(java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="verifyButtonInvalidPropTypesMobileTest" duration-ms="3158" started-at="2017-02-24T17:19:44Z" data-provider="Invalid Button Prop Types Test Data" finished-at="2017-02-24T17:19:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: 'somejunk',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[btnSize: 'small',]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'default-small',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@126945f9]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@2a898881]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyButtonInvalidPropTypesMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:19:47Z" finished-at="2017-02-24T17:19:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:19:47Z" finished-at="2017-02-24T17:19:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.verifyButtonInvalidPropTypesMobileTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyButtonInvalidPropTypesMobileTest(java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="verifyButtonInvalidPropTypesMobileTest" duration-ms="3257" started-at="2017-02-24T17:19:47Z" data-provider="Invalid Button Prop Types Test Data" finished-at="2017-02-24T17:19:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: 'somejunk',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'default-small',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@16c63f5]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@35229f85]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyButtonInvalidPropTypesMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:19:51Z" finished-at="2017-02-24T17:19:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="verifyButtonInvalidPropTypesMobileTest(java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="verifyButtonInvalidPropTypesMobileTest" duration-ms="3087" started-at="2017-02-24T17:19:51Z" data-provider="Invalid Button Prop Types Test Data" finished-at="2017-02-24T17:19:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: 'primary',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[btnSize: 'largexyz',]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'primary-large-xyz',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@6d3c5255]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@b1712f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyButtonInvalidPropTypesMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:19:51Z" finished-at="2017-02-24T17:19:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.verifyButtonInvalidPropTypesMobileTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:19:54Z" finished-at="2017-02-24T17:19:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.verifyButtonInvalidPropTypesMobileTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyButtonInvalidPropTypesMobileTest(java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="verifyButtonInvalidPropTypesMobileTest" duration-ms="3038" started-at="2017-02-24T17:19:54Z" data-provider="Invalid Button Prop Types Test Data" finished-at="2017-02-24T17:19:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: 'primary',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[btnSize: 'xyzlarge',]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'xyz-primary-large',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@6986bbaf]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@4879dfad]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyButtonInvalidPropTypesMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:19:54Z" finished-at="2017-02-24T17:19:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:19:57Z" finished-at="2017-02-24T17:19:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:19:57Z" finished-at="2017-02-24T17:19:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.verifyButtonInvalidPropTypesMobileTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyButtonInvalidPropTypesMobileTest(java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="verifyButtonInvalidPropTypesMobileTest" duration-ms="3104" started-at="2017-02-24T17:19:57Z" data-provider="Invalid Button Prop Types Test Data" finished-at="2017-02-24T17:20:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: 'primary',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[btnSize: 'xlargexyz',]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'primary-xlarge-xyz',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@4758820d]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@74eb909f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyButtonInvalidPropTypesMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:20:00Z" finished-at="2017-02-24T17:20:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.verifyButtonInvalidPropTypesMobileTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:20:00Z" finished-at="2017-02-24T17:20:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="verifyButtonInvalidPropTypesMobileTest(java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="verifyButtonInvalidPropTypesMobileTest" duration-ms="3102" started-at="2017-02-24T17:20:00Z" data-provider="Invalid Button Prop Types Test Data" finished-at="2017-02-24T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: 'primary',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[btnSize: 'xyzxlarge',]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'primary-xyz-xlarge',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@28ec166e]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@2eee3069]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyButtonInvalidPropTypesMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:20:03Z" finished-at="2017-02-24T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.verifyButtonInvalidPropTypesMobileTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:20:03Z" finished-at="2017-02-24T17:20:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="verifyButtonInvalidPropTypesMobileTest(java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="verifyButtonInvalidPropTypesMobileTest" duration-ms="3160" started-at="2017-02-24T17:20:03Z" data-provider="Invalid Button Prop Types Test Data" finished-at="2017-02-24T17:20:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: 'primary',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[btnSize: 'smallxyz',]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'primary-small-xyz',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@2da59753]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@5629510]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyButtonInvalidPropTypesMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:20:06Z" finished-at="2017-02-24T17:20:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:20:06Z" finished-at="2017-02-24T17:20:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.verifyButtonInvalidPropTypesMobileTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyButtonInvalidPropTypesMobileTest(java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="verifyButtonInvalidPropTypesMobileTest" duration-ms="3288" started-at="2017-02-24T17:20:06Z" data-provider="Invalid Button Prop Types Test Data" finished-at="2017-02-24T17:20:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: 'primary',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[btnSize: 'xyzsmall',]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'xyz-primary-small',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@4df5bcb4]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@12c7a01b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyButtonInvalidPropTypesMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:20:09Z" finished-at="2017-02-24T17:20:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:20:09Z" finished-at="2017-02-24T17:20:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.verifyButtonInvalidPropTypesMobileTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyButtonInvalidPropTypesMobileTest(java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="verifyButtonInvalidPropTypesMobileTest" duration-ms="3082" started-at="2017-02-24T17:20:09Z" data-provider="Invalid Button Prop Types Test Data" finished-at="2017-02-24T17:20:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: 'primary',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[btnSize: 'xyz',]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'just-primary-xyz',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@13d9b21f]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@2826f61]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyButtonInvalidPropTypesMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:20:12Z" finished-at="2017-02-24T17:20:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.verifyButtonInvalidPropTypesMobileTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:20:12Z" finished-at="2017-02-24T17:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="verifyButtonInvalidPropTypesMobileTest(java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="verifyButtonInvalidPropTypesMobileTest" duration-ms="3122" started-at="2017-02-24T17:20:12Z" data-provider="Invalid Button Prop Types Test Data" finished-at="2017-02-24T17:20:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: 'cta',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[btnSize: 'largexyz',]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'cta-large-xyz',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@62727399]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@4d9ac0b4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyButtonInvalidPropTypesMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:20:16Z" finished-at="2017-02-24T17:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="verifyButtonInvalidPropTypesMobileTest(java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="verifyButtonInvalidPropTypesMobileTest" duration-ms="3073" started-at="2017-02-24T17:20:16Z" data-provider="Invalid Button Prop Types Test Data" finished-at="2017-02-24T17:20:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: 'cta',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[btnSize: 'xyzlargexyz',]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'xyz-cta-large',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@130dca52]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@2654635]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyButtonInvalidPropTypesMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:20:16Z" finished-at="2017-02-24T17:20:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.verifyButtonInvalidPropTypesMobileTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:20:19Z" finished-at="2017-02-24T17:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:20:19Z" finished-at="2017-02-24T17:20:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.verifyButtonInvalidPropTypesMobileTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyButtonInvalidPropTypesMobileTest(java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="verifyButtonInvalidPropTypesMobileTest" duration-ms="3013" started-at="2017-02-24T17:20:19Z" data-provider="Invalid Button Prop Types Test Data" finished-at="2017-02-24T17:20:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: 'cta',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[btnSize: 'xlargexyz',]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'cta-xlarge-xyz',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@737a135b]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@687ef2e0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyButtonInvalidPropTypesMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:20:22Z" finished-at="2017-02-24T17:20:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:20:22Z" finished-at="2017-02-24T17:20:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.verifyButtonInvalidPropTypesMobileTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyButtonInvalidPropTypesMobileTest(java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="verifyButtonInvalidPropTypesMobileTest" duration-ms="3064" started-at="2017-02-24T17:20:22Z" data-provider="Invalid Button Prop Types Test Data" finished-at="2017-02-24T17:20:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: 'cta',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[btnSize: 'xyzxlarge',]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'xyz-cta-xlarge',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@15dcfae7]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@3da05287]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyButtonInvalidPropTypesMobileTest -->
        <test-method status="PASS" signature="verifyButtonInvalidPropTypesMobileTest(java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="verifyButtonInvalidPropTypesMobileTest" duration-ms="3095" started-at="2017-02-24T17:20:25Z" data-provider="Invalid Button Prop Types Test Data" finished-at="2017-02-24T17:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: 'cta',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[btnSize: 'smallxyz',]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'cta-small-xyz',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@1e636ea3]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@115667d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyButtonInvalidPropTypesMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:20:25Z" finished-at="2017-02-24T17:20:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.verifyButtonInvalidPropTypesMobileTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:20:25Z" finished-at="2017-02-24T17:20:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:20:28Z" finished-at="2017-02-24T17:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="verifyButtonInvalidPropTypesMobileTest(java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="verifyButtonInvalidPropTypesMobileTest" duration-ms="3145" started-at="2017-02-24T17:20:28Z" data-provider="Invalid Button Prop Types Test Data" finished-at="2017-02-24T17:20:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: 'cta',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[btnSize: 'xyzsmall',]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'xyz-cta-small',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@736caf7a]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@4ce7fffa]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyButtonInvalidPropTypesMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:20:28Z" finished-at="2017-02-24T17:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.verifyButtonInvalidPropTypesMobileTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyButtonInvalidPropTypesMobileTest(java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="verifyButtonInvalidPropTypesMobileTest" duration-ms="3025" started-at="2017-02-24T17:20:31Z" data-provider="Invalid Button Prop Types Test Data" finished-at="2017-02-24T17:20:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: 'cta',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[btnSize: 'xyz',]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'just-small',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@497486b3]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@63f8276e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyButtonInvalidPropTypesMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:20:31Z" finished-at="2017-02-24T17:20:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:20:31Z" finished-at="2017-02-24T17:20:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.verifyButtonInvalidPropTypesMobileTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:20:34Z" finished-at="2017-02-24T17:20:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="tearDown(java.lang.String)[pri:0, instance:compoundsTests.ButtonsTest@58c1670b]" name="tearDown" is-config="true" duration-ms="680" started-at="2017-02-24T17:20:34Z" finished-at="2017-02-24T17:20:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- compoundsTests.ButtonsTest -->
      <class name="elementsTests.TypographyTest">
        <test-method status="PASS" signature="setUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="setUp" is-config="true" duration-ms="57672" started-at="2017-02-24T17:08:17Z" finished-at="2017-02-24T17:09:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sauce]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[off]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OS X 10.11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[54.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[iOS]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[iPhone 6 Plus]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[9.3]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[safari]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[1.5.3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="beforeMethod" is-config="true" duration-ms="956" started-at="2017-02-24T17:09:15Z" finished-at="2017-02-24T17:09:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.abbrMobileTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="typographyTestBeforeClass(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="typographyTestBeforeClass" is-config="true" duration-ms="0" started-at="2017-02-24T17:09:15Z" finished-at="2017-02-24T17:09:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sauce]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[off]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[iPhone 6 Plus]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[safari]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- typographyTestBeforeClass -->
        <test-method status="PASS" signature="abbrMobileTest()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="abbrMobileTest" duration-ms="1144" started-at="2017-02-24T17:09:16Z" finished-at="2017-02-24T17:09:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abbrMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:09:17Z" finished-at="2017-02-24T17:09:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="beforeMethod" is-config="true" duration-ms="974" started-at="2017-02-24T17:09:17Z" finished-at="2017-02-24T17:09:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.codeMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="codeMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="codeMobileTest" duration-ms="10215" started-at="2017-02-24T17:09:18Z" data-provider="Code Test Data" finished-at="2017-02-24T17:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[code-block]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: code]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@37e4d7bb]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@6f7923a5]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@74a6f9c1]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@54eb2b70]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[30px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[30px]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[50px]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[50px]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[[Ljava.lang.String;@45a37759]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- codeMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:09:28Z" finished-at="2017-02-24T17:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="beforeMethod" is-config="true" duration-ms="868" started-at="2017-02-24T17:09:28Z" finished-at="2017-02-24T17:09:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.codeMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="codeMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="codeMobileTest" duration-ms="10026" started-at="2017-02-24T17:09:29Z" data-provider="Code Test Data" finished-at="2017-02-24T17:09:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[code-inline]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: code-inline]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@63611043]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@20ca951f]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@2d778add]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@73302995]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[4px]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[4px]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[[Ljava.lang.String;@1838ccb8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- codeMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="beforeMethod" is-config="true" duration-ms="1101" started-at="2017-02-24T17:09:39Z" finished-at="2017-02-24T17:09:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.codeMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:09:39Z" finished-at="2017-02-24T17:09:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="codeMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="codeMobileTest" duration-ms="12373" started-at="2017-02-24T17:09:40Z" data-provider="Code Test Data" finished-at="2017-02-24T17:09:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[kdd]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: user-input]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@6c2ed0cd]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@7d9e8ef7]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@f107c50]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@51133c06]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[4px]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[4px]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[[Ljava.lang.String;@4b213651]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- codeMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:09:53Z" finished-at="2017-02-24T17:09:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="beforeMethod" is-config="true" duration-ms="884" started-at="2017-02-24T17:09:53Z" finished-at="2017-02-24T17:09:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.copyMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[],java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="copyMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="copyMobileTest" duration-ms="3341" started-at="2017-02-24T17:09:53Z" data-provider="copy Test Data" finished-at="2017-02-24T17:09:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[copy]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: copy]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@4241e0f4]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@4ebff610]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@60410cd]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:09:57Z" finished-at="2017-02-24T17:09:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="beforeMethod" is-config="true" duration-ms="877" started-at="2017-02-24T17:09:57Z" finished-at="2017-02-24T17:09:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.copyMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[],java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="copyMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="copyMobileTest" duration-ms="3322" started-at="2017-02-24T17:09:58Z" data-provider="copy Test Data" finished-at="2017-02-24T17:10:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[copy-small]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: copy-small]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@44d52de2]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@95e33cc]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@38604b81]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:10:01Z" finished-at="2017-02-24T17:10:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="beforeMethod" is-config="true" duration-ms="844" started-at="2017-02-24T17:10:01Z" finished-at="2017-02-24T17:10:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.copyMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[],java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="copyMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="copyMobileTest" duration-ms="3340" started-at="2017-02-24T17:10:02Z" data-provider="copy Test Data" finished-at="2017-02-24T17:10:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[copy-large]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: copy-large]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@1e44b638]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@7393222f]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@babafc2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="beforeMethod" is-config="true" duration-ms="973" started-at="2017-02-24T17:10:05Z" finished-at="2017-02-24T17:10:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.copyMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[],java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:10:05Z" finished-at="2017-02-24T17:10:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="copyMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="copyMobileTest" duration-ms="3402" started-at="2017-02-24T17:10:06Z" data-provider="copy Test Data" finished-at="2017-02-24T17:10:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[copy-secondary]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: copy-secondary]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@31add175]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@ae3540e]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@600b9d27]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:10:10Z" finished-at="2017-02-24T17:10:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="beforeMethod" is-config="true" duration-ms="947" started-at="2017-02-24T17:10:10Z" finished-at="2017-02-24T17:10:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.delAndInsMobileTest(org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="delAndInsMobileTest(org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="delAndInsMobileTest" duration-ms="1122" started-at="2017-02-24T17:10:11Z" data-provider="DelAndInsTag Test Data" finished-at="2017-02-24T17:10:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[By.id: delTag]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[delTag]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[line-through]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delAndInsMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:10:12Z" finished-at="2017-02-24T17:10:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="beforeMethod" is-config="true" duration-ms="811" started-at="2017-02-24T17:10:12Z" finished-at="2017-02-24T17:10:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.delAndInsMobileTest(org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="delAndInsMobileTest(org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="delAndInsMobileTest" duration-ms="1112" started-at="2017-02-24T17:10:12Z" data-provider="DelAndInsTag Test Data" finished-at="2017-02-24T17:10:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[By.id: insTag]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[insTag]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[underline]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delAndInsMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="beforeMethod" is-config="true" duration-ms="948" started-at="2017-02-24T17:10:14Z" finished-at="2017-02-24T17:10:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.delAndInsMobileTest(org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:10:14Z" finished-at="2017-02-24T17:10:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="delAndInsMobileTest(org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="delAndInsMobileTest" duration-ms="1773" started-at="2017-02-24T17:10:15Z" data-provider="DelAndInsTag Test Data" finished-at="2017-02-24T17:10:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[By.id: insTag]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[insTagPseudo]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[underline]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[before]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delAndInsMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:10:16Z" finished-at="2017-02-24T17:10:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="beforeMethod" is-config="true" duration-ms="1029" started-at="2017-02-24T17:10:16Z" finished-at="2017-02-24T17:10:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.delAndInsMobileTest(org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="delAndInsMobileTest(org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="delAndInsMobileTest" duration-ms="1760" started-at="2017-02-24T17:10:17Z" data-provider="DelAndInsTag Test Data" finished-at="2017-02-24T17:10:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[By.id: insTag]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[insTagPseudo]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[underline]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[after]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delAndInsMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:10:19Z" finished-at="2017-02-24T17:10:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="beforeMethod" is-config="true" duration-ms="926" started-at="2017-02-24T17:10:19Z" finished-at="2017-02-24T17:10:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.h1h2h3h4h5MobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="h1h2h3h4h5MobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="h1h2h3h4h5MobileTest" duration-ms="6666" started-at="2017-02-24T17:10:20Z" data-provider="h1h2h3h4h5 Test Data" finished-at="2017-02-24T17:10:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[h1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: h1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@12359a82]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@68df9280]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@479460a6]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@7164ca4c]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[6px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- h1h2h3h4h5MobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:10:27Z" finished-at="2017-02-24T17:10:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="beforeMethod" is-config="true" duration-ms="887" started-at="2017-02-24T17:10:27Z" finished-at="2017-02-24T17:10:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.h1h2h3h4h5MobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="h1h2h3h4h5MobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="h1h2h3h4h5MobileTest" duration-ms="6832" started-at="2017-02-24T17:10:28Z" data-provider="h1h2h3h4h5 Test Data" finished-at="2017-02-24T17:10:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[h2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: h2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@4f3bbf68]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@5be46f9d]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@3f91b517]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@68702e03]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[6px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- h1h2h3h4h5MobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="beforeMethod" is-config="true" duration-ms="887" started-at="2017-02-24T17:10:34Z" finished-at="2017-02-24T17:10:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.h1h2h3h4h5MobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:10:34Z" finished-at="2017-02-24T17:10:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="h1h2h3h4h5MobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="h1h2h3h4h5MobileTest" duration-ms="6681" started-at="2017-02-24T17:10:35Z" data-provider="h1h2h3h4h5 Test Data" finished-at="2017-02-24T17:10:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[h3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: h3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@7a220c9a]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@2421cc4]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@30c93896]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@59a008ba]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[6px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[6px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- h1h2h3h4h5MobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:10:42Z" finished-at="2017-02-24T17:10:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="beforeMethod" is-config="true" duration-ms="891" started-at="2017-02-24T17:10:42Z" finished-at="2017-02-24T17:10:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.h1h2h3h4h5MobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="h1h2h3h4h5MobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="h1h2h3h4h5MobileTest" duration-ms="6634" started-at="2017-02-24T17:10:43Z" data-provider="h1h2h3h4h5 Test Data" finished-at="2017-02-24T17:10:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[h4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: h4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@338c99c8]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@21ba0741]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@58ce9668]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@172b013]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[6px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[6px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- h1h2h3h4h5MobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="beforeMethod" is-config="true" duration-ms="1009" started-at="2017-02-24T17:10:49Z" finished-at="2017-02-24T17:10:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.h1h2h3h4h5MobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:10:49Z" finished-at="2017-02-24T17:10:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="h1h2h3h4h5MobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="h1h2h3h4h5MobileTest" duration-ms="6745" started-at="2017-02-24T17:10:50Z" data-provider="h1h2h3h4h5 Test Data" finished-at="2017-02-24T17:10:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[h5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: h5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@56673b2c]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@2796aeae]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@b4711e2]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@1fa1cab1]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[6px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[6px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- h1h2h3h4h5MobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:10:57Z" finished-at="2017-02-24T17:10:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="beforeMethod" is-config="true" duration-ms="864" started-at="2017-02-24T17:10:57Z" finished-at="2017-02-24T17:10:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.headerMobileTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="headerMobileTest()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="headerMobileTest" duration-ms="1159" started-at="2017-02-24T17:10:58Z" finished-at="2017-02-24T17:10:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- headerMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:10:59Z" finished-at="2017-02-24T17:10:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="beforeMethod" is-config="true" duration-ms="911" started-at="2017-02-24T17:10:59Z" finished-at="2017-02-24T17:11:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.headingOrderedListMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="headingOrderedListMobileTest(java.lang.String, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="headingOrderedListMobileTest" duration-ms="2218" started-at="2017-02-24T17:11:00Z" data-provider="list following Heading Test Data" finished-at="2017-02-24T17:11:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[heading-ordered-list]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: heading-ordered-list]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[decimal]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- headingOrderedListMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:02Z" finished-at="2017-02-24T17:11:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="beforeMethod" is-config="true" duration-ms="841" started-at="2017-02-24T17:11:02Z" finished-at="2017-02-24T17:11:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.headingOrderedListMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="headingOrderedListMobileTest(java.lang.String, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="headingOrderedListMobileTest" duration-ms="2206" started-at="2017-02-24T17:11:03Z" data-provider="list following Heading Test Data" finished-at="2017-02-24T17:11:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[heading-unordered-list]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: heading-unordered-list]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[disc]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- headingOrderedListMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:11:05Z" finished-at="2017-02-24T17:11:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="beforeMethod" is-config="true" duration-ms="918" started-at="2017-02-24T17:11:05Z" finished-at="2017-02-24T17:11:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.labelMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="labelMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="labelMobileTest" duration-ms="4399" started-at="2017-02-24T17:11:06Z" data-provider="label Test Data" finished-at="2017-02-24T17:11:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[label]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: label]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@146dfe6]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@4716be8b]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@1fc32e4f]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@2f67b837]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- labelMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:11Z" finished-at="2017-02-24T17:11:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="beforeMethod" is-config="true" duration-ms="860" started-at="2017-02-24T17:11:11Z" finished-at="2017-02-24T17:11:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.labelMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="labelMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="labelMobileTest" duration-ms="5669" started-at="2017-02-24T17:11:12Z" data-provider="label Test Data" finished-at="2017-02-24T17:11:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[label-secondary]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: label-secondary]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@1869fbd2]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@6af9fcb2]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@6cce16f4]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@7efaad5a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- labelMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:11:17Z" finished-at="2017-02-24T17:11:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="beforeMethod" is-config="true" duration-ms="936" started-at="2017-02-24T17:11:17Z" finished-at="2017-02-24T17:11:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.labelMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="labelMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="labelMobileTest" duration-ms="4450" started-at="2017-02-24T17:11:18Z" data-provider="label Test Data" finished-at="2017-02-24T17:11:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[label-bold]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: label-bold]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@291a7e3c]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@ca30bc1]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@1046d517]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@3b7d3a38]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- labelMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:11:23Z" finished-at="2017-02-24T17:11:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="beforeMethod" is-config="true" duration-ms="944" started-at="2017-02-24T17:11:23Z" finished-at="2017-02-24T17:11:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.labelMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="labelMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="labelMobileTest" duration-ms="4449" started-at="2017-02-24T17:11:24Z" data-provider="label Test Data" finished-at="2017-02-24T17:11:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[label-small]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: label-small]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@416c58f5]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@5505ae1a]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@73cd37c0]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@21337f7b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- labelMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:28Z" finished-at="2017-02-24T17:11:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="beforeMethod" is-config="true" duration-ms="859" started-at="2017-02-24T17:11:28Z" finished-at="2017-02-24T17:11:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.labelMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="labelMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="labelMobileTest" duration-ms="4506" started-at="2017-02-24T17:11:29Z" data-provider="label Test Data" finished-at="2017-02-24T17:11:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[label-small-secondary]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: label-small-secondary]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@2bb3058]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@7a362b6b]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@60df60da]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@5a2d131d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- labelMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:33Z" finished-at="2017-02-24T17:11:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="beforeMethod" is-config="true" duration-ms="948" started-at="2017-02-24T17:11:33Z" finished-at="2017-02-24T17:11:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.labelMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="labelMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="labelMobileTest" duration-ms="4516" started-at="2017-02-24T17:11:34Z" data-provider="label Test Data" finished-at="2017-02-24T17:11:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[label-large]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: label-large]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@14fc1f0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@4ae9cfc1]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@512baff6]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@632ceb35]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- labelMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="beforeMethod" is-config="true" duration-ms="930" started-at="2017-02-24T17:11:39Z" finished-at="2017-02-24T17:11:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.labelMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:39Z" finished-at="2017-02-24T17:11:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="labelMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="labelMobileTest" duration-ms="4474" started-at="2017-02-24T17:11:40Z" data-provider="label Test Data" finished-at="2017-02-24T17:11:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[label-large-secondary]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: label-large-secondary]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@1c93f6e1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@1800a575]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@1458ed9c]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@10a9d961]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- labelMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="beforeMethod" is-config="true" duration-ms="850" started-at="2017-02-24T17:11:44Z" finished-at="2017-02-24T17:11:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.labelMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:44Z" finished-at="2017-02-24T17:11:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="labelMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="labelMobileTest" duration-ms="4512" started-at="2017-02-24T17:11:45Z" data-provider="label Test Data" finished-at="2017-02-24T17:11:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[label-inverse]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: label-inverse]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@130e116b]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@e383572]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@5ddf0d24]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@363a52f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- labelMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:50Z" finished-at="2017-02-24T17:11:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="beforeMethod" is-config="true" duration-ms="871" started-at="2017-02-24T17:11:50Z" finished-at="2017-02-24T17:11:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.labelMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="labelMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="labelMobileTest" duration-ms="4477" started-at="2017-02-24T17:11:51Z" data-provider="label Test Data" finished-at="2017-02-24T17:11:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[label-inverse-secondary]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: label-inverse-secondary]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@60856961]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@2fd953a6]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@a4add54]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@141e5bef]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- labelMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:55Z" finished-at="2017-02-24T17:11:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="beforeMethod" is-config="true" duration-ms="824" started-at="2017-02-24T17:11:55Z" finished-at="2017-02-24T17:11:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.leadMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="leadMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="leadMobileTest" duration-ms="4427" started-at="2017-02-24T17:11:56Z" data-provider="lead Test Data" finished-at="2017-02-24T17:12:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[lead]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: lead]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@5d066c7d]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@1e461e41]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@5ba88be8]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@56928307]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- leadMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:12:00Z" finished-at="2017-02-24T17:12:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="beforeMethod" is-config="true" duration-ms="867" started-at="2017-02-24T17:12:00Z" finished-at="2017-02-24T17:12:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.linkStateMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="linkStateMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, java.lang.String)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="linkStateMobileTest" duration-ms="2233" started-at="2017-02-24T17:12:01Z" data-provider="link state Test Data" finished-at="2017-02-24T17:12:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[normal]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: link]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@6581dc0a]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[underline]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkStateMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:03Z" finished-at="2017-02-24T17:12:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="beforeMethod" is-config="true" duration-ms="854" started-at="2017-02-24T17:12:03Z" finished-at="2017-02-24T17:12:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.linkStateMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="linkStateMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, java.lang.String)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="linkStateMobileTest" duration-ms="2922" started-at="2017-02-24T17:12:04Z" data-provider="link state Test Data" finished-at="2017-02-24T17:12:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[focus]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: link]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@39de3d36]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[none]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkStateMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:12:07Z" finished-at="2017-02-24T17:12:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="beforeMethod" is-config="true" duration-ms="906" started-at="2017-02-24T17:12:07Z" finished-at="2017-02-24T17:12:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.linkStateMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="linkStateMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, java.lang.String)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="linkStateMobileTest" duration-ms="0" started-at="2017-02-24T17:12:08Z" data-provider="link state Test Data" finished-at="2017-02-24T17:12:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[hover]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: link]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@55dfebeb]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[none]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[hover operation not permitted]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: hover operation not permitted
	at elementsTests.TypographyTest.linkStateMobileTest(TypographyTest.java:593)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkStateMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:08Z" finished-at="2017-02-24T17:12:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="beforeMethod" is-config="true" duration-ms="857" started-at="2017-02-24T17:12:08Z" finished-at="2017-02-24T17:12:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.listMobileTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="listMobileTest()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="listMobileTest" duration-ms="5585" started-at="2017-02-24T17:12:09Z" finished-at="2017-02-24T17:12:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:14Z" finished-at="2017-02-24T17:12:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="beforeMethod" is-config="true" duration-ms="869" started-at="2017-02-24T17:12:14Z" finished-at="2017-02-24T17:12:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.markMobileTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="markMobileTest()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="markMobileTest" duration-ms="2245" started-at="2017-02-24T17:12:15Z" finished-at="2017-02-24T17:12:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- markMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:18Z" finished-at="2017-02-24T17:12:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="beforeMethod" is-config="true" duration-ms="946" started-at="2017-02-24T17:12:18Z" finished-at="2017-02-24T17:12:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.orderedListMobileTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="orderedListMobileTest()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="orderedListMobileTest" duration-ms="1113" started-at="2017-02-24T17:12:19Z" finished-at="2017-02-24T17:12:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderedListMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:20Z" finished-at="2017-02-24T17:12:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="beforeMethod" is-config="true" duration-ms="884" started-at="2017-02-24T17:12:20Z" finished-at="2017-02-24T17:12:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.pageTitleMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="pageTitleMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="pageTitleMobileTest" duration-ms="4525" started-at="2017-02-24T17:12:21Z" data-provider="page Title Test Data" finished-at="2017-02-24T17:12:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[page-title]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: page-title]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@602e0143]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@2c07545f]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@e57b96d]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@32c726ee]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pageTitleMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:12:25Z" finished-at="2017-02-24T17:12:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="beforeMethod" is-config="true" duration-ms="856" started-at="2017-02-24T17:12:25Z" finished-at="2017-02-24T17:12:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.pageTitleMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="pageTitleMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="pageTitleMobileTest" duration-ms="4672" started-at="2017-02-24T17:12:26Z" data-provider="page Title Test Data" finished-at="2017-02-24T17:12:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[page-title-secondary]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: page-title-secondary]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@22f31dec]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@34c01041]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@76f4b65]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@c94fd30]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pageTitleMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:12:31Z" finished-at="2017-02-24T17:12:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="beforeMethod" is-config="true" duration-ms="1407" started-at="2017-02-24T17:12:31Z" finished-at="2017-02-24T17:12:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.pageTitleMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="pageTitleMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="pageTitleMobileTest" duration-ms="4403" started-at="2017-02-24T17:12:32Z" data-provider="page Title Test Data" finished-at="2017-02-24T17:12:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[page-title-small]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: page-title--small]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@36328d33]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@2c4d1ac]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@7f0d96f2]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@545b995e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pageTitleMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="beforeMethod" is-config="true" duration-ms="937" started-at="2017-02-24T17:12:36Z" finished-at="2017-02-24T17:12:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.pageTitleMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:36Z" finished-at="2017-02-24T17:12:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="pageTitleMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="pageTitleMobileTest" duration-ms="4399" started-at="2017-02-24T17:12:37Z" data-provider="page Title Test Data" finished-at="2017-02-24T17:12:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[page-title-small-secondary]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: page-title-small-secondary]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@76a2ddf3]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@524f3b3a]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@41e68d87]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@49ff7d8c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pageTitleMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:42Z" finished-at="2017-02-24T17:12:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="beforeMethod" is-config="true" duration-ms="2694" started-at="2017-02-24T17:12:42Z" finished-at="2017-02-24T17:12:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.paraMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="paraMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="paraMobileTest" duration-ms="5522" started-at="2017-02-24T17:12:44Z" data-provider="para Test Data" finished-at="2017-02-24T17:12:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[para]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: para]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@29526c05]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@2ef14fe]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@77102b91]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[[Ljava.lang.String;@45312be2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- paraMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:12:50Z" finished-at="2017-02-24T17:12:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="beforeMethod" is-config="true" duration-ms="835" started-at="2017-02-24T17:12:50Z" finished-at="2017-02-24T17:12:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.paraMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="paraMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="paraMobileTest" duration-ms="5725" started-at="2017-02-24T17:12:51Z" data-provider="para Test Data" finished-at="2017-02-24T17:12:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[para-last]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: para-last]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@7fb95505]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@58be6e8]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@7331196b]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[[Ljava.lang.String;@3f9342d4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- paraMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:12:57Z" finished-at="2017-02-24T17:12:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="beforeMethod" is-config="true" duration-ms="936" started-at="2017-02-24T17:12:57Z" finished-at="2017-02-24T17:12:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.sectionTitleMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="sectionTitleMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="sectionTitleMobileTest" duration-ms="4424" started-at="2017-02-24T17:12:57Z" data-provider="section Title Test Data" finished-at="2017-02-24T17:13:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[section-title]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: section-title]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@554e218]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@1608bcbd]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@5bf8fa12]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@29ca3d04]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sectionTitleMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="beforeMethod" is-config="true" duration-ms="930" started-at="2017-02-24T17:13:02Z" finished-at="2017-02-24T17:13:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.sectionTitleMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:02Z" finished-at="2017-02-24T17:13:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="sectionTitleMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="sectionTitleMobileTest" duration-ms="4460" started-at="2017-02-24T17:13:03Z" data-provider="section Title Test Data" finished-at="2017-02-24T17:13:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[section-title-bold]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: section-title-bold]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@b2c5e07]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@5812f68b]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@4426bff1]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@3c7c886c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sectionTitleMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:07Z" finished-at="2017-02-24T17:13:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="beforeMethod" is-config="true" duration-ms="1206" started-at="2017-02-24T17:13:07Z" finished-at="2017-02-24T17:13:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.sectionTitleMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="sectionTitleMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="sectionTitleMobileTest" duration-ms="4448" started-at="2017-02-24T17:13:08Z" data-provider="section Title Test Data" finished-at="2017-02-24T17:13:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[section-title-secondary]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: section-title-secondary]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@55493582]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@1a20270e]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@6b88ca8c]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@336f1079]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sectionTitleMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:13Z" finished-at="2017-02-24T17:13:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="beforeMethod" is-config="true" duration-ms="890" started-at="2017-02-24T17:13:13Z" finished-at="2017-02-24T17:13:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.sectionTitleMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="sectionTitleMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="sectionTitleMobileTest" duration-ms="4531" started-at="2017-02-24T17:13:14Z" data-provider="section Title Test Data" finished-at="2017-02-24T17:13:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[section-title-small]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: section-title-small]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@2f16c6b3]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@34158c08]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@19e4fcac]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@52c3cb31]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sectionTitleMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:18Z" finished-at="2017-02-24T17:13:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="beforeMethod" is-config="true" duration-ms="905" started-at="2017-02-24T17:13:18Z" finished-at="2017-02-24T17:13:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.sectionTitleMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="sectionTitleMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="sectionTitleMobileTest" duration-ms="4476" started-at="2017-02-24T17:13:19Z" data-provider="section Title Test Data" finished-at="2017-02-24T17:13:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[section-title-small-bold]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: section-title-small-bold]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@4b79ac84]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@53941c2f]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@6dab9b6d]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@21fd5faa]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sectionTitleMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="beforeMethod" is-config="true" duration-ms="853" started-at="2017-02-24T17:13:24Z" finished-at="2017-02-24T17:13:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.sectionTitleMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:24Z" finished-at="2017-02-24T17:13:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="sectionTitleMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="sectionTitleMobileTest" duration-ms="4418" started-at="2017-02-24T17:13:25Z" data-provider="section Title Test Data" finished-at="2017-02-24T17:13:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[section-title-small-secondary]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: section-title-small-secondary]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@2766ca9d]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@5460cf3a]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@65a15628]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@2e6a5539]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sectionTitleMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:13:29Z" finished-at="2017-02-24T17:13:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="beforeMethod" is-config="true" duration-ms="884" started-at="2017-02-24T17:13:29Z" finished-at="2017-02-24T17:13:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.sectionTitleMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="sectionTitleMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="sectionTitleMobileTest" duration-ms="4424" started-at="2017-02-24T17:13:30Z" data-provider="section Title Test Data" finished-at="2017-02-24T17:13:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[section-title-large]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: section-title-large]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@3fc9504b]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@6d025197]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@27d4a09]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@7e4204e2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sectionTitleMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:34Z" finished-at="2017-02-24T17:13:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="beforeMethod" is-config="true" duration-ms="891" started-at="2017-02-24T17:13:34Z" finished-at="2017-02-24T17:13:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.sectionTitleMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="sectionTitleMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="sectionTitleMobileTest" duration-ms="4432" started-at="2017-02-24T17:13:35Z" data-provider="section Title Test Data" finished-at="2017-02-24T17:13:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[section-title-large-bold]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: section-title-large-bold]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@b7c4869]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@740d2e78]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@1c481ff2]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@72437d8d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sectionTitleMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="beforeMethod" is-config="true" duration-ms="860" started-at="2017-02-24T17:13:40Z" finished-at="2017-02-24T17:13:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.sectionTitleMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:40Z" finished-at="2017-02-24T17:13:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="sectionTitleMobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="sectionTitleMobileTest" duration-ms="4511" started-at="2017-02-24T17:13:40Z" data-provider="section Title Test Data" finished-at="2017-02-24T17:13:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[section-title-large-secondary]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: section-title-large-secondary]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@1b955cac]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@676cf48]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@5a1de7fb]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@335b5620]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sectionTitleMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="beforeMethod" is-config="true" duration-ms="872" started-at="2017-02-24T17:13:45Z" finished-at="2017-02-24T17:13:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.strongMobileTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:45Z" finished-at="2017-02-24T17:13:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="strongMobileTest()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="strongMobileTest" duration-ms="1106" started-at="2017-02-24T17:13:46Z" finished-at="2017-02-24T17:13:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- strongMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:47Z" finished-at="2017-02-24T17:13:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="beforeMethod" is-config="true" duration-ms="907" started-at="2017-02-24T17:13:47Z" finished-at="2017-02-24T17:13:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.subtitleWithh1h2h3h4h5MobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="subtitleWithh1h2h3h4h5MobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="subtitleWithh1h2h3h4h5MobileTest" duration-ms="6641" started-at="2017-02-24T17:13:48Z" data-provider="subtitle Test Data" finished-at="2017-02-24T17:13:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[subtitle-1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: subtitle-1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@6a55299e]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@2f1de2d6]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@4eb386df]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@79517588]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[34px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[6px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subtitleWithh1h2h3h4h5MobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="beforeMethod" is-config="true" duration-ms="925" started-at="2017-02-24T17:13:55Z" finished-at="2017-02-24T17:13:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.subtitleWithh1h2h3h4h5MobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:55Z" finished-at="2017-02-24T17:13:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="subtitleWithh1h2h3h4h5MobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="subtitleWithh1h2h3h4h5MobileTest" duration-ms="6680" started-at="2017-02-24T17:13:55Z" data-provider="subtitle Test Data" finished-at="2017-02-24T17:14:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[subtitle-2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: subtitle-2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@3a0baae5]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@7ac0e420]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@289710d9]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@5a18cd76]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[6px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subtitleWithh1h2h3h4h5MobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:14:02Z" finished-at="2017-02-24T17:14:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="beforeMethod" is-config="true" duration-ms="862" started-at="2017-02-24T17:14:02Z" finished-at="2017-02-24T17:14:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.subtitleWithh1h2h3h4h5MobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="subtitleWithh1h2h3h4h5MobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="subtitleWithh1h2h3h4h5MobileTest" duration-ms="8573" started-at="2017-02-24T17:14:03Z" data-provider="subtitle Test Data" finished-at="2017-02-24T17:14:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[subtitle-3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: subtitle-3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@3da30852]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@403f0a22]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@503ecb24]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@4c51cf28]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[6px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subtitleWithh1h2h3h4h5MobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:14:12Z" finished-at="2017-02-24T17:14:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="beforeMethod" is-config="true" duration-ms="950" started-at="2017-02-24T17:14:12Z" finished-at="2017-02-24T17:14:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.subtitleWithh1h2h3h4h5MobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="subtitleWithh1h2h3h4h5MobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="subtitleWithh1h2h3h4h5MobileTest" duration-ms="6686" started-at="2017-02-24T17:14:13Z" data-provider="subtitle Test Data" finished-at="2017-02-24T17:14:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[subtitle-4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: subtitle-4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@6995bf68]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@5143c662]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@77825085]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@3568f9d2]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[6px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subtitleWithh1h2h3h4h5MobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:14:19Z" finished-at="2017-02-24T17:14:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="beforeMethod" is-config="true" duration-ms="942" started-at="2017-02-24T17:14:19Z" finished-at="2017-02-24T17:14:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.subtitleWithh1h2h3h4h5MobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="subtitleWithh1h2h3h4h5MobileTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="subtitleWithh1h2h3h4h5MobileTest" duration-ms="6628" started-at="2017-02-24T17:14:20Z" data-provider="subtitle Test Data" finished-at="2017-02-24T17:14:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[subtitle-5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: subtitle-5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@71c27ee8]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@3e7dd664]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@5b1ebf56]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@294a6b8e]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[6px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subtitleWithh1h2h3h4h5MobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:14:27Z" finished-at="2017-02-24T17:14:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="beforeMethod" is-config="true" duration-ms="892" started-at="2017-02-24T17:14:27Z" finished-at="2017-02-24T17:14:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.superAndSubScriptTagMobileTest(org.openqa.selenium.By,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="superAndSubScriptTagMobileTest(org.openqa.selenium.By, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="superAndSubScriptTagMobileTest" duration-ms="4425" started-at="2017-02-24T17:14:28Z" data-provider="SuperAndSubScript Test Data" finished-at="2017-02-24T17:14:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[By.id: superscript]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[superscript]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@4b1d6571]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@1b835480]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[relative]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[baseline]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- superAndSubScriptTagMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:14:32Z" finished-at="2017-02-24T17:14:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="beforeMethod" is-config="true" duration-ms="857" started-at="2017-02-24T17:14:32Z" finished-at="2017-02-24T17:14:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.superAndSubScriptTagMobileTest(org.openqa.selenium.By,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="superAndSubScriptTagMobileTest(org.openqa.selenium.By, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="superAndSubScriptTagMobileTest" duration-ms="4493" started-at="2017-02-24T17:14:33Z" data-provider="SuperAndSubScript Test Data" finished-at="2017-02-24T17:14:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[By.id: subscript]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[subscript]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@3549bca9]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@4f25b795]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[relative]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[baseline]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- superAndSubScriptTagMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:14:37Z" finished-at="2017-02-24T17:14:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="beforeMethod" is-config="true" duration-ms="861" started-at="2017-02-24T17:14:37Z" finished-at="2017-02-24T17:14:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.unorderedListMobileTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="unorderedListMobileTest()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="unorderedListMobileTest" duration-ms="1159" started-at="2017-02-24T17:14:38Z" finished-at="2017-02-24T17:14:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unorderedListMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:14:39Z" finished-at="2017-02-24T17:14:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="beforeMethod" is-config="true" duration-ms="855" started-at="2017-02-24T17:14:39Z" finished-at="2017-02-24T17:14:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.unstyledListMobileTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="unstyledListMobileTest()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="unstyledListMobileTest" duration-ms="2232" started-at="2017-02-24T17:14:40Z" finished-at="2017-02-24T17:14:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unstyledListMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:14:43Z" finished-at="2017-02-24T17:14:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="tearDown(java.lang.String)[pri:0, instance:elementsTests.TypographyTest@436e852b]" name="tearDown" is-config="true" duration-ms="714" started-at="2017-02-24T17:14:43Z" finished-at="2017-02-24T17:14:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- elementsTests.TypographyTest -->
      <class name="origamiV2Tests.AvatarDisplayTest">
        <test-method status="PASS" signature="setUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="setUp" is-config="true" duration-ms="56001" started-at="2017-02-24T17:19:19Z" finished-at="2017-02-24T17:20:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sauce]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[off]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OS X 10.11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[54.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[iOS]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[iPhone 6 Plus]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[9.3]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[safari]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[1.5.3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="avatarDisplayTestBeforeClass(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="avatarDisplayTestBeforeClass" is-config="true" duration-ms="0" started-at="2017-02-24T17:20:15Z" finished-at="2017-02-24T17:20:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sauce]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avatarDisplayTestBeforeClass -->
        <test-method status="PASS" signature="avatarALTTextConfigMobileTest(java.lang.String, [Ljava.lang.String;, java.lang.String)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="avatarALTTextConfigMobileTest" duration-ms="4680" started-at="2017-02-24T17:20:15Z" data-provider="avatarALTText config Test Data" finished-at="2017-02-24T17:20:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[validAvatarALTText]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@1fb19a0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Valid Avatar Image ALT Text]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avatarALTTextConfigMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:20:15Z" finished-at="2017-02-24T17:20:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AvatarDisplayTest.avatarALTTextConfigMobileTest(java.lang.String,java.lang.String[],java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="avatarALTTextConfigMobileTest(java.lang.String, [Ljava.lang.String;, java.lang.String)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="avatarALTTextConfigMobileTest" duration-ms="3953" started-at="2017-02-24T17:20:20Z" data-provider="avatarALTText config Test Data" finished-at="2017-02-24T17:20:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[emptyAvatarALTText]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@6ee4d9ab]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Empty Avatar Image ALT Text]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avatarALTTextConfigMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:20:20Z" finished-at="2017-02-24T17:20:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:20:20Z" finished-at="2017-02-24T17:20:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AvatarDisplayTest.avatarALTTextConfigMobileTest(java.lang.String,java.lang.String[],java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="avatarALTTextConfigMobileTest(java.lang.String, [Ljava.lang.String;, java.lang.String)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="avatarALTTextConfigMobileTest" duration-ms="4007" started-at="2017-02-24T17:20:24Z" data-provider="avatarALTText config Test Data" finished-at="2017-02-24T17:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[noConfigAvatarALTText]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@5a5338df]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Use Avatar Image]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avatarALTTextConfigMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:20:24Z" finished-at="2017-02-24T17:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:20:24Z" finished-at="2017-02-24T17:20:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AvatarDisplayTest.avatarALTTextConfigMobileTest(java.lang.String,java.lang.String[],java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:20:28Z" finished-at="2017-02-24T17:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="avatarShapeMobileTest(java.lang.String)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="avatarShapeMobileTest" duration-ms="4076" started-at="2017-02-24T17:20:28Z" data-provider="Avatar Shape Test Data" finished-at="2017-02-24T17:20:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[small]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avatarShapeMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:20:28Z" finished-at="2017-02-24T17:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AvatarDisplayTest.avatarShapeMobileTest(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:20:32Z" finished-at="2017-02-24T17:20:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:20:32Z" finished-at="2017-02-24T17:20:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AvatarDisplayTest.avatarShapeMobileTest(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="avatarShapeMobileTest(java.lang.String)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="avatarShapeMobileTest" duration-ms="8504" started-at="2017-02-24T17:20:32Z" data-provider="Avatar Shape Test Data" finished-at="2017-02-24T17:20:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[large]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avatarShapeMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:20:40Z" finished-at="2017-02-24T17:20:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AvatarDisplayTest.avatarShapeMobileTest(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:20:40Z" finished-at="2017-02-24T17:20:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="avatarShapeMobileTest(java.lang.String)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="avatarShapeMobileTest" duration-ms="4006" started-at="2017-02-24T17:20:40Z" data-provider="Avatar Shape Test Data" finished-at="2017-02-24T17:20:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[default]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avatarShapeMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:20:44Z" finished-at="2017-02-24T17:20:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:20:44Z" finished-at="2017-02-24T17:20:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AvatarDisplayTest.avatarSizeConfigMobileTest(java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="avatarSizeConfigMobileTest(java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="avatarSizeConfigMobileTest" duration-ms="5199" started-at="2017-02-24T17:20:44Z" data-provider="avatarSize config Test Data" finished-at="2017-02-24T17:20:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[noConfigAvatarSize]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@418c5a9c]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@18e36d14]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@5082d622]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avatarSizeConfigMobileTest -->
        <test-method status="PASS" signature="avatarSizeConfigMobileTest(java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="avatarSizeConfigMobileTest" duration-ms="5095" started-at="2017-02-24T17:20:50Z" data-provider="avatarSize config Test Data" finished-at="2017-02-24T17:20:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[configAvatarSizeSmall]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@13d4992d]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@302f7971]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@332729ad]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avatarSizeConfigMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:20:50Z" finished-at="2017-02-24T17:20:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:20:50Z" finished-at="2017-02-24T17:20:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AvatarDisplayTest.avatarSizeConfigMobileTest(java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:20:55Z" finished-at="2017-02-24T17:20:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AvatarDisplayTest.avatarSizeConfigMobileTest(java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:20:55Z" finished-at="2017-02-24T17:20:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="avatarSizeConfigMobileTest(java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="avatarSizeConfigMobileTest" duration-ms="5162" started-at="2017-02-24T17:20:55Z" data-provider="avatarSize config Test Data" finished-at="2017-02-24T17:21:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[configAvatarSizeLarge]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@75d2da2d]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@4278284b]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@9573584]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avatarSizeConfigMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:21:00Z" finished-at="2017-02-24T17:21:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AvatarDisplayTest.avatarSizeConfigMobileTest(java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:21:00Z" finished-at="2017-02-24T17:21:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="avatarSizeConfigMobileTest(java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="avatarSizeConfigMobileTest" duration-ms="5074" started-at="2017-02-24T17:21:00Z" data-provider="avatarSize config Test Data" finished-at="2017-02-24T17:21:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[configAvatarSizeRandom]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@3370f42]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@6057aebb]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@63eef88a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avatarSizeConfigMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:21:05Z" finished-at="2017-02-24T17:21:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="avatarSizeMobileTest(java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="avatarSizeMobileTest" duration-ms="14017" started-at="2017-02-24T17:21:05Z" data-provider="Avatar Size Test Data" finished-at="2017-02-24T17:21:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[small]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@53251a66]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@6853425f]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@352c1b98]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@21129f1f]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[[Ljava.lang.String;@5a9f4771]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[[Ljava.lang.String;@282cb7c7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avatarSizeMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:21:05Z" finished-at="2017-02-24T17:21:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AvatarDisplayTest.avatarSizeMobileTest(java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:21:19Z" finished-at="2017-02-24T17:21:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="avatarSizeMobileTest(java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="avatarSizeMobileTest" duration-ms="15823" started-at="2017-02-24T17:21:19Z" data-provider="Avatar Size Test Data" finished-at="2017-02-24T17:21:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[large]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@7d898981]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@48d61b48]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@68d279ec]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@258d79be]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[[Ljava.lang.String;@14f9390f]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[[Ljava.lang.String;@6c0d7c83]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avatarSizeMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:21:19Z" finished-at="2017-02-24T17:21:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AvatarDisplayTest.avatarSizeMobileTest(java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:21:35Z" finished-at="2017-02-24T17:21:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="avatarSizeMobileTest(java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="avatarSizeMobileTest" duration-ms="14001" started-at="2017-02-24T17:21:35Z" data-provider="Avatar Size Test Data" finished-at="2017-02-24T17:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[default]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@176b75f7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@5965be2d]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@409c54f]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@3e74829]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[[Ljava.lang.String;@4f6f416f]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[[Ljava.lang.String;@3b8f0a79]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avatarSizeMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:21:35Z" finished-at="2017-02-24T17:21:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AvatarDisplayTest.avatarSizeMobileTest(java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:21:49Z" finished-at="2017-02-24T17:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:21:49Z" finished-at="2017-02-24T17:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AvatarDisplayTest.avatarURLTextConfigMobileTest(java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="avatarURLTextConfigMobileTest(java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="avatarURLTextConfigMobileTest" duration-ms="0" started-at="2017-02-24T17:21:49Z" data-provider="avatarURLText config Test Data" finished-at="2017-02-24T17:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[invalidAvatarURLText]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@93cf163]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@1852a3ff]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@7203c7ff]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[browser console logs apis are still not implemented for this driver']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: browser console logs apis are still not implemented for this driver'
	at origamiV2Tests.AvatarDisplayTest.avatarURLTextConfigMobileTest(AvatarDisplayTest.java:261)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avatarURLTextConfigMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:21:49Z" finished-at="2017-02-24T17:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="avatarURLTextConfigMobileTest(java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="avatarURLTextConfigMobileTest" duration-ms="5052" started-at="2017-02-24T17:21:49Z" data-provider="avatarURLText config Test Data" finished-at="2017-02-24T17:21:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[validAvatarURLText]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@71e693fa]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@48793bef]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@7d286fb6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avatarURLTextConfigMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:21:49Z" finished-at="2017-02-24T17:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AvatarDisplayTest.avatarURLTextConfigMobileTest(java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:21:54Z" finished-at="2017-02-24T17:21:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:21:54Z" finished-at="2017-02-24T17:21:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AvatarDisplayTest.avatarURLTextConfigMobileTest(java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="avatarURLTextConfigMobileTest(java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="avatarURLTextConfigMobileTest" duration-ms="5089" started-at="2017-02-24T17:21:54Z" data-provider="avatarURLText config Test Data" finished-at="2017-02-24T17:21:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[emptyAvatarURLText]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@3eb77ea8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@7b8b43c7]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@7aaca91a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avatarURLTextConfigMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:21:59Z" finished-at="2017-02-24T17:21:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AvatarDisplayTest.avatarURLTextConfigMobileTest(java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:21:59Z" finished-at="2017-02-24T17:21:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="avatarURLTextConfigMobileTest(java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="avatarURLTextConfigMobileTest" duration-ms="5259" started-at="2017-02-24T17:21:59Z" data-provider="avatarURLText config Test Data" finished-at="2017-02-24T17:22:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[noConfigAvatarURLTextForSmallSize]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@44c73c26]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@41005828]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@60b4beb4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avatarURLTextConfigMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:22:04Z" finished-at="2017-02-24T17:22:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:22:04Z" finished-at="2017-02-24T17:22:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AvatarDisplayTest.avatarURLTextConfigMobileTest(java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="avatarURLTextConfigMobileTest(java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="avatarURLTextConfigMobileTest" duration-ms="5378" started-at="2017-02-24T17:22:04Z" data-provider="avatarURLText config Test Data" finished-at="2017-02-24T17:22:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[noConfigAvatarURLTextForLargeSize]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@7fcf2fc1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@2141a12]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@4196c360]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avatarURLTextConfigMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:22:09Z" finished-at="2017-02-24T17:22:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="tearDown(java.lang.String)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@38bc8ab5]" name="tearDown" is-config="true" duration-ms="614" started-at="2017-02-24T17:22:09Z" finished-at="2017-02-24T17:22:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- origamiV2Tests.AvatarDisplayTest -->
      <class name="origamiV2Tests.DrawerTest">
        <test-method status="PASS" signature="setUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.DrawerTest@6b9651f3]" name="setUp" is-config="true" duration-ms="59091" started-at="2017-02-24T17:18:03Z" finished-at="2017-02-24T17:19:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sauce]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[off]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OS X 10.11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[54.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[iOS]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[iPhone 6 Plus]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[9.3]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[safari]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[1.5.3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="beforeClass(java.lang.String)[pri:0, instance:origamiV2Tests.DrawerTest@6b9651f3]" name="beforeClass" is-config="true" duration-ms="3552" started-at="2017-02-24T17:19:02Z" finished-at="2017-02-24T17:19:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="closeDrawerMobileTest(java.lang.String, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By)[pri:0, instance:origamiV2Tests.DrawerTest@6b9651f3]" name="closeDrawerMobileTest" duration-ms="6875" started-at="2017-02-24T17:19:06Z" data-provider="Close Drawer Test Data" finished-at="2017-02-24T17:19:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[left drawer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: open-left-drawer]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: close-left-drawer]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.xpath: //div[@class='o-drawer-animated o-drawer o-drawer-left o-drawer-open']]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[By.xpath: //div[@class='o-drawer-animated o-drawer o-drawer-left']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeDrawerMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.DrawerTest@6b9651f3]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:19:06Z" finished-at="2017-02-24T17:19:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.DrawerTest.closeDrawerMobileTest(java.lang.String,org.openqa.selenium.By,org.openqa.selenium.By,org.openqa.selenium.By,org.openqa.selenium.By) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.DrawerTest@6b9651f3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:19:13Z" finished-at="2017-02-24T17:19:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="closeDrawerMobileTest(java.lang.String, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By)[pri:0, instance:origamiV2Tests.DrawerTest@6b9651f3]" name="closeDrawerMobileTest" duration-ms="6823" started-at="2017-02-24T17:19:13Z" data-provider="Close Drawer Test Data" finished-at="2017-02-24T17:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[right drawer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: open-right-drawer]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: close-right-drawer]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.xpath: //div[@class='o-drawer-right o-drawer-animated o-drawer o-drawer-open']]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[By.xpath: //div[@class='o-drawer-right o-drawer-animated o-drawer']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeDrawerMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.DrawerTest@6b9651f3]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:19:13Z" finished-at="2017-02-24T17:19:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.DrawerTest.closeDrawerMobileTest(java.lang.String,org.openqa.selenium.By,org.openqa.selenium.By,org.openqa.selenium.By,org.openqa.selenium.By) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.DrawerTest@6b9651f3]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:19:19Z" finished-at="2017-02-24T17:19:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.DrawerTest@6b9651f3]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:19:19Z" finished-at="2017-02-24T17:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.DrawerTest.openDrawerMobileTest(java.lang.String,org.openqa.selenium.By,org.openqa.selenium.By) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="openDrawerMobileTest(java.lang.String, org.openqa.selenium.By, org.openqa.selenium.By)[pri:0, instance:origamiV2Tests.DrawerTest@6b9651f3]" name="openDrawerMobileTest" duration-ms="3975" started-at="2017-02-24T17:19:19Z" data-provider="Open Drawer Test Data" finished-at="2017-02-24T17:19:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[left drawer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: open-left-drawer]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.xpath: //div[@class='o-drawer-animated o-drawer o-drawer-left o-drawer-open']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openDrawerMobileTest -->
        <test-method status="PASS" signature="openDrawerMobileTest(java.lang.String, org.openqa.selenium.By, org.openqa.selenium.By)[pri:0, instance:origamiV2Tests.DrawerTest@6b9651f3]" name="openDrawerMobileTest" duration-ms="3960" started-at="2017-02-24T17:19:23Z" data-provider="Open Drawer Test Data" finished-at="2017-02-24T17:19:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[right drawer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: open-right-drawer]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.xpath: //div[@class='o-drawer-right o-drawer-animated o-drawer o-drawer-open']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openDrawerMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.DrawerTest@6b9651f3]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:19:23Z" finished-at="2017-02-24T17:19:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.DrawerTest.openDrawerMobileTest(java.lang.String,org.openqa.selenium.By,org.openqa.selenium.By) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.DrawerTest@6b9651f3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:19:23Z" finished-at="2017-02-24T17:19:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.DrawerTest@6b9651f3]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:19:27Z" finished-at="2017-02-24T17:19:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="otherDrawerMobileTest(java.lang.String, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By)[pri:0, instance:origamiV2Tests.DrawerTest@6b9651f3]" name="otherDrawerMobileTest" duration-ms="10611" started-at="2017-02-24T17:19:27Z" data-provider="Other Drawer Test Data" finished-at="2017-02-24T17:19:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[left drawer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: open-left-drawer]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.xpath: //div[@class='o-drawer-animated o-drawer o-drawer-left o-drawer-open']]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.xpath: //div[@class='o-drawer-animated o-drawer o-drawer-left']]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[By.id: other-left-drawer]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[By.xpath: //div[@id='other-left-drawer-demo'][@class='o-drawer-animated o-drawer o-drawer-left o-drawer-open']]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[By.xpath: //div[@id='other-right-drawer-demo'][@class='o-drawer-right o-drawer-animated o-drawer']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- otherDrawerMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.DrawerTest@6b9651f3]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:19:27Z" finished-at="2017-02-24T17:19:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.DrawerTest.otherDrawerMobileTest(java.lang.String,org.openqa.selenium.By,org.openqa.selenium.By,org.openqa.selenium.By,org.openqa.selenium.By,org.openqa.selenium.By,org.openqa.selenium.By) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.DrawerTest@6b9651f3]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:19:38Z" finished-at="2017-02-24T17:19:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.DrawerTest@6b9651f3]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:19:38Z" finished-at="2017-02-24T17:19:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.DrawerTest.otherDrawerMobileTest(java.lang.String,org.openqa.selenium.By,org.openqa.selenium.By,org.openqa.selenium.By,org.openqa.selenium.By,org.openqa.selenium.By,org.openqa.selenium.By) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="otherDrawerMobileTest(java.lang.String, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By)[pri:0, instance:origamiV2Tests.DrawerTest@6b9651f3]" name="otherDrawerMobileTest" duration-ms="10721" started-at="2017-02-24T17:19:38Z" data-provider="Other Drawer Test Data" finished-at="2017-02-24T17:19:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[right drawer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: open-right-drawer]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.xpath: //div[@class='o-drawer-right o-drawer-animated o-drawer o-drawer-open']]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.xpath: //div[@class='o-drawer-right o-drawer-animated o-drawer']]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[By.id: other-right-drawer]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[By.xpath: //div[@id='other-right-drawer-demo'][@class='o-drawer-right o-drawer-animated o-drawer o-drawer-open']]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[By.xpath: //div[@id='other-right-drawer-demo'][@class='o-drawer-right o-drawer-animated o-drawer']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- otherDrawerMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.DrawerTest@6b9651f3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:19:49Z" finished-at="2017-02-24T17:19:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="toggleDrawerMobileTest(java.lang.String, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By)[pri:0, instance:origamiV2Tests.DrawerTest@6b9651f3]" name="toggleDrawerMobileTest" duration-ms="10426" started-at="2017-02-24T17:19:49Z" data-provider="Toggle Drawer Test Data" finished-at="2017-02-24T17:19:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[left drawer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: open-left-drawer]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: toggle-left-drawer]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: close-left-drawer]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[By.xpath: //div[@class='o-drawer-animated o-drawer o-drawer-left o-drawer-open']]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[By.xpath: //div[@class='o-drawer-animated o-drawer o-drawer-left']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toggleDrawerMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.DrawerTest@6b9651f3]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:19:49Z" finished-at="2017-02-24T17:19:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.DrawerTest.toggleDrawerMobileTest(java.lang.String,org.openqa.selenium.By,org.openqa.selenium.By,org.openqa.selenium.By,org.openqa.selenium.By,org.openqa.selenium.By) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.DrawerTest@6b9651f3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:19:59Z" finished-at="2017-02-24T17:19:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.DrawerTest@6b9651f3]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:19:59Z" finished-at="2017-02-24T17:19:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.DrawerTest.toggleDrawerMobileTest(java.lang.String,org.openqa.selenium.By,org.openqa.selenium.By,org.openqa.selenium.By,org.openqa.selenium.By,org.openqa.selenium.By) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="toggleDrawerMobileTest(java.lang.String, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By)[pri:0, instance:origamiV2Tests.DrawerTest@6b9651f3]" name="toggleDrawerMobileTest" duration-ms="10214" started-at="2017-02-24T17:19:59Z" data-provider="Toggle Drawer Test Data" finished-at="2017-02-24T17:20:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[right drawer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: open-right-drawer]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: toggle-right-drawer]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: close-right-drawer]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[By.xpath: //div[@class='o-drawer-right o-drawer-animated o-drawer o-drawer-open']]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[By.xpath: //div[@class='o-drawer-right o-drawer-animated o-drawer']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toggleDrawerMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.DrawerTest@6b9651f3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:20:09Z" finished-at="2017-02-24T17:20:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="useAPIDrawerMobileTest(java.lang.String, org.openqa.selenium.By)[pri:0, instance:origamiV2Tests.DrawerTest@6b9651f3]" name="useAPIDrawerMobileTest" duration-ms="5668" started-at="2017-02-24T17:20:09Z" data-provider="Use API Test Data" finished-at="2017-02-24T17:20:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[left drawer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: toggle-left-drawer]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- useAPIDrawerMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.DrawerTest@6b9651f3]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:20:09Z" finished-at="2017-02-24T17:20:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.DrawerTest.useAPIDrawerMobileTest(java.lang.String,org.openqa.selenium.By) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.DrawerTest@6b9651f3]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:20:15Z" finished-at="2017-02-24T17:20:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.DrawerTest.useAPIDrawerMobileTest(java.lang.String,org.openqa.selenium.By) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.DrawerTest@6b9651f3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:20:15Z" finished-at="2017-02-24T17:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="useAPIDrawerMobileTest(java.lang.String, org.openqa.selenium.By)[pri:0, instance:origamiV2Tests.DrawerTest@6b9651f3]" name="useAPIDrawerMobileTest" duration-ms="5608" started-at="2017-02-24T17:20:15Z" data-provider="Use API Test Data" finished-at="2017-02-24T17:20:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[right drawer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: toggle-right-drawer]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- useAPIDrawerMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.DrawerTest@6b9651f3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:20:21Z" finished-at="2017-02-24T17:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.DrawerTest@6b9651f3]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:20:21Z" finished-at="2017-02-24T17:20:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.DrawerTest.useDataTargetForDrawerMobileTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="useDataTargetForDrawerMobileTest()[pri:0, instance:origamiV2Tests.DrawerTest@6b9651f3]" name="useDataTargetForDrawerMobileTest" duration-ms="4903" started-at="2017-02-24T17:20:21Z" finished-at="2017-02-24T17:20:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- useDataTargetForDrawerMobileTest -->
        <test-method status="PASS" signature="tearDown(java.lang.String)[pri:0, instance:origamiV2Tests.DrawerTest@6b9651f3]" name="tearDown" is-config="true" duration-ms="1245" started-at="2017-02-24T17:20:26Z" finished-at="2017-02-24T17:20:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.DrawerTest@6b9651f3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:20:26Z" finished-at="2017-02-24T17:20:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- origamiV2Tests.DrawerTest -->
      <class name="compoundsTests.IconsTest">
        <test-method status="PASS" signature="setUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:compoundsTests.IconsTest@6b57696f]" name="setUp" is-config="true" duration-ms="66733" started-at="2017-02-24T17:16:41Z" finished-at="2017-02-24T17:17:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sauce]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[off]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OS X 10.11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[54.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[iOS]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[iPhone 6 Plus]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[9.3]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[safari]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[1.5.3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="avatarDisplayTestBeforeClass(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:compoundsTests.IconsTest@6b57696f]" name="avatarDisplayTestBeforeClass" is-config="true" duration-ms="0" started-at="2017-02-24T17:17:48Z" finished-at="2017-02-24T17:17:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sauce]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avatarDisplayTestBeforeClass -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.IconsTest@6b57696f]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:17:48Z" finished-at="2017-02-24T17:17:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.IconsTest.validIconPropTypesMobileTest(java.lang.String,java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="validIconPropTypesMobileTest(java.lang.String, java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.IconsTest@6b57696f]" name="validIconPropTypesMobileTest" duration-ms="4192" started-at="2017-02-24T17:17:48Z" data-provider="Valid Icon Prop Types Test Data" finished-at="2017-02-24T17:17:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[regular-icon-size-18]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[name: 'book-18']]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.xpath: //div[@id='icon-target']/*[local-name() = 'svg']]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@530712d]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@2df6226d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validIconPropTypesMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.IconsTest@6b57696f]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:17:52Z" finished-at="2017-02-24T17:17:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.IconsTest.validIconPropTypesMobileTest(java.lang.String,java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.IconsTest@6b57696f]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:17:52Z" finished-at="2017-02-24T17:17:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="validIconPropTypesMobileTest(java.lang.String, java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.IconsTest@6b57696f]" name="validIconPropTypesMobileTest" duration-ms="3577" started-at="2017-02-24T17:17:52Z" data-provider="Valid Icon Prop Types Test Data" finished-at="2017-02-24T17:17:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[regular-icon-size-24]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[name: 'audio-high-24']]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.xpath: //div[@id='icon-target']/*[local-name() = 'svg']]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@12ed9db6]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@4ff4357f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validIconPropTypesMobileTest -->
        <test-method status="PASS" signature="validIconPropTypesMobileTest(java.lang.String, java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.IconsTest@6b57696f]" name="validIconPropTypesMobileTest" duration-ms="3169" started-at="2017-02-24T17:17:55Z" data-provider="Valid Icon Prop Types Test Data" finished-at="2017-02-24T17:17:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[font-setting-icon-18]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[name: 'font-setting-18']]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.xpath: //div[@id='icon-target']/*[local-name() = 'svg']]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@49cb9cb5]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@55322aab]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validIconPropTypesMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.IconsTest@6b57696f]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:17:55Z" finished-at="2017-02-24T17:17:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.IconsTest@6b57696f]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:17:55Z" finished-at="2017-02-24T17:17:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.IconsTest.validIconPropTypesMobileTest(java.lang.String,java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.IconsTest@6b57696f]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:17:59Z" finished-at="2017-02-24T17:17:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.IconsTest@6b57696f]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:17:59Z" finished-at="2017-02-24T17:17:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.IconsTest.validIconPropTypesMobileTest(java.lang.String,java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="validIconPropTypesMobileTest(java.lang.String, java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.IconsTest@6b57696f]" name="validIconPropTypesMobileTest" duration-ms="3367" started-at="2017-02-24T17:17:59Z" data-provider="Valid Icon Prop Types Test Data" finished-at="2017-02-24T17:18:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[font-setting-icon-24]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[name: 'font-setting-24']]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.xpath: //div[@id='icon-target']/*[local-name() = 'svg']]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@2b4c1d96]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@45fd9a4d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validIconPropTypesMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.IconsTest@6b57696f]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:18:02Z" finished-at="2017-02-24T17:18:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="tearDown(java.lang.String)[pri:0, instance:compoundsTests.IconsTest@6b57696f]" name="tearDown" is-config="true" duration-ms="1172" started-at="2017-02-24T17:18:02Z" finished-at="2017-02-24T17:18:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- compoundsTests.IconsTest -->
      <class name="origamiV2Tests.SliderTest">
        <test-method status="PASS" signature="setUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.SliderTest@23d2a7e8]" name="setUp" is-config="true" duration-ms="75143" started-at="2017-02-24T17:20:35Z" finished-at="2017-02-24T17:21:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sauce]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[off]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OS X 10.11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[54.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[iOS]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[iPhone 6 Plus]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[9.3]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[safari]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[1.5.3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="beforeClass(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.SliderTest@23d2a7e8]" name="beforeClass" is-config="true" duration-ms="1" started-at="2017-02-24T17:21:50Z" finished-at="2017-02-24T17:21:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.SliderTest@23d2a7e8]" name="beforeMethod" is-config="true" duration-ms="2269" started-at="2017-02-24T17:21:50Z" finished-at="2017-02-24T17:21:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.SliderTest.iOSClickKnobMobileTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="iOSClickKnobMobileTest()[pri:0, instance:origamiV2Tests.SliderTest@23d2a7e8]" name="iOSClickKnobMobileTest" duration-ms="2556" started-at="2017-02-24T17:21:52Z" finished-at="2017-02-24T17:21:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- iOSClickKnobMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.SliderTest@23d2a7e8]" name="beforeMethod" is-config="true" duration-ms="1583" started-at="2017-02-24T17:21:55Z" finished-at="2017-02-24T17:21:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.SliderTest.sliderLabelMobileTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.SliderTest@23d2a7e8]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:21:55Z" finished-at="2017-02-24T17:21:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="sliderLabelMobileTest()[pri:0, instance:origamiV2Tests.SliderTest@23d2a7e8]" name="sliderLabelMobileTest" duration-ms="3037" started-at="2017-02-24T17:21:56Z" finished-at="2017-02-24T17:21:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sliderLabelMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.SliderTest@23d2a7e8]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:21:59Z" finished-at="2017-02-24T17:21:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="tearDown(java.lang.String)[pri:0, instance:origamiV2Tests.SliderTest@23d2a7e8]" name="tearDown" is-config="true" duration-ms="737" started-at="2017-02-24T17:21:59Z" finished-at="2017-02-24T17:22:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- origamiV2Tests.SliderTest -->
      <class name="origamiV2Tests.TextModalTest">
        <test-method status="PASS" signature="setUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.TextModalTest@687080dc]" name="setUp" is-config="true" duration-ms="60849" started-at="2017-02-24T17:20:27Z" finished-at="2017-02-24T17:21:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sauce]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[off]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OS X 10.11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[54.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[iOS]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[iPhone 6 Plus]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[9.3]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[safari]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[1.5.3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="textModalTestBeforeClass(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.TextModalTest@687080dc]" name="textModalTestBeforeClass" is-config="true" duration-ms="0" started-at="2017-02-24T17:21:28Z" finished-at="2017-02-24T17:21:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sauce]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[OS X 10.11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textModalTestBeforeClass -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.TextModalTest@687080dc]" name="beforeMethod" is-config="true" duration-ms="1554" started-at="2017-02-24T17:21:28Z" finished-at="2017-02-24T17:21:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.TextModalTest.cancelButtonMobileTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="cancelButtonMobileTest()[pri:0, instance:origamiV2Tests.TextModalTest@687080dc]" name="cancelButtonMobileTest" duration-ms="4808" started-at="2017-02-24T17:21:29Z" finished-at="2017-02-24T17:21:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cancelButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.TextModalTest@687080dc]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:21:34Z" finished-at="2017-02-24T17:21:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.TextModalTest@687080dc]" name="beforeMethod" is-config="true" duration-ms="5370" started-at="2017-02-24T17:21:34Z" finished-at="2017-02-24T17:21:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.TextModalTest.clickButtonMobileTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="clickButtonMobileTest()[pri:0, instance:origamiV2Tests.TextModalTest@687080dc]" name="clickButtonMobileTest" duration-ms="3632" started-at="2017-02-24T17:21:39Z" finished-at="2017-02-24T17:21:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.TextModalTest@687080dc]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:21:43Z" finished-at="2017-02-24T17:21:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.TextModalTest@687080dc]" name="beforeMethod" is-config="true" duration-ms="854" started-at="2017-02-24T17:21:43Z" finished-at="2017-02-24T17:21:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.TextModalTest.modalTitleMobileTest(org.openqa.selenium.ScreenOrientation,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="modalTitleMobileTest(org.openqa.selenium.ScreenOrientation, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.TextModalTest@687080dc]" name="modalTitleMobileTest" duration-ms="9776" started-at="2017-02-24T17:21:44Z" data-provider="Mobile : Template config Test Data" finished-at="2017-02-24T17:21:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@64bce832]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@764faa6]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@4c1f22f3]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[16px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[22px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[rgba(35, 31, 32, 1)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modalTitleMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.TextModalTest@687080dc]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:21:54Z" finished-at="2017-02-24T17:21:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.TextModalTest@687080dc]" name="beforeMethod" is-config="true" duration-ms="842" started-at="2017-02-24T17:21:54Z" finished-at="2017-02-24T17:21:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.TextModalTest.modalTitleMobileTest(org.openqa.selenium.ScreenOrientation,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="modalTitleMobileTest(org.openqa.selenium.ScreenOrientation, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.TextModalTest@687080dc]" name="modalTitleMobileTest" duration-ms="10176" started-at="2017-02-24T17:21:54Z" data-provider="Mobile : Template config Test Data" finished-at="2017-02-24T17:22:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@598bd2ba]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@5a755cc1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@7ae42ce3]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[16px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[22px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[rgba(35, 31, 32, 1)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modalTitleMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.TextModalTest@687080dc]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:22:05Z" finished-at="2017-02-24T17:22:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.TextModalTest@687080dc]" name="beforeMethod" is-config="true" duration-ms="1101" started-at="2017-02-24T17:22:05Z" finished-at="2017-02-24T17:22:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.TextModalTest.successButtonMobileTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="successButtonMobileTest()[pri:0, instance:origamiV2Tests.TextModalTest@687080dc]" name="successButtonMobileTest" duration-ms="6029" started-at="2017-02-24T17:22:06Z" finished-at="2017-02-24T17:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- successButtonMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.TextModalTest@687080dc]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:22:12Z" finished-at="2017-02-24T17:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="xButtonMobileTest(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.TextModalTest@687080dc]" name="xButtonMobileTest" duration-ms="0" started-at="2017-02-24T17:22:12Z" data-provider="&#039;X&#039; Button Test Data" finished-at="2017-02-24T17:22:12Z">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Method private void origamiV2Tests.TextModalTest.xButtonMobileTest(java.lang.String,java.lang.String) throws java.lang.InterruptedException,java.io.UnsupportedEncodingException requires a @DataProvider named : 'X' Button Test Data]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Method private void origamiV2Tests.TextModalTest.xButtonMobileTest(java.lang.String,java.lang.String) throws java.lang.InterruptedException,java.io.UnsupportedEncodingException requires a @DataProvider named : 'X' Button Test Data
	at org.testng.internal.Parameters.findDataProvider(Parameters.java:263)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:419)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1274)
	at org.testng.internal.Invoker.createParameters(Invoker.java:989)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1079)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xButtonMobileTest -->
        <test-method status="PASS" signature="tearDown(java.lang.String)[pri:0, instance:origamiV2Tests.TextModalTest@687080dc]" name="tearDown" is-config="true" duration-ms="1146" started-at="2017-02-24T17:22:12Z" finished-at="2017-02-24T17:22:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- origamiV2Tests.TextModalTest -->
      <class name="elementsTests.FormsTest">
        <test-method status="PASS" signature="setUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.FormsTest@587d1d39]" name="setUp" is-config="true" duration-ms="56380" started-at="2017-02-24T17:15:00Z" finished-at="2017-02-24T17:15:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sauce]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[off]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OS X 10.11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[54.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[iOS]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[iPhone 6 Plus]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[9.3]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[safari]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[1.5.3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="beforeClass(java.lang.String, java.lang.String)[pri:0, instance:elementsTests.FormsTest@587d1d39]" name="beforeClass" is-config="true" duration-ms="1" started-at="2017-02-24T17:15:57Z" finished-at="2017-02-24T17:15:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sauce]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 6 Plus]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.FormsTest@587d1d39]" name="beforeMethod" is-config="true" duration-ms="1092" started-at="2017-02-24T17:15:57Z" finished-at="2017-02-24T17:15:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.FormsTest.inputBoxMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="inputBoxMobileTest(java.lang.String, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String)[pri:0, instance:elementsTests.FormsTest@587d1d39]" name="inputBoxMobileTest" duration-ms="9003" started-at="2017-02-24T17:15:58Z" data-provider="First and Last Name Input Box Data" finished-at="2017-02-24T17:16:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[First Name]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: a]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[solid]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@7c8c9a05]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[8px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[[Ljava.lang.String;@d41f816]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[[Ljava.lang.String;@5c2375a9]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[18px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inputBoxMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.FormsTest@587d1d39]" name="beforeMethod" is-config="true" duration-ms="1438" started-at="2017-02-24T17:16:07Z" finished-at="2017-02-24T17:16:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.FormsTest.inputBoxMobileTest(java.lang.String,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.FormsTest@587d1d39]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:16:07Z" finished-at="2017-02-24T17:16:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="inputBoxMobileTest(java.lang.String, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String)[pri:0, instance:elementsTests.FormsTest@587d1d39]" name="inputBoxMobileTest" duration-ms="8965" started-at="2017-02-24T17:16:08Z" data-provider="First and Last Name Input Box Data" finished-at="2017-02-24T17:16:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Last Name]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: b]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[solid]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@60129b9a]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[8px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[[Ljava.lang.String;@78d6692f]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[[Ljava.lang.String;@7a55af6b]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[18px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inputBoxMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.FormsTest@587d1d39]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:16:17Z" finished-at="2017-02-24T17:16:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.FormsTest@587d1d39]" name="beforeMethod" is-config="true" duration-ms="840" started-at="2017-02-24T17:16:17Z" finished-at="2017-02-24T17:16:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.FormsTest.verifyFormsMobileTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyFormsMobileTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.FormsTest@587d1d39]" name="verifyFormsMobileTest" duration-ms="22076" started-at="2017-02-24T17:16:18Z" data-provider="Mobile : Forms Data" finished-at="2017-02-24T17:16:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[26px]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[600]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@75f95314]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[14px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[[Ljava.lang.String;@6127a7e]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[[Ljava.lang.String;@6bbe2511]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[[Ljava.lang.String;@495fac5f]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[30px]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[[Ljava.lang.String;@76012793]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[12px]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[16px]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[[Ljava.lang.String;@635572a7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFormsMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.FormsTest@587d1d39]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:16:40Z" finished-at="2017-02-24T17:16:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="tearDown(java.lang.String)[pri:0, instance:elementsTests.FormsTest@587d1d39]" name="tearDown" is-config="true" duration-ms="832" started-at="2017-02-24T17:16:40Z" finished-at="2017-02-24T17:16:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- elementsTests.FormsTest -->
      <class name="elementsTests.PresentationStrategyTest">
        <test-method status="PASS" signature="setUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="setUp" is-config="true" duration-ms="85367" started-at="2017-02-24T17:14:43Z" finished-at="2017-02-24T17:16:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sauce]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[off]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OS X 10.11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[54.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[iOS]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[iPhone 6 Plus]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[9.3]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[safari]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[1.5.3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="beforeClass(java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="beforeClass" is-config="true" duration-ms="0" started-at="2017-02-24T17:16:09Z" finished-at="2017-02-24T17:16:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sauce]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 6 Plus]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="beforeMethod" is-config="true" duration-ms="1360" started-at="2017-02-24T17:16:09Z" finished-at="2017-02-24T17:16:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.getMDAndLGDefaultStrategyiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="beforeMethod" is-config="true" duration-ms="1426" started-at="2017-02-24T17:16:10Z" finished-at="2017-02-24T17:16:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.getMDAndLGDefaultStrategyiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="getMDAndLGDefaultStrategyiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="getMDAndLGDefaultStrategyiOSTest" duration-ms="0" started-at="2017-02-24T17:16:10Z" data-provider="iOS: MD and LG Default Strategy Test Data" finished-at="2017-02-24T17:16:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: default-strategy]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.PresentationStrategyTest.getMDAndLGDefaultStrategyiOSTest(PresentationStrategyTest.java:524)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getMDAndLGDefaultStrategyiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:16:10Z" finished-at="2017-02-24T17:16:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="getMDAndLGDefaultStrategyiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="getMDAndLGDefaultStrategyiOSTest" duration-ms="1" started-at="2017-02-24T17:16:11Z" data-provider="iOS: MD and LG Default Strategy Test Data" finished-at="2017-02-24T17:16:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: default-strategy]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-40px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-40px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.PresentationStrategyTest.getMDAndLGDefaultStrategyiOSTest(PresentationStrategyTest.java:524)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getMDAndLGDefaultStrategyiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:16:11Z" finished-at="2017-02-24T17:16:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="beforeMethod" is-config="true" duration-ms="1063" started-at="2017-02-24T17:16:11Z" finished-at="2017-02-24T17:16:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.getSMAndMDDefaultStrategyAndroidMobileTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:16:12Z" finished-at="2017-02-24T17:16:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="getSMAndMDDefaultStrategyAndroidMobileTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="getSMAndMDDefaultStrategyAndroidMobileTest" duration-ms="0" started-at="2017-02-24T17:16:12Z" data-provider="Android: SM And MD Default Strategy Test Data" finished-at="2017-02-24T17:16:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: default-strategy]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as Google Nexus 7 HD Emulator]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as Google Nexus 7 HD Emulator
	at elementsTests.PresentationStrategyTest.getSMAndMDDefaultStrategyAndroidMobileTest(PresentationStrategyTest.java:571)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSMAndMDDefaultStrategyAndroidMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="beforeMethod" is-config="true" duration-ms="1132" started-at="2017-02-24T17:16:12Z" finished-at="2017-02-24T17:16:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.getSMAndMDDefaultStrategyAndroidMobileTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:16:14Z" finished-at="2017-02-24T17:16:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="getSMAndMDDefaultStrategyAndroidMobileTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="getSMAndMDDefaultStrategyAndroidMobileTest" duration-ms="0" started-at="2017-02-24T17:16:14Z" data-provider="Android: SM And MD Default Strategy Test Data" finished-at="2017-02-24T17:16:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: default-strategy]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as Google Nexus 7 HD Emulator]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as Google Nexus 7 HD Emulator
	at elementsTests.PresentationStrategyTest.getSMAndMDDefaultStrategyAndroidMobileTest(PresentationStrategyTest.java:571)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSMAndMDDefaultStrategyAndroidMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="beforeMethod" is-config="true" duration-ms="1138" started-at="2017-02-24T17:16:14Z" finished-at="2017-02-24T17:16:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.getXLGDefaultStrategyiOSMobileTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:16:15Z" finished-at="2017-02-24T17:16:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="getXLGDefaultStrategyiOSMobileTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="getXLGDefaultStrategyiOSMobileTest" duration-ms="0" started-at="2017-02-24T17:16:15Z" data-provider="iOS: XLG Default Strategy Test Data" finished-at="2017-02-24T17:16:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: default-strategy]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-40px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-40px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Pro']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Pro'
	at elementsTests.PresentationStrategyTest.getXLGDefaultStrategyiOSMobileTest(PresentationStrategyTest.java:547)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getXLGDefaultStrategyiOSMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="beforeMethod" is-config="true" duration-ms="1032" started-at="2017-02-24T17:16:15Z" finished-at="2017-02-24T17:16:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.getXSAndSMStrategyiOSMobileTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="getXSAndSMStrategyiOSMobileTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="getXSAndSMStrategyiOSMobileTest" duration-ms="4494" started-at="2017-02-24T17:16:16Z" data-provider="iOS: XS And SM Default Strategy Test Data" finished-at="2017-02-24T17:16:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: default-strategy]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-10px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-10px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getXSAndSMStrategyiOSMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:16:20Z" finished-at="2017-02-24T17:16:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="beforeMethod" is-config="true" duration-ms="1109" started-at="2017-02-24T17:16:20Z" finished-at="2017-02-24T17:16:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.getXSAndSMStrategyiOSMobileTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="getXSAndSMStrategyiOSMobileTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="getXSAndSMStrategyiOSMobileTest" duration-ms="5282" started-at="2017-02-24T17:16:21Z" data-provider="iOS: XS And SM Default Strategy Test Data" finished-at="2017-02-24T17:16:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: default-strategy]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getXSAndSMStrategyiOSMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:16:27Z" finished-at="2017-02-24T17:16:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="beforeMethod" is-config="true" duration-ms="1240" started-at="2017-02-24T17:16:27Z" finished-at="2017-02-24T17:16:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setCenteredStrategyMobileTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setCenteredStrategyMobileTest()[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="setCenteredStrategyMobileTest" duration-ms="3996" started-at="2017-02-24T17:16:28Z" finished-at="2017-02-24T17:16:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setCenteredStrategyMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:16:32Z" finished-at="2017-02-24T17:16:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="beforeMethod" is-config="true" duration-ms="1150" started-at="2017-02-24T17:16:32Z" finished-at="2017-02-24T17:16:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setGridLargeCol2MobileTest(org.openqa.selenium.ScreenOrientation,java.lang.String[],java.lang.String[],java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setGridLargeCol2MobileTest(org.openqa.selenium.ScreenOrientation, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="setGridLargeCol2MobileTest" duration-ms="58211" started-at="2017-02-24T17:16:33Z" data-provider="Mobile : BasicGrid - Col 2 Test Data" finished-at="2017-02-24T17:17:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@29a0cdb]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@32a68f4f]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@73194df]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setGridLargeCol2MobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:17:31Z" finished-at="2017-02-24T17:17:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="beforeMethod" is-config="true" duration-ms="1067" started-at="2017-02-24T17:17:31Z" finished-at="2017-02-24T17:17:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setGridLargeCol2MobileTest(org.openqa.selenium.ScreenOrientation,java.lang.String[],java.lang.String[],java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setGridLargeCol2MobileTest(org.openqa.selenium.ScreenOrientation, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="setGridLargeCol2MobileTest" duration-ms="55856" started-at="2017-02-24T17:17:32Z" data-provider="Mobile : BasicGrid - Col 2 Test Data" finished-at="2017-02-24T17:18:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@6eb2384f]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@3c9c0d96]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@3a4621bd]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setGridLargeCol2MobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:18:28Z" finished-at="2017-02-24T17:18:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="beforeMethod" is-config="true" duration-ms="1736" started-at="2017-02-24T17:18:28Z" finished-at="2017-02-24T17:18:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setGridLargeCol3MobileTest(org.openqa.selenium.ScreenOrientation,java.lang.String[],java.lang.String[],java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setGridLargeCol3MobileTest(org.openqa.selenium.ScreenOrientation, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="setGridLargeCol3MobileTest" duration-ms="56841" started-at="2017-02-24T17:18:30Z" data-provider="Mobile : BasicGrid - Col 3 Test Data" finished-at="2017-02-24T17:19:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@31dadd46]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@4ed5eb72]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@12f9af83]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setGridLargeCol3MobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="beforeMethod" is-config="true" duration-ms="1131" started-at="2017-02-24T17:19:27Z" finished-at="2017-02-24T17:19:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setGridLargeCol3MobileTest(org.openqa.selenium.ScreenOrientation,java.lang.String[],java.lang.String[],java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:19:27Z" finished-at="2017-02-24T17:19:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setGridLargeCol3MobileTest(org.openqa.selenium.ScreenOrientation, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="setGridLargeCol3MobileTest" duration-ms="56669" started-at="2017-02-24T17:19:28Z" data-provider="Mobile : BasicGrid - Col 3 Test Data" finished-at="2017-02-24T17:20:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@19b93fa8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@7e6ef134]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@1f010bf0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setGridLargeCol3MobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:20:25Z" finished-at="2017-02-24T17:20:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="beforeMethod" is-config="true" duration-ms="1173" started-at="2017-02-24T17:20:25Z" finished-at="2017-02-24T17:20:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setGridLargeCol4MobileTest(org.openqa.selenium.ScreenOrientation,java.lang.String[],java.lang.String[],java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setGridLargeCol4MobileTest(org.openqa.selenium.ScreenOrientation, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="setGridLargeCol4MobileTest" duration-ms="56257" started-at="2017-02-24T17:20:26Z" data-provider="Mobile : BasicGrid - Col 4 Test Data" finished-at="2017-02-24T17:21:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@40db2a24]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@10cf09e8]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@1921ad94]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setGridLargeCol4MobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:21:22Z" finished-at="2017-02-24T17:21:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="beforeMethod" is-config="true" duration-ms="1360" started-at="2017-02-24T17:21:22Z" finished-at="2017-02-24T17:21:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setGridLargeCol4MobileTest(org.openqa.selenium.ScreenOrientation,java.lang.String[],java.lang.String[],java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setGridLargeCol4MobileTest(org.openqa.selenium.ScreenOrientation, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="setGridLargeCol4MobileTest" duration-ms="57802" started-at="2017-02-24T17:21:23Z" data-provider="Mobile : BasicGrid - Col 4 Test Data" finished-at="2017-02-24T17:22:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@ee86bcb]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@177bea38]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@7f132176]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setGridLargeCol4MobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:22:21Z" finished-at="2017-02-24T17:22:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="beforeMethod" is-config="true" duration-ms="1255" started-at="2017-02-24T17:22:21Z" finished-at="2017-02-24T17:22:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setGridSmallCol2MobileTest(org.openqa.selenium.ScreenOrientation,java.lang.String[],java.lang.String[],java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setGridSmallCol2MobileTest(org.openqa.selenium.ScreenOrientation, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="setGridSmallCol2MobileTest" duration-ms="56370" started-at="2017-02-24T17:22:22Z" data-provider="Mobile : BasicGrid - Col 2 Test Data" finished-at="2017-02-24T17:23:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@6bca7e0d]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@2631f68c]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@6ed3f258]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setGridSmallCol2MobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:23:19Z" finished-at="2017-02-24T17:23:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="beforeMethod" is-config="true" duration-ms="1061" started-at="2017-02-24T17:23:19Z" finished-at="2017-02-24T17:23:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setGridSmallCol2MobileTest(org.openqa.selenium.ScreenOrientation,java.lang.String[],java.lang.String[],java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setGridSmallCol2MobileTest(org.openqa.selenium.ScreenOrientation, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="setGridSmallCol2MobileTest" duration-ms="55853" started-at="2017-02-24T17:23:20Z" data-provider="Mobile : BasicGrid - Col 2 Test Data" finished-at="2017-02-24T17:24:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@8ad6665]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@30af5b6b]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@19835e64]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setGridSmallCol2MobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:24:16Z" finished-at="2017-02-24T17:24:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="beforeMethod" is-config="true" duration-ms="1113" started-at="2017-02-24T17:24:16Z" finished-at="2017-02-24T17:24:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setGridSmallCol3MobileTest(org.openqa.selenium.ScreenOrientation,java.lang.String[],java.lang.String[],java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setGridSmallCol3MobileTest(org.openqa.selenium.ScreenOrientation, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="setGridSmallCol3MobileTest" duration-ms="56258" started-at="2017-02-24T17:24:17Z" data-provider="Mobile : BasicGrid - Col 3 Test Data" finished-at="2017-02-24T17:25:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@68b32e3e]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@bcef303]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@41709512]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setGridSmallCol3MobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="beforeMethod" is-config="true" duration-ms="1045" started-at="2017-02-24T17:25:13Z" finished-at="2017-02-24T17:25:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setGridSmallCol3MobileTest(org.openqa.selenium.ScreenOrientation,java.lang.String[],java.lang.String[],java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:25:13Z" finished-at="2017-02-24T17:25:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setGridSmallCol3MobileTest(org.openqa.selenium.ScreenOrientation, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="setGridSmallCol3MobileTest" duration-ms="58058" started-at="2017-02-24T17:25:14Z" data-provider="Mobile : BasicGrid - Col 3 Test Data" finished-at="2017-02-24T17:26:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@42039326]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@33308786]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@4f9a2c08]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setGridSmallCol3MobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:26:12Z" finished-at="2017-02-24T17:26:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="beforeMethod" is-config="true" duration-ms="1147" started-at="2017-02-24T17:26:12Z" finished-at="2017-02-24T17:26:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setGridSmallCol4MobileTest(org.openqa.selenium.ScreenOrientation,java.lang.String[],java.lang.String[],java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setGridSmallCol4MobileTest(org.openqa.selenium.ScreenOrientation, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="setGridSmallCol4MobileTest" duration-ms="55465" started-at="2017-02-24T17:26:13Z" data-provider="Mobile : BasicGrid - Col 4 Test Data" finished-at="2017-02-24T17:27:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@a87f8ec]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@5443d039]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@63787180]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setGridSmallCol4MobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="beforeMethod" is-config="true" duration-ms="1116" started-at="2017-02-24T17:27:09Z" finished-at="2017-02-24T17:27:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setGridSmallCol4MobileTest(org.openqa.selenium.ScreenOrientation,java.lang.String[],java.lang.String[],java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:27:09Z" finished-at="2017-02-24T17:27:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setGridSmallCol4MobileTest(org.openqa.selenium.ScreenOrientation, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="setGridSmallCol4MobileTest" duration-ms="56019" started-at="2017-02-24T17:27:10Z" data-provider="Mobile : BasicGrid - Col 4 Test Data" finished-at="2017-02-24T17:28:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@7d1cfb8b]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@48e92c5c]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@2e1ef60]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setGridSmallCol4MobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:28:06Z" finished-at="2017-02-24T17:28:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="beforeMethod" is-config="true" duration-ms="1397" started-at="2017-02-24T17:28:06Z" finished-at="2017-02-24T17:28:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setLargeGapSpacingMobileTest(java.lang.String,org.openqa.selenium.By,org.openqa.selenium.ScreenOrientation,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setLargeGapSpacingMobileTest(java.lang.String, org.openqa.selenium.By, org.openqa.selenium.ScreenOrientation, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="setLargeGapSpacingMobileTest" duration-ms="11304" started-at="2017-02-24T17:28:07Z" data-provider="Mobile:Spacing Large Gap Test Data" finished-at="2017-02-24T17:28:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Large Gap spacing Element1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: centered-largegap1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setLargeGapSpacingMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="beforeMethod" is-config="true" duration-ms="1431" started-at="2017-02-24T17:28:19Z" finished-at="2017-02-24T17:28:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setLargeGapSpacingMobileTest(java.lang.String,org.openqa.selenium.By,org.openqa.selenium.ScreenOrientation,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:28:19Z" finished-at="2017-02-24T17:28:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setLargeGapSpacingMobileTest(java.lang.String, org.openqa.selenium.By, org.openqa.selenium.ScreenOrientation, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="setLargeGapSpacingMobileTest" duration-ms="10801" started-at="2017-02-24T17:28:20Z" data-provider="Mobile:Spacing Large Gap Test Data" finished-at="2017-02-24T17:28:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Large Gap spacing Element1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: centered-largegap1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setLargeGapSpacingMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="beforeMethod" is-config="true" duration-ms="1266" started-at="2017-02-24T17:28:31Z" finished-at="2017-02-24T17:28:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setLargeGapSpacingMobileTest(java.lang.String,org.openqa.selenium.By,org.openqa.selenium.ScreenOrientation,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:28:31Z" finished-at="2017-02-24T17:28:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setLargeGapSpacingMobileTest(java.lang.String, org.openqa.selenium.By, org.openqa.selenium.ScreenOrientation, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="setLargeGapSpacingMobileTest" duration-ms="12404" started-at="2017-02-24T17:28:32Z" data-provider="Mobile:Spacing Large Gap Test Data" finished-at="2017-02-24T17:28:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Large Gap spacing Element2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: centered-largegap2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setLargeGapSpacingMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:28:45Z" finished-at="2017-02-24T17:28:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="beforeMethod" is-config="true" duration-ms="1259" started-at="2017-02-24T17:28:45Z" finished-at="2017-02-24T17:28:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setLargeGapSpacingMobileTest(java.lang.String,org.openqa.selenium.By,org.openqa.selenium.ScreenOrientation,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setLargeGapSpacingMobileTest(java.lang.String, org.openqa.selenium.By, org.openqa.selenium.ScreenOrientation, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="setLargeGapSpacingMobileTest" duration-ms="11119" started-at="2017-02-24T17:28:46Z" data-provider="Mobile:Spacing Large Gap Test Data" finished-at="2017-02-24T17:28:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Large Gap spacing Element2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: centered-largegap2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setLargeGapSpacingMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:28:57Z" finished-at="2017-02-24T17:28:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="beforeMethod" is-config="true" duration-ms="1483" started-at="2017-02-24T17:28:57Z" finished-at="2017-02-24T17:28:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setLargeGapSpacingMobileTest(java.lang.String,org.openqa.selenium.By,org.openqa.selenium.ScreenOrientation,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setLargeGapSpacingMobileTest(java.lang.String, org.openqa.selenium.By, org.openqa.selenium.ScreenOrientation, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="setLargeGapSpacingMobileTest" duration-ms="10712" started-at="2017-02-24T17:28:58Z" data-provider="Mobile:Spacing Large Gap Test Data" finished-at="2017-02-24T17:29:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Large Gap spacing Element3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: centered-largegap3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setLargeGapSpacingMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:29:09Z" finished-at="2017-02-24T17:29:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="beforeMethod" is-config="true" duration-ms="1479" started-at="2017-02-24T17:29:09Z" finished-at="2017-02-24T17:29:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setLargeGapSpacingMobileTest(java.lang.String,org.openqa.selenium.By,org.openqa.selenium.ScreenOrientation,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setLargeGapSpacingMobileTest(java.lang.String, org.openqa.selenium.By, org.openqa.selenium.ScreenOrientation, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="setLargeGapSpacingMobileTest" duration-ms="10818" started-at="2017-02-24T17:29:11Z" data-provider="Mobile:Spacing Large Gap Test Data" finished-at="2017-02-24T17:29:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Large Gap spacing Element3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: centered-largegap3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setLargeGapSpacingMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:29:21Z" finished-at="2017-02-24T17:29:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="beforeMethod" is-config="true" duration-ms="1062" started-at="2017-02-24T17:29:21Z" finished-at="2017-02-24T17:29:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setMDandLGLeftRightStrategyMobileTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="setMDandLGLeftRightStrategyMobileTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="setMDandLGLeftRightStrategyMobileTest" duration-ms="0" started-at="2017-02-24T17:29:22Z" data-provider="iOS: MD and LG Left/Right Strategy Test Data" finished-at="2017-02-24T17:29:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[left-element]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: left-element]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.PresentationStrategyTest.setMDandLGLeftRightStrategyMobileTest(PresentationStrategyTest.java:646)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setMDandLGLeftRightStrategyMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:29:22Z" finished-at="2017-02-24T17:29:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="beforeMethod" is-config="true" duration-ms="1094" started-at="2017-02-24T17:29:22Z" finished-at="2017-02-24T17:29:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setMDandLGLeftRightStrategyMobileTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="setMDandLGLeftRightStrategyMobileTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="setMDandLGLeftRightStrategyMobileTest" duration-ms="1" started-at="2017-02-24T17:29:24Z" data-provider="iOS: MD and LG Left/Right Strategy Test Data" finished-at="2017-02-24T17:29:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[right-element]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: right-element]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.PresentationStrategyTest.setMDandLGLeftRightStrategyMobileTest(PresentationStrategyTest.java:646)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setMDandLGLeftRightStrategyMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:29:24Z" finished-at="2017-02-24T17:29:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="beforeMethod" is-config="true" duration-ms="1074" started-at="2017-02-24T17:29:24Z" finished-at="2017-02-24T17:29:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setMDandLGLeftRightStrategyMobileTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="setMDandLGLeftRightStrategyMobileTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="setMDandLGLeftRightStrategyMobileTest" duration-ms="1" started-at="2017-02-24T17:29:25Z" data-provider="iOS: MD and LG Left/Right Strategy Test Data" finished-at="2017-02-24T17:29:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[left-element]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: left-element]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.PresentationStrategyTest.setMDandLGLeftRightStrategyMobileTest(PresentationStrategyTest.java:646)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setMDandLGLeftRightStrategyMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:29:25Z" finished-at="2017-02-24T17:29:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="beforeMethod" is-config="true" duration-ms="1206" started-at="2017-02-24T17:29:25Z" finished-at="2017-02-24T17:29:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setMDandLGLeftRightStrategyMobileTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="setMDandLGLeftRightStrategyMobileTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="setMDandLGLeftRightStrategyMobileTest" duration-ms="0" started-at="2017-02-24T17:29:26Z" data-provider="iOS: MD and LG Left/Right Strategy Test Data" finished-at="2017-02-24T17:29:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[right-element]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: right-element]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-40px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.PresentationStrategyTest.setMDandLGLeftRightStrategyMobileTest(PresentationStrategyTest.java:646)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setMDandLGLeftRightStrategyMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:29:26Z" finished-at="2017-02-24T17:29:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="beforeMethod" is-config="true" duration-ms="1196" started-at="2017-02-24T17:29:26Z" finished-at="2017-02-24T17:29:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setSmallGapSpacingMobileTest(java.lang.String,org.openqa.selenium.By,org.openqa.selenium.ScreenOrientation,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setSmallGapSpacingMobileTest(java.lang.String, org.openqa.selenium.By, org.openqa.selenium.ScreenOrientation, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="setSmallGapSpacingMobileTest" duration-ms="10620" started-at="2017-02-24T17:29:27Z" data-provider="Mobile:Spacing Small Gap Test Data" finished-at="2017-02-24T17:29:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Small Gap spacing Element1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: centered-smallgap1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSmallGapSpacingMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:29:38Z" finished-at="2017-02-24T17:29:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="beforeMethod" is-config="true" duration-ms="1120" started-at="2017-02-24T17:29:38Z" finished-at="2017-02-24T17:29:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setSmallGapSpacingMobileTest(java.lang.String,org.openqa.selenium.By,org.openqa.selenium.ScreenOrientation,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setSmallGapSpacingMobileTest(java.lang.String, org.openqa.selenium.By, org.openqa.selenium.ScreenOrientation, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="setSmallGapSpacingMobileTest" duration-ms="10930" started-at="2017-02-24T17:29:39Z" data-provider="Mobile:Spacing Small Gap Test Data" finished-at="2017-02-24T17:29:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Small Gap spacing Element1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: centered-smallgap1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSmallGapSpacingMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:29:50Z" finished-at="2017-02-24T17:29:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="beforeMethod" is-config="true" duration-ms="1037" started-at="2017-02-24T17:29:50Z" finished-at="2017-02-24T17:29:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setSmallGapSpacingMobileTest(java.lang.String,org.openqa.selenium.By,org.openqa.selenium.ScreenOrientation,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setSmallGapSpacingMobileTest(java.lang.String, org.openqa.selenium.By, org.openqa.selenium.ScreenOrientation, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="setSmallGapSpacingMobileTest" duration-ms="12511" started-at="2017-02-24T17:29:51Z" data-provider="Mobile:Spacing Small Gap Test Data" finished-at="2017-02-24T17:30:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Small Gap spacing Element2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: centered-smallgap2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSmallGapSpacingMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="beforeMethod" is-config="true" duration-ms="1788" started-at="2017-02-24T17:30:03Z" finished-at="2017-02-24T17:30:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setSmallGapSpacingMobileTest(java.lang.String,org.openqa.selenium.By,org.openqa.selenium.ScreenOrientation,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:30:03Z" finished-at="2017-02-24T17:30:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setSmallGapSpacingMobileTest(java.lang.String, org.openqa.selenium.By, org.openqa.selenium.ScreenOrientation, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="setSmallGapSpacingMobileTest" duration-ms="11366" started-at="2017-02-24T17:30:05Z" data-provider="Mobile:Spacing Small Gap Test Data" finished-at="2017-02-24T17:30:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Small Gap spacing Element2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: centered-smallgap2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSmallGapSpacingMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="beforeMethod" is-config="true" duration-ms="1128" started-at="2017-02-24T17:30:16Z" finished-at="2017-02-24T17:30:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setSmallGapSpacingMobileTest(java.lang.String,org.openqa.selenium.By,org.openqa.selenium.ScreenOrientation,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:30:16Z" finished-at="2017-02-24T17:30:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setSmallGapSpacingMobileTest(java.lang.String, org.openqa.selenium.By, org.openqa.selenium.ScreenOrientation, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="setSmallGapSpacingMobileTest" duration-ms="10862" started-at="2017-02-24T17:30:18Z" data-provider="Mobile:Spacing Small Gap Test Data" finished-at="2017-02-24T17:30:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Small Gap spacing Element3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: centered-smallgap3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSmallGapSpacingMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="beforeMethod" is-config="true" duration-ms="1396" started-at="2017-02-24T17:30:28Z" finished-at="2017-02-24T17:30:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setSmallGapSpacingMobileTest(java.lang.String,org.openqa.selenium.By,org.openqa.selenium.ScreenOrientation,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:30:28Z" finished-at="2017-02-24T17:30:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setSmallGapSpacingMobileTest(java.lang.String, org.openqa.selenium.By, org.openqa.selenium.ScreenOrientation, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="setSmallGapSpacingMobileTest" duration-ms="11110" started-at="2017-02-24T17:30:30Z" data-provider="Mobile:Spacing Small Gap Test Data" finished-at="2017-02-24T17:30:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Small Gap spacing Element3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: centered-smallgap3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSmallGapSpacingMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:30:41Z" finished-at="2017-02-24T17:30:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="beforeMethod" is-config="true" duration-ms="1059" started-at="2017-02-24T17:30:41Z" finished-at="2017-02-24T17:30:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setSpacingDefaultGapMobileTest(java.lang.String,org.openqa.selenium.ScreenOrientation)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setSpacingDefaultGapMobileTest(java.lang.String, org.openqa.selenium.ScreenOrientation)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="setSpacingDefaultGapMobileTest" duration-ms="27172" started-at="2017-02-24T17:30:42Z" data-provider="Mobile:Spacing Default Gap Test Data" finished-at="2017-02-24T17:31:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Default Gap Spacing Element]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSpacingDefaultGapMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:31:09Z" finished-at="2017-02-24T17:31:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="beforeMethod" is-config="true" duration-ms="1096" started-at="2017-02-24T17:31:09Z" finished-at="2017-02-24T17:31:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setSpacingDefaultGapMobileTest(java.lang.String,org.openqa.selenium.ScreenOrientation)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setSpacingDefaultGapMobileTest(java.lang.String, org.openqa.selenium.ScreenOrientation)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="setSpacingDefaultGapMobileTest" duration-ms="30270" started-at="2017-02-24T17:31:10Z" data-provider="Mobile:Spacing Default Gap Test Data" finished-at="2017-02-24T17:31:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Default Gap Spacing Element]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSpacingDefaultGapMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:31:41Z" finished-at="2017-02-24T17:31:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="beforeMethod" is-config="true" duration-ms="1050" started-at="2017-02-24T17:31:41Z" finished-at="2017-02-24T17:31:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setXLGLeftRightStrategyMobileTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="setXLGLeftRightStrategyMobileTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="setXLGLeftRightStrategyMobileTest" duration-ms="0" started-at="2017-02-24T17:31:42Z" data-provider="iOS: XLG Left/Right Strategy Test Data" finished-at="2017-02-24T17:31:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[left-element]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: left-element]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Pro']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Pro'
	at elementsTests.PresentationStrategyTest.setXLGLeftRightStrategyMobileTest(PresentationStrategyTest.java:671)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setXLGLeftRightStrategyMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="beforeMethod" is-config="true" duration-ms="1165" started-at="2017-02-24T17:31:42Z" finished-at="2017-02-24T17:31:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setXLGLeftRightStrategyMobileTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:31:42Z" finished-at="2017-02-24T17:31:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:31:43Z" finished-at="2017-02-24T17:31:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setXLGLeftRightStrategyMobileTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="setXLGLeftRightStrategyMobileTest" duration-ms="0" started-at="2017-02-24T17:31:43Z" data-provider="iOS: XLG Left/Right Strategy Test Data" finished-at="2017-02-24T17:31:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[right-element]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: right-element]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Pro']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Pro'
	at elementsTests.PresentationStrategyTest.setXLGLeftRightStrategyMobileTest(PresentationStrategyTest.java:671)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setXLGLeftRightStrategyMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="beforeMethod" is-config="true" duration-ms="1025" started-at="2017-02-24T17:31:43Z" finished-at="2017-02-24T17:31:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setXSandSMLeftRightStrategyMobileTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setXSandSMLeftRightStrategyMobileTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="setXSandSMLeftRightStrategyMobileTest" duration-ms="4481" started-at="2017-02-24T17:31:44Z" data-provider="iOS: XS and SM Left/Right Strategy Test Data" finished-at="2017-02-24T17:31:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[left-element]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: left-element]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-10px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setXSandSMLeftRightStrategyMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:31:48Z" finished-at="2017-02-24T17:31:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="beforeMethod" is-config="true" duration-ms="1052" started-at="2017-02-24T17:31:48Z" finished-at="2017-02-24T17:31:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setXSandSMLeftRightStrategyMobileTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setXSandSMLeftRightStrategyMobileTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="setXSandSMLeftRightStrategyMobileTest" duration-ms="4622" started-at="2017-02-24T17:31:49Z" data-provider="iOS: XS and SM Left/Right Strategy Test Data" finished-at="2017-02-24T17:31:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[right-element]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: right-element]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-10px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setXSandSMLeftRightStrategyMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="beforeMethod" is-config="true" duration-ms="1120" started-at="2017-02-24T17:31:54Z" finished-at="2017-02-24T17:31:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setXSandSMLeftRightStrategyMobileTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:31:54Z" finished-at="2017-02-24T17:31:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setXSandSMLeftRightStrategyMobileTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="setXSandSMLeftRightStrategyMobileTest" duration-ms="4913" started-at="2017-02-24T17:31:55Z" data-provider="iOS: XS and SM Left/Right Strategy Test Data" finished-at="2017-02-24T17:32:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[left-element]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: left-element]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setXSandSMLeftRightStrategyMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:32:00Z" finished-at="2017-02-24T17:32:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="beforeMethod" is-config="true" duration-ms="1195" started-at="2017-02-24T17:32:00Z" finished-at="2017-02-24T17:32:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setXSandSMLeftRightStrategyMobileTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setXSandSMLeftRightStrategyMobileTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="setXSandSMLeftRightStrategyMobileTest" duration-ms="4666" started-at="2017-02-24T17:32:01Z" data-provider="iOS: XS and SM Left/Right Strategy Test Data" finished-at="2017-02-24T17:32:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[right-element]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: right-element]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setXSandSMLeftRightStrategyMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:32:06Z" finished-at="2017-02-24T17:32:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="tearDown(java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@2c039ac6]" name="tearDown" is-config="true" duration-ms="1403" started-at="2017-02-24T17:32:06Z" finished-at="2017-02-24T17:32:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- elementsTests.PresentationStrategyTest -->
      <class name="origamiV2Tests.ContextualHelpTest">
        <test-method status="PASS" signature="setUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="setUp" is-config="true" duration-ms="91242" started-at="2017-02-24T17:18:54Z" finished-at="2017-02-24T17:20:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sauce]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[off]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OS X 10.11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[54.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[iOS]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[iPhone 6 Plus]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[9.3]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[safari]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[1.5.3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="contextualHelpTestBeforeClass(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="contextualHelpTestBeforeClass" is-config="true" duration-ms="1" started-at="2017-02-24T17:20:25Z" finished-at="2017-02-24T17:20:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sauce]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- contextualHelpTestBeforeClass -->
        <test-method status="PASS" signature="backToHelpTopicsMobileTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="backToHelpTopicsMobileTest" duration-ms="26638" started-at="2017-02-24T17:20:25Z" finished-at="2017-02-24T17:20:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backToHelpTopicsMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:20:25Z" finished-at="2017-02-24T17:20:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ContextualHelpTest.backToHelpTopicsMobileTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:20:52Z" finished-at="2017-02-24T17:20:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="displayInstructorHelpTopicsMobileTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="displayInstructorHelpTopicsMobileTest" duration-ms="9851" started-at="2017-02-24T17:20:52Z" finished-at="2017-02-24T17:21:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- displayInstructorHelpTopicsMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:20:52Z" finished-at="2017-02-24T17:20:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ContextualHelpTest.displayInstructorHelpTopicsMobileTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:21:02Z" finished-at="2017-02-24T17:21:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:21:02Z" finished-at="2017-02-24T17:21:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ContextualHelpTest.displayStudentHelpTopicsMobileTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="displayStudentHelpTopicsMobileTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="displayStudentHelpTopicsMobileTest" duration-ms="11510" started-at="2017-02-24T17:21:02Z" finished-at="2017-02-24T17:21:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- displayStudentHelpTopicsMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:21:13Z" finished-at="2017-02-24T17:21:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:21:13Z" finished-at="2017-02-24T17:21:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ContextualHelpTest.openAndThenRemoveHelpTopicsMobileTest(java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="openAndThenRemoveHelpTopicsMobileTest(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="openAndThenRemoveHelpTopicsMobileTest" duration-ms="6940" started-at="2017-02-24T17:21:13Z" data-provider="ConxHelp Remove Help Topics Data" finished-at="2017-02-24T17:21:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[one]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA['testcontent/student/freetrial']]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openAndThenRemoveHelpTopicsMobileTest -->
        <test-method status="PASS" signature="openAndThenRemoveHelpTopicsMobileTest(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="openAndThenRemoveHelpTopicsMobileTest" duration-ms="8157" started-at="2017-02-24T17:21:20Z" data-provider="ConxHelp Remove Help Topics Data" finished-at="2017-02-24T17:21:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[two]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[['testcontent/student/freetrial','testcontent/contactsupport']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openAndThenRemoveHelpTopicsMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:21:20Z" finished-at="2017-02-24T17:21:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ContextualHelpTest.openAndThenRemoveHelpTopicsMobileTest(java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:21:20Z" finished-at="2017-02-24T17:21:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="openAndThenRemoveHelpTopicsMobileTest(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="openAndThenRemoveHelpTopicsMobileTest" duration-ms="7796" started-at="2017-02-24T17:21:28Z" data-provider="ConxHelp Remove Help Topics Data" finished-at="2017-02-24T17:21:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[all]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openAndThenRemoveHelpTopicsMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:21:28Z" finished-at="2017-02-24T17:21:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:21:28Z" finished-at="2017-02-24T17:21:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ContextualHelpTest.openAndThenRemoveHelpTopicsMobileTest(java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:21:36Z" finished-at="2017-02-24T17:21:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="openSpecificHelpTopicMobileTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="openSpecificHelpTopicMobileTest" duration-ms="23411" started-at="2017-02-24T17:21:36Z" finished-at="2017-02-24T17:21:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openSpecificHelpTopicMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:21:36Z" finished-at="2017-02-24T17:21:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ContextualHelpTest.openSpecificHelpTopicMobileTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:21:59Z" finished-at="2017-02-24T17:21:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="openThruAppHeaderSignedOutModeMobileTest(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="openThruAppHeaderSignedOutModeMobileTest" duration-ms="5103" started-at="2017-02-24T17:21:59Z" data-provider="ConxHelp with AppHeader Data" finished-at="2017-02-24T17:22:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[signed out]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[http://localhost:8000/src/main/java/origamiV2/fixtures/contextualHelp/app-header-SignOutMode.html]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openThruAppHeaderSignedOutModeMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:21:59Z" finished-at="2017-02-24T17:21:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ContextualHelpTest.openThruAppHeaderSignedOutModeMobileTest(java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:22:05Z" finished-at="2017-02-24T17:22:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:22:05Z" finished-at="2017-02-24T17:22:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ContextualHelpTest.openThruAppHeaderSignedOutModeMobileTest(java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="openThruAppHeaderSignedOutModeMobileTest(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="openThruAppHeaderSignedOutModeMobileTest" duration-ms="5049" started-at="2017-02-24T17:22:05Z" data-provider="ConxHelp with AppHeader Data" finished-at="2017-02-24T17:22:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[basic]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[http://localhost:8000/src/main/java/origamiV2/fixtures/contextualHelp/app-header-BasicMode.html]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openThruAppHeaderSignedOutModeMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:22:10Z" finished-at="2017-02-24T17:22:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:22:10Z" finished-at="2017-02-24T17:22:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ContextualHelpTest.openThruAppHeaderSignedOutModeMobileTest(java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="openThruAppHeaderSignedOutModeMobileTest(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="openThruAppHeaderSignedOutModeMobileTest" duration-ms="5476" started-at="2017-02-24T17:22:10Z" data-provider="ConxHelp with AppHeader Data" finished-at="2017-02-24T17:22:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[course]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[http://localhost:8000/src/main/java/origamiV2/fixtures/contextualHelp/app-header-CourseMode.html]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openThruAppHeaderSignedOutModeMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:22:15Z" finished-at="2017-02-24T17:22:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="openThruAppHeaderSignedOutModeMobileTest(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="openThruAppHeaderSignedOutModeMobileTest" duration-ms="4916" started-at="2017-02-24T17:22:15Z" data-provider="ConxHelp with AppHeader Data" finished-at="2017-02-24T17:22:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[interation]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[http://localhost:8000/src/main/java/origamiV2/fixtures/contextualHelp/app-header-IntegMode.html]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openThruAppHeaderSignedOutModeMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:22:15Z" finished-at="2017-02-24T17:22:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ContextualHelpTest.openThruAppHeaderSignedOutModeMobileTest(java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:22:20Z" finished-at="2017-02-24T17:22:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="styleForBackToHelpTopicsButtonMobileTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="styleForBackToHelpTopicsButtonMobileTest" duration-ms="21242" started-at="2017-02-24T17:22:20Z" finished-at="2017-02-24T17:22:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- styleForBackToHelpTopicsButtonMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:22:20Z" finished-at="2017-02-24T17:22:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ContextualHelpTest.styleForBackToHelpTopicsButtonMobileTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:22:41Z" finished-at="2017-02-24T17:22:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="styleForCloseHelpMobileTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="styleForCloseHelpMobileTest" duration-ms="6987" started-at="2017-02-24T17:22:41Z" finished-at="2017-02-24T17:22:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- styleForCloseHelpMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:22:41Z" finished-at="2017-02-24T17:22:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ContextualHelpTest.styleForCloseHelpMobileTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:22:48Z" finished-at="2017-02-24T17:22:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:22:48Z" finished-at="2017-02-24T17:22:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ContextualHelpTest.styleForContextualHelpDrawerHeaderMobileTest(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="styleForContextualHelpDrawerHeaderMobileTest(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="styleForContextualHelpDrawerHeaderMobileTest" duration-ms="22438" started-at="2017-02-24T17:22:48Z" data-provider="Contextual-Help Drawer Header wi/wo app-header test data" finished-at="2017-02-24T17:23:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[withAppHeader]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[http://localhost:8000/src/main/java/origamiV2/fixtures/contextualHelp/contextual-help.html]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- styleForContextualHelpDrawerHeaderMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:23:11Z" finished-at="2017-02-24T17:23:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:23:11Z" finished-at="2017-02-24T17:23:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ContextualHelpTest.styleForContextualHelpDrawerHeaderMobileTest(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="styleForContextualHelpDrawerHeaderMobileTest(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="styleForContextualHelpDrawerHeaderMobileTest" duration-ms="20874" started-at="2017-02-24T17:23:11Z" data-provider="Contextual-Help Drawer Header wi/wo app-header test data" finished-at="2017-02-24T17:23:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[withoutAppHeader]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[http://localhost:8000/src/main/java/origamiV2/fixtures/contextualHelp/contextual-help-woAppHeader.html]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- styleForContextualHelpDrawerHeaderMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:23:31Z" finished-at="2017-02-24T17:23:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:23:31Z" finished-at="2017-02-24T17:23:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ContextualHelpTest.styleForContextualHelpDrawerHeaderTopicHeadingMobileTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="styleForContextualHelpDrawerHeaderTopicHeadingMobileTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="styleForContextualHelpDrawerHeaderTopicHeadingMobileTest" duration-ms="14532" started-at="2017-02-24T17:23:31Z" finished-at="2017-02-24T17:23:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- styleForContextualHelpDrawerHeaderTopicHeadingMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:23:46Z" finished-at="2017-02-24T17:23:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="styleForContextualHelpDrawerMobileTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="styleForContextualHelpDrawerMobileTest" duration-ms="6950" started-at="2017-02-24T17:23:46Z" finished-at="2017-02-24T17:23:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- styleForContextualHelpDrawerMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:23:46Z" finished-at="2017-02-24T17:23:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ContextualHelpTest.styleForContextualHelpDrawerMobileTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:23:53Z" finished-at="2017-02-24T17:23:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:23:53Z" finished-at="2017-02-24T17:23:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ContextualHelpTest.styleForHelpTopicExcerptParaMobileTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="styleForHelpTopicExcerptParaMobileTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="styleForHelpTopicExcerptParaMobileTest" duration-ms="4202" started-at="2017-02-24T17:23:53Z" finished-at="2017-02-24T17:23:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- styleForHelpTopicExcerptParaMobileTest -->
        <test-method status="PASS" signature="styleForHelpTopicHeadingH3MobileTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="styleForHelpTopicHeadingH3MobileTest" duration-ms="11186" started-at="2017-02-24T17:23:57Z" finished-at="2017-02-24T17:24:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- styleForHelpTopicHeadingH3MobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:23:57Z" finished-at="2017-02-24T17:23:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ContextualHelpTest.styleForHelpTopicHeadingH3MobileTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:23:57Z" finished-at="2017-02-24T17:23:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="styleForHelpTopicLayoutMobileTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="styleForHelpTopicLayoutMobileTest" duration-ms="14497" started-at="2017-02-24T17:24:08Z" finished-at="2017-02-24T17:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- styleForHelpTopicLayoutMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:24:08Z" finished-at="2017-02-24T17:24:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ContextualHelpTest.styleForHelpTopicLayoutMobileTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:24:08Z" finished-at="2017-02-24T17:24:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:24:23Z" finished-at="2017-02-24T17:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:24:23Z" finished-at="2017-02-24T17:24:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ContextualHelpTest.styleForRoomHeaderMobileTest(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="styleForRoomHeaderMobileTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="styleForRoomHeaderMobileTest" duration-ms="6300" started-at="2017-02-24T17:24:23Z" data-provider="Contextual-Help Drawer padding-top wi/wo app-header test data" finished-at="2017-02-24T17:24:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[withAppHeader]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[http://localhost:8000/src/main/java/origamiV2/fixtures/contextualHelp/contextual-help.html]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[48px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- styleForRoomHeaderMobileTest -->
        <test-method status="PASS" signature="styleForRoomHeaderMobileTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="styleForRoomHeaderMobileTest" duration-ms="6108" started-at="2017-02-24T17:24:29Z" data-provider="Contextual-Help Drawer padding-top wi/wo app-header test data" finished-at="2017-02-24T17:24:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[withoutAppHeader]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[http://localhost:8000/src/main/java/origamiV2/fixtures/contextualHelp/contextual-help-woAppHeader.html]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- styleForRoomHeaderMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:24:29Z" finished-at="2017-02-24T17:24:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:24:29Z" finished-at="2017-02-24T17:24:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ContextualHelpTest.styleForRoomHeaderMobileTest(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:24:35Z" finished-at="2017-02-24T17:24:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:24:35Z" finished-at="2017-02-24T17:24:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ContextualHelpTest.styleForSVGMobileTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="styleForSVGMobileTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="styleForSVGMobileTest" duration-ms="9042" started-at="2017-02-24T17:24:35Z" data-provider="Verify SVG icon style test data" finished-at="2017-02-24T17:24:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[closeHelpIcon]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[14px]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[14px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[2px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- styleForSVGMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:24:44Z" finished-at="2017-02-24T17:24:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="styleForSVGMobileTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="styleForSVGMobileTest" duration-ms="8394" started-at="2017-02-24T17:24:44Z" data-provider="Verify SVG icon style test data" finished-at="2017-02-24T17:24:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[backToHelpTopicsIcon]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[14px]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[14px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[2px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- styleForSVGMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:24:44Z" finished-at="2017-02-24T17:24:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ContextualHelpTest.styleForSVGMobileTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:24:53Z" finished-at="2017-02-24T17:24:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="toggleContextualHelpDrawerMobileTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="toggleContextualHelpDrawerMobileTest" duration-ms="26416" started-at="2017-02-24T17:24:53Z" finished-at="2017-02-24T17:25:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toggleContextualHelpDrawerMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:24:53Z" finished-at="2017-02-24T17:24:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ContextualHelpTest.toggleContextualHelpDrawerMobileTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:25:19Z" finished-at="2017-02-24T17:25:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ContextualHelpTest.verifyContextualHelpDrawerMobileTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:25:19Z" finished-at="2017-02-24T17:25:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="verifyContextualHelpDrawerMobileTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="verifyContextualHelpDrawerMobileTest" duration-ms="23334" started-at="2017-02-24T17:25:19Z" finished-at="2017-02-24T17:25:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyContextualHelpDrawerMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:25:42Z" finished-at="2017-02-24T17:25:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="verifyContextualVisibilityImmuneToSetLanguageMobileTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="verifyContextualVisibilityImmuneToSetLanguageMobileTest" duration-ms="18342" started-at="2017-02-24T17:25:42Z" finished-at="2017-02-24T17:26:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyContextualVisibilityImmuneToSetLanguageMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:25:42Z" finished-at="2017-02-24T17:25:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ContextualHelpTest.verifyContextualVisibilityImmuneToSetLanguageMobileTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:26:01Z" finished-at="2017-02-24T17:26:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ContextualHelpTest.verifyOneHelpTopicDetailsMobileTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:26:01Z" finished-at="2017-02-24T17:26:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="verifyOneHelpTopicDetailsMobileTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="verifyOneHelpTopicDetailsMobileTest" duration-ms="8371" started-at="2017-02-24T17:26:01Z" finished-at="2017-02-24T17:26:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyOneHelpTopicDetailsMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:26:09Z" finished-at="2017-02-24T17:26:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:26:09Z" finished-at="2017-02-24T17:26:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ContextualHelpTest.verifyOpenCloseStateMobileTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyOpenCloseStateMobileTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="verifyOpenCloseStateMobileTest" duration-ms="13954" started-at="2017-02-24T17:26:09Z" finished-at="2017-02-24T17:26:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyOpenCloseStateMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:26:23Z" finished-at="2017-02-24T17:26:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="verifyXButtonMobileTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="verifyXButtonMobileTest" duration-ms="16100" started-at="2017-02-24T17:26:23Z" finished-at="2017-02-24T17:26:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyXButtonMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:26:23Z" finished-at="2017-02-24T17:26:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ContextualHelpTest.verifyXButtonMobileTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="tearDown(java.lang.String)[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="tearDown" is-config="true" duration-ms="1703" started-at="2017-02-24T17:26:39Z" finished-at="2017-02-24T17:26:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ContextualHelpTest@5bb21b69]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:26:39Z" finished-at="2017-02-24T17:26:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- origamiV2Tests.ContextualHelpTest -->
      <class name="elementsTests.GridTest">
        <test-method status="PASS" signature="setUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="setUp" is-config="true" duration-ms="64573" started-at="2017-02-24T17:10:23Z" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sauce]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[off]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OS X 10.11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[54.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[iOS]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[iPhone 6 Plus]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[9.3]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[safari]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[1.5.3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="beforeClass(java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeClass" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sauce]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 6 Plus]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="SKIP" signature="lgColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="lgColumnSpanMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:11:27Z" data-provider="LG Column Span Test Data" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Column1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: cont3-col-1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[81.984375px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.GridTest.lgColumnSpanMobileiOSTest(GridTest.java:580)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgColumnSpanMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.lgColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.lgColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="lgColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="lgColumnSpanMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:11:27Z" data-provider="LG Column Span Test Data" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Column3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: cont3-col-3]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[246px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.GridTest.lgColumnSpanMobileiOSTest(GridTest.java:580)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgColumnSpanMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.lgColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="lgColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="lgColumnSpanMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:11:27Z" data-provider="LG Column Span Test Data" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Column2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: cont3-col-2]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[164px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.GridTest.lgColumnSpanMobileiOSTest(GridTest.java:580)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgColumnSpanMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.lgColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="lgColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="lgColumnSpanMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:11:27Z" data-provider="LG Column Span Test Data" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Column4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: cont3-col-4]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[327.984375px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.GridTest.lgColumnSpanMobileiOSTest(GridTest.java:580)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgColumnSpanMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.lgColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="lgColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="lgColumnSpanMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:11:27Z" data-provider="LG Column Span Test Data" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Column5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: cont3-col-5]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[410px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.GridTest.lgColumnSpanMobileiOSTest(GridTest.java:580)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgColumnSpanMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.lgColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="lgColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="lgColumnSpanMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:11:27Z" data-provider="LG Column Span Test Data" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Column7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: cont3-col-7]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[573.984375px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.GridTest.lgColumnSpanMobileiOSTest(GridTest.java:580)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgColumnSpanMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.lgColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="lgColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="lgColumnSpanMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:11:27Z" data-provider="LG Column Span Test Data" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Column6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: cont3-col-6]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[492px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.GridTest.lgColumnSpanMobileiOSTest(GridTest.java:580)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgColumnSpanMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.lgColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="lgColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="lgColumnSpanMobileiOSTest" duration-ms="1" started-at="2017-02-24T17:11:27Z" data-provider="LG Column Span Test Data" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Column8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: cont3-col-8]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[656px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.GridTest.lgColumnSpanMobileiOSTest(GridTest.java:580)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgColumnSpanMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.lgColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="lgColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="lgColumnSpanMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:11:27Z" data-provider="LG Column Span Test Data" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Column10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: cont3-col-10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[819.984375px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.GridTest.lgColumnSpanMobileiOSTest(GridTest.java:580)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgColumnSpanMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.lgColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="lgColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="lgColumnSpanMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:11:27Z" data-provider="LG Column Span Test Data" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Column9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: cont3-col-9]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[738px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.GridTest.lgColumnSpanMobileiOSTest(GridTest.java:580)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgColumnSpanMobileiOSTest -->
        <test-method status="SKIP" signature="lgColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="lgColumnSpanMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:11:27Z" data-provider="LG Column Span Test Data" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Column11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: cont3-col-11]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[902px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.GridTest.lgColumnSpanMobileiOSTest(GridTest.java:580)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgColumnSpanMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.lgColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.lgColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="lgColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="lgColumnSpanMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:11:27Z" data-provider="LG Column Span Test Data" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Column12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: cont3-col-12]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[984px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.GridTest.lgColumnSpanMobileiOSTest(GridTest.java:580)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgColumnSpanMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="mdAndLGColumnPaddingMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="mdAndLGColumnPaddingMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:11:27Z" data-provider="iOS: MD and LG Column Padding Test Data" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[cont1-col]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.GridTest.mdAndLGColumnPaddingMobileiOSTest(GridTest.java:412)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdAndLGColumnPaddingMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.mdAndLGColumnPaddingMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.mdAndLGColumnPaddingMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="mdAndLGColumnPaddingMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="mdAndLGColumnPaddingMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:11:27Z" data-provider="iOS: MD and LG Column Padding Test Data" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[cont1-col]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.GridTest.mdAndLGColumnPaddingMobileiOSTest(GridTest.java:412)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdAndLGColumnPaddingMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.mdAndLGContainerPaddingMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.mdAndLGContainerPaddingMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="mdAndLGContainerPaddingMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="mdAndLGContainerPaddingMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:11:27Z" data-provider="iOS: MD and LG Container Padding Test Data" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: container1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[1024px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.GridTest.mdAndLGContainerPaddingMobileiOSTest(GridTest.java:387)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdAndLGContainerPaddingMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="mdAndLGContainerPaddingMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="mdAndLGContainerPaddingMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:11:27Z" data-provider="iOS: MD and LG Container Padding Test Data" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: container1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[768px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.GridTest.mdAndLGContainerPaddingMobileiOSTest(GridTest.java:387)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdAndLGContainerPaddingMobileiOSTest -->
        <test-method status="SKIP" signature="mdAndLGRowMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="mdAndLGRowMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:11:27Z" data-provider="MD and LG Row Test Data" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Container1-Row]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[cont1-row]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.GridTest.mdAndLGRowMobileiOSTest(GridTest.java:670)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdAndLGRowMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.mdAndLGRowMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.mdAndLGRowMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="mdAndLGRowMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="mdAndLGRowMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:11:27Z" data-provider="MD and LG Row Test Data" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Container3-Row]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[cont3-row]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.GridTest.mdAndLGRowMobileiOSTest(GridTest.java:670)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdAndLGRowMobileiOSTest -->
        <test-method status="SKIP" signature="mdAndLGRowMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="mdAndLGRowMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:11:27Z" data-provider="MD and LG Row Test Data" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Container2-Row]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[cont2-row]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.GridTest.mdAndLGRowMobileiOSTest(GridTest.java:670)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdAndLGRowMobileiOSTest -->
        <test-method status="SKIP" signature="mdAndLGRowMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="mdAndLGRowMobileiOSTest" duration-ms="1" started-at="2017-02-24T17:11:27Z" data-provider="MD and LG Row Test Data" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Container1-Row]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[cont1-row]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.GridTest.mdAndLGRowMobileiOSTest(GridTest.java:670)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdAndLGRowMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.mdAndLGRowMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.mdAndLGRowMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="mdAndLGRowMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="mdAndLGRowMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:11:27Z" data-provider="MD and LG Row Test Data" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Container2-Row]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[cont2-row]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.GridTest.mdAndLGRowMobileiOSTest(GridTest.java:670)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdAndLGRowMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.mdAndLGRowMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.mdAndLGRowMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="mdAndLGRowMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="mdAndLGRowMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:11:27Z" data-provider="MD and LG Row Test Data" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Container3-Row]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[cont3-row]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.GridTest.mdAndLGRowMobileiOSTest(GridTest.java:670)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdAndLGRowMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="mdColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="mdColumnSpanMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:11:27Z" data-provider="MD Column Span Test Data" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Column1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: cont3-col-1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[63.984375px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.GridTest.mdColumnSpanMobileiOSTest(GridTest.java:550)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdColumnSpanMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.mdColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.mdColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="mdColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="mdColumnSpanMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:11:27Z" data-provider="MD Column Span Test Data" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Column2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: cont3-col-2]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[128px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.GridTest.mdColumnSpanMobileiOSTest(GridTest.java:550)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdColumnSpanMobileiOSTest -->
        <test-method status="SKIP" signature="mdColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="mdColumnSpanMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:11:27Z" data-provider="MD Column Span Test Data" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Column3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: cont3-col-3]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[192px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.GridTest.mdColumnSpanMobileiOSTest(GridTest.java:550)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdColumnSpanMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.mdColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="mdColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="mdColumnSpanMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:11:27Z" data-provider="MD Column Span Test Data" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Column4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: cont3-col-4]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[255.984375px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.GridTest.mdColumnSpanMobileiOSTest(GridTest.java:550)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdColumnSpanMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.mdColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.mdColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="mdColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="mdColumnSpanMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:11:27Z" data-provider="MD Column Span Test Data" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Column5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: cont3-col-5]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[320px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.GridTest.mdColumnSpanMobileiOSTest(GridTest.java:550)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdColumnSpanMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.mdColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.mdColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="mdColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="mdColumnSpanMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:11:27Z" data-provider="MD Column Span Test Data" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Column6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: cont3-col-6]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[384px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.GridTest.mdColumnSpanMobileiOSTest(GridTest.java:550)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdColumnSpanMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="mdColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="mdColumnSpanMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:11:27Z" data-provider="MD Column Span Test Data" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Column7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: cont3-col-7]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[447.984375px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.GridTest.mdColumnSpanMobileiOSTest(GridTest.java:550)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdColumnSpanMobileiOSTest -->
        <test-method status="SKIP" signature="mdColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="mdColumnSpanMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:11:27Z" data-provider="MD Column Span Test Data" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Column9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: cont3-col-9]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[576px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.GridTest.mdColumnSpanMobileiOSTest(GridTest.java:550)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdColumnSpanMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.mdColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.mdColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.mdColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="mdColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="mdColumnSpanMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:11:27Z" data-provider="MD Column Span Test Data" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Column8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: cont3-col-8]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[512px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.GridTest.mdColumnSpanMobileiOSTest(GridTest.java:550)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdColumnSpanMobileiOSTest -->
        <test-method status="SKIP" signature="mdColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="mdColumnSpanMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:11:27Z" data-provider="MD Column Span Test Data" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Column10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: cont3-col-10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[639.984375px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.GridTest.mdColumnSpanMobileiOSTest(GridTest.java:550)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdColumnSpanMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.mdColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.mdColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="mdColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="mdColumnSpanMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:11:27Z" data-provider="MD Column Span Test Data" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Column11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: cont3-col-11]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[704px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.GridTest.mdColumnSpanMobileiOSTest(GridTest.java:550)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdColumnSpanMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="mdColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="mdColumnSpanMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:11:27Z" data-provider="MD Column Span Test Data" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Column12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: cont3-col-12]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[768px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.GridTest.mdColumnSpanMobileiOSTest(GridTest.java:550)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdColumnSpanMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.smAndMDColumnPaddingMobileAndroidTest(org.openqa.selenium.ScreenOrientation,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="smAndMDColumnPaddingMobileAndroidTest(org.openqa.selenium.ScreenOrientation, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="smAndMDColumnPaddingMobileAndroidTest" duration-ms="0" started-at="2017-02-24T17:11:27Z" data-provider="SM and MD Column Padding Test Data" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[cont1-col]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'Google Nexus 7 HD Emulator']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'Google Nexus 7 HD Emulator'
	at elementsTests.GridTest.smAndMDColumnPaddingMobileAndroidTest(GridTest.java:808)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smAndMDColumnPaddingMobileAndroidTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.smAndMDColumnPaddingMobileAndroidTest(org.openqa.selenium.ScreenOrientation,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="smAndMDColumnPaddingMobileAndroidTest(org.openqa.selenium.ScreenOrientation, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="smAndMDColumnPaddingMobileAndroidTest" duration-ms="0" started-at="2017-02-24T17:11:27Z" data-provider="SM and MD Column Padding Test Data" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[cont1-col]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'Google Nexus 7 HD Emulator']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'Google Nexus 7 HD Emulator'
	at elementsTests.GridTest.smAndMDColumnPaddingMobileAndroidTest(GridTest.java:808)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smAndMDColumnPaddingMobileAndroidTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="smAndMDContainerPaddingMobileAndroidTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="smAndMDContainerPaddingMobileAndroidTest" duration-ms="0" started-at="2017-02-24T17:11:27Z" data-provider="Android: SM and MD Container Padding Test Data" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: container1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[601px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'Google Nexus 7 HD Emulator']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'Google Nexus 7 HD Emulator'
	at elementsTests.GridTest.smAndMDContainerPaddingMobileAndroidTest(GridTest.java:782)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smAndMDContainerPaddingMobileAndroidTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.smAndMDContainerPaddingMobileAndroidTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.smAndMDContainerPaddingMobileAndroidTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="smAndMDContainerPaddingMobileAndroidTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="smAndMDContainerPaddingMobileAndroidTest" duration-ms="0" started-at="2017-02-24T17:11:27Z" data-provider="Android: SM and MD Container Padding Test Data" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: container1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[962px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'Google Nexus 7 HD Emulator']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'Google Nexus 7 HD Emulator'
	at elementsTests.GridTest.smAndMDContainerPaddingMobileAndroidTest(GridTest.java:782)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smAndMDContainerPaddingMobileAndroidTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:27Z" finished-at="2017-02-24T17:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.smColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="smColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="smColumnSpanMobileiOSTest" duration-ms="3726" started-at="2017-02-24T17:11:27Z" data-provider="SM Column Span Test Data" finished-at="2017-02-24T17:11:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Column1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: cont3-col-1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[59.65625px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smColumnSpanMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:11:31Z" finished-at="2017-02-24T17:11:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:31Z" finished-at="2017-02-24T17:11:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.smColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="smColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="smColumnSpanMobileiOSTest" duration-ms="3144" started-at="2017-02-24T17:11:31Z" data-provider="SM Column Span Test Data" finished-at="2017-02-24T17:11:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Column2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: cont3-col-2]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[119.328125px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smColumnSpanMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:34Z" finished-at="2017-02-24T17:11:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.smColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:34Z" finished-at="2017-02-24T17:11:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="smColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="smColumnSpanMobileiOSTest" duration-ms="2921" started-at="2017-02-24T17:11:34Z" data-provider="SM Column Span Test Data" finished-at="2017-02-24T17:11:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Column3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: cont3-col-3]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[179px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smColumnSpanMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:37Z" finished-at="2017-02-24T17:11:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:11:37Z" finished-at="2017-02-24T17:11:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.smColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="smColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="smColumnSpanMobileiOSTest" duration-ms="3107" started-at="2017-02-24T17:11:37Z" data-provider="SM Column Span Test Data" finished-at="2017-02-24T17:11:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Column4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: cont3-col-4]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[238.65625px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smColumnSpanMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:40Z" finished-at="2017-02-24T17:11:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:11:40Z" finished-at="2017-02-24T17:11:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.smColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="smColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="smColumnSpanMobileiOSTest" duration-ms="2890" started-at="2017-02-24T17:11:40Z" data-provider="SM Column Span Test Data" finished-at="2017-02-24T17:11:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Column5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: cont3-col-5]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[298.328125px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smColumnSpanMobileiOSTest -->
        <test-method status="PASS" signature="smColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="smColumnSpanMobileiOSTest" duration-ms="3015" started-at="2017-02-24T17:11:43Z" data-provider="SM Column Span Test Data" finished-at="2017-02-24T17:11:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Column6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: cont3-col-6]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[358px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smColumnSpanMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:43Z" finished-at="2017-02-24T17:11:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.smColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:43Z" finished-at="2017-02-24T17:11:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:11:46Z" finished-at="2017-02-24T17:11:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:46Z" finished-at="2017-02-24T17:11:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.smColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="smColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="smColumnSpanMobileiOSTest" duration-ms="2803" started-at="2017-02-24T17:11:46Z" data-provider="SM Column Span Test Data" finished-at="2017-02-24T17:11:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Column7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: cont3-col-7]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[417.65625px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smColumnSpanMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:11:49Z" finished-at="2017-02-24T17:11:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:49Z" finished-at="2017-02-24T17:11:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.smColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="smColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="smColumnSpanMobileiOSTest" duration-ms="3028" started-at="2017-02-24T17:11:49Z" data-provider="SM Column Span Test Data" finished-at="2017-02-24T17:11:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Column8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: cont3-col-8]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[477.328125px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smColumnSpanMobileiOSTest -->
        <test-method status="PASS" signature="smColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="smColumnSpanMobileiOSTest" duration-ms="2817" started-at="2017-02-24T17:11:52Z" data-provider="SM Column Span Test Data" finished-at="2017-02-24T17:11:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Column9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: cont3-col-9]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[537px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smColumnSpanMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:52Z" finished-at="2017-02-24T17:11:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:52Z" finished-at="2017-02-24T17:11:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.smColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:55Z" finished-at="2017-02-24T17:11:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.smColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="smColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="smColumnSpanMobileiOSTest" duration-ms="3146" started-at="2017-02-24T17:11:55Z" data-provider="SM Column Span Test Data" finished-at="2017-02-24T17:11:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Column10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: cont3-col-10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[596.65625px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smColumnSpanMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:55Z" finished-at="2017-02-24T17:11:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="smColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="smColumnSpanMobileiOSTest" duration-ms="3116" started-at="2017-02-24T17:11:58Z" data-provider="SM Column Span Test Data" finished-at="2017-02-24T17:12:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Column11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: cont3-col-11]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[656.328125px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smColumnSpanMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:58Z" finished-at="2017-02-24T17:11:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:11:58Z" finished-at="2017-02-24T17:11:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.smColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="smColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="smColumnSpanMobileiOSTest" duration-ms="2693" started-at="2017-02-24T17:12:01Z" data-provider="SM Column Span Test Data" finished-at="2017-02-24T17:12:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Column12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: cont3-col-12]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[716px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smColumnSpanMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:01Z" finished-at="2017-02-24T17:12:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.smColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:01Z" finished-at="2017-02-24T17:12:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:12:04Z" finished-at="2017-02-24T17:12:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:04Z" finished-at="2017-02-24T17:12:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xlgColumnPaddingMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="xlgColumnPaddingMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="xlgColumnPaddingMobileiOSTest" duration-ms="1" started-at="2017-02-24T17:12:04Z" data-provider="iOS: XLG Column Padding Test Data" finished-at="2017-02-24T17:12:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[cont1-col]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Pro']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Pro'
	at elementsTests.GridTest.xlgColumnPaddingMobileiOSTest(GridTest.java:460)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlgColumnPaddingMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:04Z" finished-at="2017-02-24T17:12:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:04Z" finished-at="2017-02-24T17:12:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xlgColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="xlgColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="xlgColumnSpanMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:12:04Z" data-provider="XLG Column Span Test Data" finished-at="2017-02-24T17:12:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Column1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: cont3-col-1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[91.65625px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.GridTest.xlgColumnSpanMobileiOSTest(GridTest.java:609)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlgColumnSpanMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:04Z" finished-at="2017-02-24T17:12:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:12:04Z" finished-at="2017-02-24T17:12:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xlgColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:04Z" finished-at="2017-02-24T17:12:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xlgColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:04Z" finished-at="2017-02-24T17:12:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="xlgColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="xlgColumnSpanMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:12:04Z" data-provider="XLG Column Span Test Data" finished-at="2017-02-24T17:12:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Column2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: cont3-col-2]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[183.328125px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.GridTest.xlgColumnSpanMobileiOSTest(GridTest.java:609)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlgColumnSpanMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:12:04Z" finished-at="2017-02-24T17:12:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xlgColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:04Z" finished-at="2017-02-24T17:12:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xlgColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:04Z" finished-at="2017-02-24T17:12:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="xlgColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="xlgColumnSpanMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:12:04Z" data-provider="XLG Column Span Test Data" finished-at="2017-02-24T17:12:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Column3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: cont3-col-3]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[275px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.GridTest.xlgColumnSpanMobileiOSTest(GridTest.java:609)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlgColumnSpanMobileiOSTest -->
        <test-method status="SKIP" signature="xlgColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="xlgColumnSpanMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:12:04Z" data-provider="XLG Column Span Test Data" finished-at="2017-02-24T17:12:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Column4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: cont3-col-4]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[366.65625px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.GridTest.xlgColumnSpanMobileiOSTest(GridTest.java:609)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlgColumnSpanMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:04Z" finished-at="2017-02-24T17:12:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="xlgColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="xlgColumnSpanMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:12:04Z" data-provider="XLG Column Span Test Data" finished-at="2017-02-24T17:12:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Column5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: cont3-col-5]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[458.328125px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.GridTest.xlgColumnSpanMobileiOSTest(GridTest.java:609)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlgColumnSpanMobileiOSTest -->
        <test-method status="SKIP" signature="xlgColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="xlgColumnSpanMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:12:04Z" data-provider="XLG Column Span Test Data" finished-at="2017-02-24T17:12:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Column6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: cont3-col-6]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[550px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.GridTest.xlgColumnSpanMobileiOSTest(GridTest.java:609)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlgColumnSpanMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:12:04Z" finished-at="2017-02-24T17:12:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xlgColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:04Z" finished-at="2017-02-24T17:12:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:04Z" finished-at="2017-02-24T17:12:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xlgColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:04Z" finished-at="2017-02-24T17:12:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="xlgColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="xlgColumnSpanMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:12:04Z" data-provider="XLG Column Span Test Data" finished-at="2017-02-24T17:12:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Column7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: cont3-col-7]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[641.65625px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.GridTest.xlgColumnSpanMobileiOSTest(GridTest.java:609)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlgColumnSpanMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:04Z" finished-at="2017-02-24T17:12:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xlgColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:04Z" finished-at="2017-02-24T17:12:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:12:04Z" finished-at="2017-02-24T17:12:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xlgColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="xlgColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="xlgColumnSpanMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:12:04Z" data-provider="XLG Column Span Test Data" finished-at="2017-02-24T17:12:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Column8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: cont3-col-8]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[733.328125px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.GridTest.xlgColumnSpanMobileiOSTest(GridTest.java:609)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlgColumnSpanMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:04Z" finished-at="2017-02-24T17:12:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="xlgColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="xlgColumnSpanMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:12:04Z" data-provider="XLG Column Span Test Data" finished-at="2017-02-24T17:12:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Column9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: cont3-col-9]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[825px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.GridTest.xlgColumnSpanMobileiOSTest(GridTest.java:609)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlgColumnSpanMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:04Z" finished-at="2017-02-24T17:12:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:04Z" finished-at="2017-02-24T17:12:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xlgColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="xlgColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="xlgColumnSpanMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:12:04Z" data-provider="XLG Column Span Test Data" finished-at="2017-02-24T17:12:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Column10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: cont3-col-10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[916.65625px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.GridTest.xlgColumnSpanMobileiOSTest(GridTest.java:609)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlgColumnSpanMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:12:04Z" finished-at="2017-02-24T17:12:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xlgColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:04Z" finished-at="2017-02-24T17:12:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="xlgColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="xlgColumnSpanMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:12:04Z" data-provider="XLG Column Span Test Data" finished-at="2017-02-24T17:12:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Column11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: cont3-col-11]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1008.328125px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.GridTest.xlgColumnSpanMobileiOSTest(GridTest.java:609)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlgColumnSpanMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:04Z" finished-at="2017-02-24T17:12:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:04Z" finished-at="2017-02-24T17:12:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xlgColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="xlgColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="xlgColumnSpanMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:12:04Z" data-provider="XLG Column Span Test Data" finished-at="2017-02-24T17:12:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Column12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: cont3-col-12]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1100px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Air']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Air'
	at elementsTests.GridTest.xlgColumnSpanMobileiOSTest(GridTest.java:609)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlgColumnSpanMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:04Z" finished-at="2017-02-24T17:12:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:12:04Z" finished-at="2017-02-24T17:12:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xlgContainerPaddingMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="xlgContainerPaddingMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="xlgContainerPaddingMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:12:04Z" data-provider="iOS: XLG Container Padding Test Data" finished-at="2017-02-24T17:12:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: container1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[1336px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Pro']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Pro'
	at elementsTests.GridTest.xlgContainerPaddingMobileiOSTest(GridTest.java:436)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlgContainerPaddingMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:04Z" finished-at="2017-02-24T17:12:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="xlgRowMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="xlgRowMobileiOSTest" duration-ms="1" started-at="2017-02-24T17:12:04Z" data-provider="XLG Row Test Data" finished-at="2017-02-24T17:12:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Container2-Row]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[cont2-row]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Pro']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Pro'
	at elementsTests.GridTest.xlgRowMobileiOSTest(GridTest.java:704)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlgRowMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:04Z" finished-at="2017-02-24T17:12:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xlgRowMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:04Z" finished-at="2017-02-24T17:12:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:04Z" finished-at="2017-02-24T17:12:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xlgRowMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="xlgRowMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="xlgRowMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:12:04Z" data-provider="XLG Row Test Data" finished-at="2017-02-24T17:12:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Container1-Row]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[cont1-row]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Pro']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Pro'
	at elementsTests.GridTest.xlgRowMobileiOSTest(GridTest.java:704)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlgRowMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:04Z" finished-at="2017-02-24T17:12:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xlgRowMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="xlgRowMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="xlgRowMobileiOSTest" duration-ms="0" started-at="2017-02-24T17:12:04Z" data-provider="XLG Row Test Data" finished-at="2017-02-24T17:12:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Container3-Row]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[cont3-row]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'iPad Pro']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'iPad Pro'
	at elementsTests.GridTest.xlgRowMobileiOSTest(GridTest.java:704)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlgRowMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:04Z" finished-at="2017-02-24T17:12:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:04Z" finished-at="2017-02-24T17:12:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="xsAndSMColumnPaddingMobileAndroidTest(org.openqa.selenium.ScreenOrientation, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="xsAndSMColumnPaddingMobileAndroidTest" duration-ms="0" started-at="2017-02-24T17:12:04Z" data-provider="XS and SM Column Padding Test Data" finished-at="2017-02-24T17:12:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[cont1-col]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'LG Nexus 4 Emulator']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'LG Nexus 4 Emulator'
	at elementsTests.GridTest.xsAndSMColumnPaddingMobileAndroidTest(GridTest.java:757)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsAndSMColumnPaddingMobileAndroidTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:04Z" finished-at="2017-02-24T17:12:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="xsAndSMColumnPaddingMobileAndroidTest(org.openqa.selenium.ScreenOrientation, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="xsAndSMColumnPaddingMobileAndroidTest" duration-ms="0" started-at="2017-02-24T17:12:04Z" data-provider="XS and SM Column Padding Test Data" finished-at="2017-02-24T17:12:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[cont1-col]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[5px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'LG Nexus 4 Emulator']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'LG Nexus 4 Emulator'
	at elementsTests.GridTest.xsAndSMColumnPaddingMobileAndroidTest(GridTest.java:757)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsAndSMColumnPaddingMobileAndroidTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:04Z" finished-at="2017-02-24T17:12:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xsAndSMColumnPaddingMobileAndroidTest(org.openqa.selenium.ScreenOrientation,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:04Z" finished-at="2017-02-24T17:12:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xsAndSMColumnPaddingMobileAndroidTest(org.openqa.selenium.ScreenOrientation,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:04Z" finished-at="2017-02-24T17:12:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="xsAndSMColumnPaddingMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="xsAndSMColumnPaddingMobileiOSTest" duration-ms="29360" started-at="2017-02-24T17:12:04Z" data-provider="XS and SM Column Padding Test Data" finished-at="2017-02-24T17:12:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[cont1-col]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[5px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsAndSMColumnPaddingMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:04Z" finished-at="2017-02-24T17:12:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xsAndSMColumnPaddingMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:33Z" finished-at="2017-02-24T17:12:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="xsAndSMColumnPaddingMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="xsAndSMColumnPaddingMobileiOSTest" duration-ms="29893" started-at="2017-02-24T17:12:33Z" data-provider="XS and SM Column Padding Test Data" finished-at="2017-02-24T17:13:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[cont1-col]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsAndSMColumnPaddingMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:12:33Z" finished-at="2017-02-24T17:12:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xsAndSMColumnPaddingMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:13:03Z" finished-at="2017-02-24T17:13:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:13:03Z" finished-at="2017-02-24T17:13:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:03Z" finished-at="2017-02-24T17:13:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xsAndSMContainerPaddingMobileAndroidTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="xsAndSMContainerPaddingMobileAndroidTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="xsAndSMContainerPaddingMobileAndroidTest" duration-ms="0" started-at="2017-02-24T17:13:03Z" data-provider="Android: XS and SM Container Padding Test Data" finished-at="2017-02-24T17:13:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: container1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[598px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'LG Nexus 4 Emulator']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'LG Nexus 4 Emulator'
	at elementsTests.GridTest.xsAndSMContainerPaddingMobileAndroidTest(GridTest.java:738)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsAndSMContainerPaddingMobileAndroidTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:03Z" finished-at="2017-02-24T17:13:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xsAndSMContainerPaddingMobileAndroidTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="xsAndSMContainerPaddingMobileAndroidTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="xsAndSMContainerPaddingMobileAndroidTest" duration-ms="0" started-at="2017-02-24T17:13:03Z" data-provider="Android: XS and SM Container Padding Test Data" finished-at="2017-02-24T17:13:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: container1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[384px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'LG Nexus 4 Emulator']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'LG Nexus 4 Emulator'
	at elementsTests.GridTest.xsAndSMContainerPaddingMobileAndroidTest(GridTest.java:738)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsAndSMContainerPaddingMobileAndroidTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:03Z" finished-at="2017-02-24T17:13:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:03Z" finished-at="2017-02-24T17:13:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xsAndSMContainerPaddingMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xsAndSMContainerPaddingMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="xsAndSMContainerPaddingMobileiOSTest" duration-ms="5726" started-at="2017-02-24T17:13:03Z" data-provider="iOS: XS and SM Container Padding Test Data" finished-at="2017-02-24T17:13:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: container1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[414px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsAndSMContainerPaddingMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:13:09Z" finished-at="2017-02-24T17:13:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:09Z" finished-at="2017-02-24T17:13:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xsAndSMContainerPaddingMobileiOSTest(org.openqa.selenium.ScreenOrientation,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xsAndSMContainerPaddingMobileiOSTest(org.openqa.selenium.ScreenOrientation, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="xsAndSMContainerPaddingMobileiOSTest" duration-ms="5398" started-at="2017-02-24T17:13:09Z" data-provider="iOS: XS and SM Container Padding Test Data" finished-at="2017-02-24T17:13:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: container1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[736px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsAndSMContainerPaddingMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:14Z" finished-at="2017-02-24T17:13:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="xsAndSMRowMobileAndroidTest(org.openqa.selenium.ScreenOrientation, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="xsAndSMRowMobileAndroidTest" duration-ms="0" started-at="2017-02-24T17:13:14Z" data-provider="XS and SM Row Test Data" finished-at="2017-02-24T17:13:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Container1-Row]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[cont1-row]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-5px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-5px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'LG Nexus 4 Emulator']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'LG Nexus 4 Emulator'
	at elementsTests.GridTest.xsAndSMRowMobileAndroidTest(GridTest.java:825)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsAndSMRowMobileAndroidTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:14Z" finished-at="2017-02-24T17:13:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:14Z" finished-at="2017-02-24T17:13:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xsAndSMRowMobileAndroidTest(org.openqa.selenium.ScreenOrientation,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:13:14Z" finished-at="2017-02-24T17:13:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xsAndSMRowMobileAndroidTest(org.openqa.selenium.ScreenOrientation,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:14Z" finished-at="2017-02-24T17:13:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xsAndSMRowMobileAndroidTest(org.openqa.selenium.ScreenOrientation,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:14Z" finished-at="2017-02-24T17:13:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="xsAndSMRowMobileAndroidTest(org.openqa.selenium.ScreenOrientation, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="xsAndSMRowMobileAndroidTest" duration-ms="1" started-at="2017-02-24T17:13:14Z" data-provider="XS and SM Row Test Data" finished-at="2017-02-24T17:13:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Container1-Row]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[cont1-row]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-10px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-10px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'LG Nexus 4 Emulator']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'LG Nexus 4 Emulator'
	at elementsTests.GridTest.xsAndSMRowMobileAndroidTest(GridTest.java:825)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsAndSMRowMobileAndroidTest -->
        <test-method status="SKIP" signature="xsAndSMRowMobileAndroidTest(org.openqa.selenium.ScreenOrientation, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="xsAndSMRowMobileAndroidTest" duration-ms="0" started-at="2017-02-24T17:13:14Z" data-provider="XS and SM Row Test Data" finished-at="2017-02-24T17:13:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Container3-Row]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[cont3-row]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-5px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-5px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'LG Nexus 4 Emulator']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'LG Nexus 4 Emulator'
	at elementsTests.GridTest.xsAndSMRowMobileAndroidTest(GridTest.java:825)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsAndSMRowMobileAndroidTest -->
        <test-method status="SKIP" signature="xsAndSMRowMobileAndroidTest(org.openqa.selenium.ScreenOrientation, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="xsAndSMRowMobileAndroidTest" duration-ms="0" started-at="2017-02-24T17:13:14Z" data-provider="XS and SM Row Test Data" finished-at="2017-02-24T17:13:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Container2-Row]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[cont2-row]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-5px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-5px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'LG Nexus 4 Emulator']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'LG Nexus 4 Emulator'
	at elementsTests.GridTest.xsAndSMRowMobileAndroidTest(GridTest.java:825)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsAndSMRowMobileAndroidTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:14Z" finished-at="2017-02-24T17:13:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xsAndSMRowMobileAndroidTest(org.openqa.selenium.ScreenOrientation,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:14Z" finished-at="2017-02-24T17:13:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="xsAndSMRowMobileAndroidTest(org.openqa.selenium.ScreenOrientation, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="xsAndSMRowMobileAndroidTest" duration-ms="0" started-at="2017-02-24T17:13:14Z" data-provider="XS and SM Row Test Data" finished-at="2017-02-24T17:13:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Container2-Row]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[cont2-row]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-10px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-10px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'LG Nexus 4 Emulator']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'LG Nexus 4 Emulator'
	at elementsTests.GridTest.xsAndSMRowMobileAndroidTest(GridTest.java:825)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsAndSMRowMobileAndroidTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:14Z" finished-at="2017-02-24T17:13:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xsAndSMRowMobileAndroidTest(org.openqa.selenium.ScreenOrientation,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="xsAndSMRowMobileAndroidTest(org.openqa.selenium.ScreenOrientation, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="xsAndSMRowMobileAndroidTest" duration-ms="0" started-at="2017-02-24T17:13:14Z" data-provider="XS and SM Row Test Data" finished-at="2017-02-24T17:13:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Container3-Row]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[cont3-row]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-10px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-10px]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[To run this test specify mobile device as 'LG Nexus 4 Emulator']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: To run this test specify mobile device as 'LG Nexus 4 Emulator'
	at elementsTests.GridTest.xsAndSMRowMobileAndroidTest(GridTest.java:825)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsAndSMRowMobileAndroidTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:14Z" finished-at="2017-02-24T17:13:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:14Z" finished-at="2017-02-24T17:13:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xsAndSMRowMobileAndroidTest(org.openqa.selenium.ScreenOrientation,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:14Z" finished-at="2017-02-24T17:13:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:13:14Z" finished-at="2017-02-24T17:13:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="xsAndSMRowMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="xsAndSMRowMobileiOSTest" duration-ms="4338" started-at="2017-02-24T17:13:14Z" data-provider="XS and SM Row Test Data" finished-at="2017-02-24T17:13:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Container1-Row]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[cont1-row]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-5px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-5px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsAndSMRowMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:14Z" finished-at="2017-02-24T17:13:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xsAndSMRowMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:13:18Z" finished-at="2017-02-24T17:13:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="xsAndSMRowMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="xsAndSMRowMobileiOSTest" duration-ms="3768" started-at="2017-02-24T17:13:18Z" data-provider="XS and SM Row Test Data" finished-at="2017-02-24T17:13:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Container2-Row]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[cont2-row]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-5px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-5px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsAndSMRowMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:18Z" finished-at="2017-02-24T17:13:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xsAndSMRowMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xsAndSMRowMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="xsAndSMRowMobileiOSTest" duration-ms="28266" started-at="2017-02-24T17:13:22Z" data-provider="XS and SM Row Test Data" finished-at="2017-02-24T17:13:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Container3-Row]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[cont3-row]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-5px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-5px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsAndSMRowMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:22Z" finished-at="2017-02-24T17:13:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xsAndSMRowMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:22Z" finished-at="2017-02-24T17:13:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:13:50Z" finished-at="2017-02-24T17:13:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:50Z" finished-at="2017-02-24T17:13:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xsAndSMRowMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xsAndSMRowMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="xsAndSMRowMobileiOSTest" duration-ms="4206" started-at="2017-02-24T17:13:50Z" data-provider="XS and SM Row Test Data" finished-at="2017-02-24T17:13:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Container1-Row]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[cont1-row]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-10px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-10px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsAndSMRowMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:55Z" finished-at="2017-02-24T17:13:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="xsAndSMRowMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="xsAndSMRowMobileiOSTest" duration-ms="3600" started-at="2017-02-24T17:13:55Z" data-provider="XS and SM Row Test Data" finished-at="2017-02-24T17:13:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Container2-Row]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[cont2-row]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-10px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-10px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsAndSMRowMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:55Z" finished-at="2017-02-24T17:13:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xsAndSMRowMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:13:58Z" finished-at="2017-02-24T17:13:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="xsAndSMRowMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="xsAndSMRowMobileiOSTest" duration-ms="29906" started-at="2017-02-24T17:13:58Z" data-provider="XS and SM Row Test Data" finished-at="2017-02-24T17:14:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LANDSCAPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Container3-Row]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[cont3-row]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-10px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-10px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsAndSMRowMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:13:58Z" finished-at="2017-02-24T17:13:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xsAndSMRowMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:14:28Z" finished-at="2017-02-24T17:14:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:14:28Z" finished-at="2017-02-24T17:14:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xsColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xsColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="xsColumnSpanMobileiOSTest" duration-ms="2846" started-at="2017-02-24T17:14:28Z" data-provider="XS Column Span Test Data" finished-at="2017-02-24T17:14:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Column1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: cont3-col-1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[33.65625px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsColumnSpanMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:14:31Z" finished-at="2017-02-24T17:14:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:14:31Z" finished-at="2017-02-24T17:14:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xsColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xsColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="xsColumnSpanMobileiOSTest" duration-ms="2581" started-at="2017-02-24T17:14:31Z" data-provider="XS Column Span Test Data" finished-at="2017-02-24T17:14:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Column2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: cont3-col-2]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[67.328125px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsColumnSpanMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:14:34Z" finished-at="2017-02-24T17:14:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="xsColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="xsColumnSpanMobileiOSTest" duration-ms="2594" started-at="2017-02-24T17:14:34Z" data-provider="XS Column Span Test Data" finished-at="2017-02-24T17:14:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Column3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: cont3-col-3]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[101px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsColumnSpanMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:14:34Z" finished-at="2017-02-24T17:14:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xsColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:14:36Z" finished-at="2017-02-24T17:14:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:14:36Z" finished-at="2017-02-24T17:14:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xsColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xsColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="xsColumnSpanMobileiOSTest" duration-ms="2617" started-at="2017-02-24T17:14:36Z" data-provider="XS Column Span Test Data" finished-at="2017-02-24T17:14:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Column4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: cont3-col-4]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[134.65625px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsColumnSpanMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:14:39Z" finished-at="2017-02-24T17:14:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="xsColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="xsColumnSpanMobileiOSTest" duration-ms="2617" started-at="2017-02-24T17:14:39Z" data-provider="XS Column Span Test Data" finished-at="2017-02-24T17:14:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Column5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: cont3-col-5]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[168.328125px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsColumnSpanMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:14:39Z" finished-at="2017-02-24T17:14:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xsColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:14:41Z" finished-at="2017-02-24T17:14:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:14:41Z" finished-at="2017-02-24T17:14:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xsColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xsColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="xsColumnSpanMobileiOSTest" duration-ms="2514" started-at="2017-02-24T17:14:41Z" data-provider="XS Column Span Test Data" finished-at="2017-02-24T17:14:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Column6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: cont3-col-6]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[202px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsColumnSpanMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:14:44Z" finished-at="2017-02-24T17:14:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="xsColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="xsColumnSpanMobileiOSTest" duration-ms="2650" started-at="2017-02-24T17:14:44Z" data-provider="XS Column Span Test Data" finished-at="2017-02-24T17:14:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Column7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: cont3-col-7]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[235.65625px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsColumnSpanMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:14:44Z" finished-at="2017-02-24T17:14:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xsColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:14:47Z" finished-at="2017-02-24T17:14:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:14:47Z" finished-at="2017-02-24T17:14:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xsColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xsColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="xsColumnSpanMobileiOSTest" duration-ms="2601" started-at="2017-02-24T17:14:47Z" data-provider="XS Column Span Test Data" finished-at="2017-02-24T17:14:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Column8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: cont3-col-8]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[269.328125px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsColumnSpanMobileiOSTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:14:49Z" finished-at="2017-02-24T17:14:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="xsColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="xsColumnSpanMobileiOSTest" duration-ms="2535" started-at="2017-02-24T17:14:49Z" data-provider="XS Column Span Test Data" finished-at="2017-02-24T17:14:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Column9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: cont3-col-9]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[303px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsColumnSpanMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:14:49Z" finished-at="2017-02-24T17:14:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xsColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xsColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="xsColumnSpanMobileiOSTest" duration-ms="2567" started-at="2017-02-24T17:14:52Z" data-provider="XS Column Span Test Data" finished-at="2017-02-24T17:14:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Column10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: cont3-col-10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[336.65625px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsColumnSpanMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:14:52Z" finished-at="2017-02-24T17:14:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xsColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:14:52Z" finished-at="2017-02-24T17:14:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:14:54Z" finished-at="2017-02-24T17:14:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:14:54Z" finished-at="2017-02-24T17:14:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xsColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xsColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="xsColumnSpanMobileiOSTest" duration-ms="2643" started-at="2017-02-24T17:14:54Z" data-provider="XS Column Span Test Data" finished-at="2017-02-24T17:14:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Column11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: cont3-col-11]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[370.328125px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsColumnSpanMobileiOSTest -->
        <test-method status="PASS" signature="xsColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation, java.lang.String, org.openqa.selenium.By, java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="xsColumnSpanMobileiOSTest" duration-ms="2570" started-at="2017-02-24T17:14:57Z" data-provider="XS Column Span Test Data" finished-at="2017-02-24T17:14:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PORTRAIT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Column12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: cont3-col-12]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[404px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsColumnSpanMobileiOSTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:14:57Z" finished-at="2017-02-24T17:14:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xsColumnSpanMobileiOSTest(org.openqa.selenium.ScreenOrientation,java.lang.String,org.openqa.selenium.By,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:14:57Z" finished-at="2017-02-24T17:14:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:14:59Z" finished-at="2017-02-24T17:14:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="tearDown(java.lang.String)[pri:0, instance:elementsTests.GridTest@3e57cd70]" name="tearDown" is-config="true" duration-ms="798" started-at="2017-02-24T17:14:59Z" finished-at="2017-02-24T17:15:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- elementsTests.GridTest -->
    </test> <!-- Elements and Origami Tests -->
    <test name="Origami - App Header Tests" duration-ms="417362" started-at="2017-02-24T17:32:08Z" finished-at="2017-02-24T17:39:06Z">
      <class name="origamiV2Tests.AppHeaderTest">
        <test-method status="PASS" signature="setUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="setUp" is-config="true" duration-ms="155624" started-at="2017-02-24T17:32:08Z" finished-at="2017-02-24T17:34:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sauce]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[off]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OS X 10.11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[54.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[iOS]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[iPhone 6 Plus]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[9.3]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[safari]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[1.5.3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="beforeClass(java.lang.String)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="beforeClass" is-config="true" duration-ms="741" started-at="2017-02-24T17:34:44Z" finished-at="2017-02-24T17:34:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:34:45Z" finished-at="2017-02-24T17:34:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.addCourseItemsForCourseModeMobileTest(java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addCourseItemsForCourseModeMobileTest(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="addCourseItemsForCourseModeMobileTest" duration-ms="7808" started-at="2017-02-24T17:34:45Z" data-provider="CourseMode-Add Course items" finished-at="2017-02-24T17:34:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"text":"Performance","href":"https://example.com/performance","active":false}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addCourseItemsForCourseModeMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:34:52Z" finished-at="2017-02-24T17:34:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:34:52Z" finished-at="2017-02-24T17:34:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.addCourseItemsForCourseModeMobileTest(java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addCourseItemsForCourseModeMobileTest(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="addCourseItemsForCourseModeMobileTest" duration-ms="7661" started-at="2017-02-24T17:34:52Z" data-provider="CourseMode-Add Course items" finished-at="2017-02-24T17:35:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"text":"Performance","href":"https://example.com/performance","active":false},{"text":"Assessment","href":"https://example.com/assessments","active":false}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addCourseItemsForCourseModeMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:35:00Z" finished-at="2017-02-24T17:35:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:35:00Z" finished-at="2017-02-24T17:35:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.addCourseItemsForCourseModeMobileTest(java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addCourseItemsForCourseModeMobileTest(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="addCourseItemsForCourseModeMobileTest" duration-ms="7595" started-at="2017-02-24T17:35:00Z" data-provider="CourseMode-Add Course items" finished-at="2017-02-24T17:35:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"text":"Performance","href":"https://example.com/performance","active":false},{"text":"Assessment","href":"https://example.com/assessments","active":false},{"text":"Score","href":"https://example.com/score","active":false}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addCourseItemsForCourseModeMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:35:08Z" finished-at="2017-02-24T17:35:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:35:08Z" finished-at="2017-02-24T17:35:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.addCoursesForBasicModeMobileTest(java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addCoursesForBasicModeMobileTest(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="addCoursesForBasicModeMobileTest" duration-ms="6236" started-at="2017-02-24T17:35:08Z" data-provider="BasicMode-Add Course" finished-at="2017-02-24T17:35:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"text": "Maths", "href":"https://example.com/maths"}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addCoursesForBasicModeMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:35:14Z" finished-at="2017-02-24T17:35:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:35:14Z" finished-at="2017-02-24T17:35:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.addCoursesForBasicModeMobileTest(java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addCoursesForBasicModeMobileTest(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="addCoursesForBasicModeMobileTest" duration-ms="6127" started-at="2017-02-24T17:35:14Z" data-provider="BasicMode-Add Course" finished-at="2017-02-24T17:35:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"text": "Maths", "href":"https://example.com/maths"},{"text": "Biology", "href":"https://example.com/biology"},{"text": "English", "href":"https://example.com/english"}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addCoursesForBasicModeMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:35:20Z" finished-at="2017-02-24T17:35:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:35:20Z" finished-at="2017-02-24T17:35:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.addCoursesForBasicModeMobileTest(java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addCoursesForBasicModeMobileTest(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="addCoursesForBasicModeMobileTest" duration-ms="6146" started-at="2017-02-24T17:35:20Z" data-provider="BasicMode-Add Course" finished-at="2017-02-24T17:35:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"text": "Maths", "href":"https://example.com/maths"},{"text": "Biology", "href":"https://example.com/biology"},{"text": "English", "href":"https://example.com/english"},{"text": "Computer", "href":"https://example.com/computer"}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addCoursesForBasicModeMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:35:26Z" finished-at="2017-02-24T17:35:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.basicModeDefaultMobileTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:35:26Z" finished-at="2017-02-24T17:35:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="basicModeDefaultMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="basicModeDefaultMobileTest" duration-ms="9652" started-at="2017-02-24T17:35:26Z" finished-at="2017-02-24T17:35:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- basicModeDefaultMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:35:36Z" finished-at="2017-02-24T17:35:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="courseClickableForBasicModeMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="courseClickableForBasicModeMobileTest" duration-ms="3746" started-at="2017-02-24T17:35:36Z" finished-at="2017-02-24T17:35:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- courseClickableForBasicModeMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:35:36Z" finished-at="2017-02-24T17:35:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.courseClickableForBasicModeMobileTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:35:40Z" finished-at="2017-02-24T17:35:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="courseModeDefaultMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="courseModeDefaultMobileTest" duration-ms="11653" started-at="2017-02-24T17:35:40Z" finished-at="2017-02-24T17:35:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- courseModeDefaultMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:35:40Z" finished-at="2017-02-24T17:35:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.courseModeDefaultMobileTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:35:51Z" finished-at="2017-02-24T17:35:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:35:51Z" finished-at="2017-02-24T17:35:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.courseNavItemClickableForCourseModeMobileTest() throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="courseNavItemClickableForCourseModeMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="courseNavItemClickableForCourseModeMobileTest" duration-ms="6909" started-at="2017-02-24T17:35:51Z" finished-at="2017-02-24T17:35:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- courseNavItemClickableForCourseModeMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:35:58Z" finished-at="2017-02-24T17:35:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void origamiV2Tests.AppHeaderTest.courseNavItemEnabledMobileTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:35:58Z" finished-at="2017-02-24T17:35:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="courseNavItemEnabledMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="courseNavItemEnabledMobileTest" duration-ms="4043" started-at="2017-02-24T17:35:58Z" finished-at="2017-02-24T17:36:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- courseNavItemEnabledMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:36:02Z" finished-at="2017-02-24T17:36:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="helpLinkClickableForBasicModeMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="helpLinkClickableForBasicModeMobileTest" duration-ms="2463" started-at="2017-02-24T17:36:02Z" finished-at="2017-02-24T17:36:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- helpLinkClickableForBasicModeMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:36:02Z" finished-at="2017-02-24T17:36:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.helpLinkClickableForBasicModeMobileTest() throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:36:05Z" finished-at="2017-02-24T17:36:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="helpLinkClickableForCourseModeMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="helpLinkClickableForCourseModeMobileTest" duration-ms="1939" started-at="2017-02-24T17:36:05Z" finished-at="2017-02-24T17:36:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- helpLinkClickableForCourseModeMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:36:05Z" finished-at="2017-02-24T17:36:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.helpLinkClickableForCourseModeMobileTest() throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:36:07Z" finished-at="2017-02-24T17:36:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="helpLinkClickableForHideLoginControlsMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="helpLinkClickableForHideLoginControlsMobileTest" duration-ms="1798" started-at="2017-02-24T17:36:07Z" finished-at="2017-02-24T17:36:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- helpLinkClickableForHideLoginControlsMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:36:07Z" finished-at="2017-02-24T17:36:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.helpLinkClickableForHideLoginControlsMobileTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:36:08Z" finished-at="2017-02-24T17:36:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.helpLinkClickableForIntegModeMobileTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:36:08Z" finished-at="2017-02-24T17:36:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="helpLinkClickableForIntegModeMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="helpLinkClickableForIntegModeMobileTest" duration-ms="1724" started-at="2017-02-24T17:36:08Z" finished-at="2017-02-24T17:36:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- helpLinkClickableForIntegModeMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:36:10Z" finished-at="2017-02-24T17:36:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="helpLinkClickableForShowLoginControlsMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="helpLinkClickableForShowLoginControlsMobileTest" duration-ms="1781" started-at="2017-02-24T17:36:10Z" finished-at="2017-02-24T17:36:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- helpLinkClickableForShowLoginControlsMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:36:10Z" finished-at="2017-02-24T17:36:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.helpLinkClickableForShowLoginControlsMobileTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:36:12Z" finished-at="2017-02-24T17:36:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:36:12Z" finished-at="2017-02-24T17:36:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.integrationModeDefaultMobileTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="integrationModeDefaultMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="integrationModeDefaultMobileTest" duration-ms="5307" started-at="2017-02-24T17:36:12Z" finished-at="2017-02-24T17:36:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- integrationModeDefaultMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:36:17Z" finished-at="2017-02-24T17:36:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:36:17Z" finished-at="2017-02-24T17:36:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.listAllCourseNavItemsInCourseModeMobileTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="listAllCourseNavItemsInCourseModeMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="listAllCourseNavItemsInCourseModeMobileTest" duration-ms="15326" started-at="2017-02-24T17:36:17Z" finished-at="2017-02-24T17:36:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listAllCourseNavItemsInCourseModeMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:36:33Z" finished-at="2017-02-24T17:36:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.listAllCoursesInBasicModeMobileTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:36:33Z" finished-at="2017-02-24T17:36:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="listAllCoursesInBasicModeMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="listAllCoursesInBasicModeMobileTest" duration-ms="11166" started-at="2017-02-24T17:36:33Z" finished-at="2017-02-24T17:36:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listAllCoursesInBasicModeMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:36:44Z" finished-at="2017-02-24T17:36:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:36:44Z" finished-at="2017-02-24T17:36:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.myAccountClickableForBasicModeMobileTest() throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="myAccountClickableForBasicModeMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="myAccountClickableForBasicModeMobileTest" duration-ms="3380" started-at="2017-02-24T17:36:44Z" finished-at="2017-02-24T17:36:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myAccountClickableForBasicModeMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:36:47Z" finished-at="2017-02-24T17:36:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.myAccountClickableForCourseModeMobileTest() throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:36:47Z" finished-at="2017-02-24T17:36:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="myAccountClickableForCourseModeMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="myAccountClickableForCourseModeMobileTest" duration-ms="9342" started-at="2017-02-24T17:36:47Z" finished-at="2017-02-24T17:36:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myAccountClickableForCourseModeMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:36:56Z" finished-at="2017-02-24T17:36:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="pearsonLogoClickableForBasicModeMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="pearsonLogoClickableForBasicModeMobileTest" duration-ms="1776" started-at="2017-02-24T17:36:56Z" finished-at="2017-02-24T17:36:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pearsonLogoClickableForBasicModeMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:36:56Z" finished-at="2017-02-24T17:36:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.pearsonLogoClickableForBasicModeMobileTest() throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:36:58Z" finished-at="2017-02-24T17:36:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:36:58Z" finished-at="2017-02-24T17:36:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.pearsonLogoClickableForCourseModeMobileTest() throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="pearsonLogoClickableForCourseModeMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="pearsonLogoClickableForCourseModeMobileTest" duration-ms="1763" started-at="2017-02-24T17:36:58Z" finished-at="2017-02-24T17:37:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pearsonLogoClickableForCourseModeMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:37:00Z" finished-at="2017-02-24T17:37:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:37:00Z" finished-at="2017-02-24T17:37:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.pearsonLogoClickableForHideLoginControlsMobileTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="pearsonLogoClickableForHideLoginControlsMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="pearsonLogoClickableForHideLoginControlsMobileTest" duration-ms="1772" started-at="2017-02-24T17:37:00Z" finished-at="2017-02-24T17:37:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pearsonLogoClickableForHideLoginControlsMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:37:02Z" finished-at="2017-02-24T17:37:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="pearsonLogoClickableForIntegModeMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="pearsonLogoClickableForIntegModeMobileTest" duration-ms="1726" started-at="2017-02-24T17:37:02Z" finished-at="2017-02-24T17:37:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pearsonLogoClickableForIntegModeMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:37:02Z" finished-at="2017-02-24T17:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.pearsonLogoClickableForIntegModeMobileTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:37:03Z" finished-at="2017-02-24T17:37:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:37:03Z" finished-at="2017-02-24T17:37:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.pearsonLogoClickableForShowLoginControlsMobileTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="pearsonLogoClickableForShowLoginControlsMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="pearsonLogoClickableForShowLoginControlsMobileTest" duration-ms="1829" started-at="2017-02-24T17:37:03Z" finished-at="2017-02-24T17:37:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pearsonLogoClickableForShowLoginControlsMobileTest -->
        <test-method status="PASS" signature="removeOneCourseForBasicModeMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="removeOneCourseForBasicModeMobileTest" duration-ms="8761" started-at="2017-02-24T17:37:05Z" finished-at="2017-02-24T17:37:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeOneCourseForBasicModeMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:37:05Z" finished-at="2017-02-24T17:37:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:37:05Z" finished-at="2017-02-24T17:37:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.removeOneCourseForBasicModeMobileTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:37:14Z" finished-at="2017-02-24T17:37:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="removeOneCourseNavItemForCourseModeMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="removeOneCourseNavItemForCourseModeMobileTest" duration-ms="6683" started-at="2017-02-24T17:37:14Z" finished-at="2017-02-24T17:37:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeOneCourseNavItemForCourseModeMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:37:14Z" finished-at="2017-02-24T17:37:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.removeOneCourseNavItemForCourseModeMobileTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:37:21Z" finished-at="2017-02-24T17:37:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="signOutClickableForBasicModeMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="signOutClickableForBasicModeMobileTest" duration-ms="3370" started-at="2017-02-24T17:37:21Z" finished-at="2017-02-24T17:37:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signOutClickableForBasicModeMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:37:21Z" finished-at="2017-02-24T17:37:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.signOutClickableForBasicModeMobileTest() throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:37:24Z" finished-at="2017-02-24T17:37:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="signOutClickableForCourseModeMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="signOutClickableForCourseModeMobileTest" duration-ms="3340" started-at="2017-02-24T17:37:24Z" finished-at="2017-02-24T17:37:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signOutClickableForCourseModeMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:37:24Z" finished-at="2017-02-24T17:37:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.signOutClickableForCourseModeMobileTest() throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:37:27Z" finished-at="2017-02-24T17:37:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="signedOutModeDefaultMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="signedOutModeDefaultMobileTest" duration-ms="7386" started-at="2017-02-24T17:37:27Z" finished-at="2017-02-24T17:37:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signedOutModeDefaultMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:37:27Z" finished-at="2017-02-24T17:37:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.signedOutModeDefaultMobileTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:37:35Z" finished-at="2017-02-24T17:37:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.signedOutModeHideLoginControlsMobileTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="signedOutModeHideLoginControlsMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="signedOutModeHideLoginControlsMobileTest" duration-ms="6033" started-at="2017-02-24T17:37:35Z" finished-at="2017-02-24T17:37:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signedOutModeHideLoginControlsMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:37:35Z" finished-at="2017-02-24T17:37:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:37:41Z" finished-at="2017-02-24T17:37:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:37:41Z" finished-at="2017-02-24T17:37:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.signedOutModeShowLoginControlsMobileTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="signedOutModeShowLoginControlsMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="signedOutModeShowLoginControlsMobileTest" duration-ms="5956" started-at="2017-02-24T17:37:41Z" finished-at="2017-02-24T17:37:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signedOutModeShowLoginControlsMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:37:47Z" finished-at="2017-02-24T17:37:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:37:47Z" finished-at="2017-02-24T17:37:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void origamiV2Tests.AppHeaderTest.themeForAllModesMobileTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="themeForAllModesMobileTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="themeForAllModesMobileTest" duration-ms="3910" started-at="2017-02-24T17:37:47Z" data-provider="Set Theme Test Data" finished-at="2017-02-24T17:37:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[signout]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[http://localhost:8000/src/main/java/origamiV2/fixtures/appHeader/app-header-SignOutMode.html]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/home/travis/build/Pearson-Higher-Ed/ux-test-platform/src/main/java/origamiV2/jsfiles/appHeader/signedout.js]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[var config = {"mode":"Signed Out","showLoginControls": true};]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[var config = {"mode":"Signed Out","showLoginControls": false,]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA["theme": "light"};]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- themeForAllModesMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:37:51Z" finished-at="2017-02-24T17:37:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:37:51Z" finished-at="2017-02-24T17:37:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void origamiV2Tests.AppHeaderTest.themeForAllModesMobileTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="themeForAllModesMobileTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="themeForAllModesMobileTest" duration-ms="3829" started-at="2017-02-24T17:37:51Z" data-provider="Set Theme Test Data" finished-at="2017-02-24T17:37:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[signout]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[http://localhost:8000/src/main/java/origamiV2/fixtures/appHeader/app-header-SignOutMode.html]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/home/travis/build/Pearson-Higher-Ed/ux-test-platform/src/main/java/origamiV2/jsfiles/appHeader/signedout.js]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[var config = {"mode":"Signed Out","showLoginControls": true};]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[var config = {"mode":"Signed Out","showLoginControls": true,]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA["theme": "off"};]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- themeForAllModesMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:37:55Z" finished-at="2017-02-24T17:37:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:37:55Z" finished-at="2017-02-24T17:37:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void origamiV2Tests.AppHeaderTest.themeForAllModesMobileTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="themeForAllModesMobileTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="themeForAllModesMobileTest" duration-ms="3974" started-at="2017-02-24T17:37:55Z" data-provider="Set Theme Test Data" finished-at="2017-02-24T17:37:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[basic]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[http://localhost:8000/src/main/java/origamiV2/fixtures/appHeader/app-header-BasicMode.html]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/home/travis/build/Pearson-Higher-Ed/ux-test-platform/src/main/java/origamiV2/jsfiles/appHeader/basic.js]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[var config = {"mode":"Basic", "user":{"givenName":"Steve"},"courseItems":[{"text": "Physics", "href":"https://example.com/physics"},{"text": "Chemistry", "href":"https://example.com/chemistry"}]};]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[var config = {"mode":"Basic", "user":{"givenName":"Michel"},"courseItems":[{"text": "Physics", "href":"https://example.com/physics"}],]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA["theme": "light"};]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- themeForAllModesMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:37:59Z" finished-at="2017-02-24T17:37:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:37:59Z" finished-at="2017-02-24T17:37:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void origamiV2Tests.AppHeaderTest.themeForAllModesMobileTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="themeForAllModesMobileTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="themeForAllModesMobileTest" duration-ms="3900" started-at="2017-02-24T17:37:59Z" data-provider="Set Theme Test Data" finished-at="2017-02-24T17:38:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[basic]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[http://localhost:8000/src/main/java/origamiV2/fixtures/appHeader/app-header-BasicMode.html]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/home/travis/build/Pearson-Higher-Ed/ux-test-platform/src/main/java/origamiV2/jsfiles/appHeader/basic.js]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[var config = {"mode":"Basic", "user":{"givenName":"Steve"},"courseItems":[{"text": "Physics", "href":"https://example.com/physics"},{"text": "Chemistry", "href":"https://example.com/chemistry"}]};]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[var config = {"mode":"Basic", "user":{"givenName":"Michel"},"courseItems":[{"text": "Physics", "href":"https://example.com/physics"}],]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA["theme": "off"};]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- themeForAllModesMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:38:02Z" finished-at="2017-02-24T17:38:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:38:02Z" finished-at="2017-02-24T17:38:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void origamiV2Tests.AppHeaderTest.themeForAllModesMobileTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="themeForAllModesMobileTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="themeForAllModesMobileTest" duration-ms="3846" started-at="2017-02-24T17:38:02Z" data-provider="Set Theme Test Data" finished-at="2017-02-24T17:38:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[course]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[http://localhost:8000/src/main/java/origamiV2/fixtures/appHeader/app-header-CourseMode.html]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/home/travis/build/Pearson-Higher-Ed/ux-test-platform/src/main/java/origamiV2/jsfiles/appHeader/course.js]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[var config = {"mode":"Course","user":{"givenName":"John"},"courseNav":{"heading":{"text":"Physics","href":"https://example.com/physics"},"items":[{"text":"Performance","href":"https://example.com/performance","active":false},{"text":"Assessments","href":"https://example.com/assessments","active":false}]}};]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[var config = {"mode":"Course","user":{"givenName":"Michel"},"courseNav":{"heading":{"text":"Physics","href":"https://example.com/physics"},"items":[,{"text":"Performance","href":"https://example.com/performance","active":false},{"text":"Assessment","href":"https://example.com/assessments","active":false}]},]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA["theme": "light"};]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- themeForAllModesMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:38:06Z" finished-at="2017-02-24T17:38:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void origamiV2Tests.AppHeaderTest.themeForAllModesMobileTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:38:06Z" finished-at="2017-02-24T17:38:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="themeForAllModesMobileTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="themeForAllModesMobileTest" duration-ms="3843" started-at="2017-02-24T17:38:06Z" data-provider="Set Theme Test Data" finished-at="2017-02-24T17:38:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[course]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[http://localhost:8000/src/main/java/origamiV2/fixtures/appHeader/app-header-CourseMode.html]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/home/travis/build/Pearson-Higher-Ed/ux-test-platform/src/main/java/origamiV2/jsfiles/appHeader/course.js]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[var config = {"mode":"Course","user":{"givenName":"John"},"courseNav":{"heading":{"text":"Physics","href":"https://example.com/physics"},"items":[{"text":"Performance","href":"https://example.com/performance","active":false},{"text":"Assessments","href":"https://example.com/assessments","active":false}]}};]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[var config = {"mode":"Course","user":{"givenName":"Michel"},"courseNav":{"heading":{"text":"Physics","href":"https://example.com/physics"},"items":[,{"text":"Performance","href":"https://example.com/performance","active":false},{"text":"Assessment","href":"https://example.com/assessments","active":false}]},]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA["theme": "off"};]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- themeForAllModesMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:38:10Z" finished-at="2017-02-24T17:38:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="themeForAllModesMobileTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="themeForAllModesMobileTest" duration-ms="3937" started-at="2017-02-24T17:38:10Z" data-provider="Set Theme Test Data" finished-at="2017-02-24T17:38:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[integration]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[http://localhost:8000/src/main/java/origamiV2/fixtures/appHeader/app-header-IntegMode.html]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/home/travis/build/Pearson-Higher-Ed/ux-test-platform/src/main/java/origamiV2/jsfiles/appHeader/integ.js]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[/home/travis/build/Pearson-Higher-Ed/ux-test-platform/src/main/java/origamiV2/jsfiles/appHeader/integ.js]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[var config = {"mode": "Integration",]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA["theme": "light"};]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- themeForAllModesMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:38:10Z" finished-at="2017-02-24T17:38:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void origamiV2Tests.AppHeaderTest.themeForAllModesMobileTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:38:14Z" finished-at="2017-02-24T17:38:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:38:14Z" finished-at="2017-02-24T17:38:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void origamiV2Tests.AppHeaderTest.themeForAllModesMobileTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="themeForAllModesMobileTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="themeForAllModesMobileTest" duration-ms="3779" started-at="2017-02-24T17:38:14Z" data-provider="Set Theme Test Data" finished-at="2017-02-24T17:38:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[integration]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[http://localhost:8000/src/main/java/origamiV2/fixtures/appHeader/app-header-IntegMode.html]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/home/travis/build/Pearson-Higher-Ed/ux-test-platform/src/main/java/origamiV2/jsfiles/appHeader/integ.js]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[/home/travis/build/Pearson-Higher-Ed/ux-test-platform/src/main/java/origamiV2/jsfiles/appHeader/integ.js]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[var config = {"mode": "Integration",]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA["theme": "off"};]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- themeForAllModesMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:38:18Z" finished-at="2017-02-24T17:38:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.truncateCourseNameForBasicModeMobileTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:38:18Z" finished-at="2017-02-24T17:38:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="truncateCourseNameForBasicModeMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="truncateCourseNameForBasicModeMobileTest" duration-ms="5523" started-at="2017-02-24T17:38:18Z" finished-at="2017-02-24T17:38:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- truncateCourseNameForBasicModeMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:38:23Z" finished-at="2017-02-24T17:38:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="truncateCourseNavItemForCourseModeMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="truncateCourseNavItemForCourseModeMobileTest" duration-ms="8251" started-at="2017-02-24T17:38:23Z" finished-at="2017-02-24T17:38:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- truncateCourseNavItemForCourseModeMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:38:23Z" finished-at="2017-02-24T17:38:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.truncateCourseNavItemForCourseModeMobileTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:38:32Z" finished-at="2017-02-24T17:38:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.userMenuForBasicModeMobileTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:38:32Z" finished-at="2017-02-24T17:38:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="userMenuForBasicModeMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="userMenuForBasicModeMobileTest" duration-ms="11127" started-at="2017-02-24T17:38:32Z" finished-at="2017-02-24T17:38:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userMenuForBasicModeMobileTest -->
        <test-method status="PASS" signature="userMenuForCourseModeMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="userMenuForCourseModeMobileTest" duration-ms="12566" started-at="2017-02-24T17:38:43Z" finished-at="2017-02-24T17:38:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userMenuForCourseModeMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:38:43Z" finished-at="2017-02-24T17:38:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.userMenuForCourseModeMobileTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:38:43Z" finished-at="2017-02-24T17:38:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:38:55Z" finished-at="2017-02-24T17:38:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="zeroCoursesForBasicModeMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="zeroCoursesForBasicModeMobileTest" duration-ms="5387" started-at="2017-02-24T17:38:55Z" finished-at="2017-02-24T17:39:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- zeroCoursesForBasicModeMobileTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:38:55Z" finished-at="2017-02-24T17:38:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.zeroCoursesForBasicModeMobileTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:39:01Z" finished-at="2017-02-24T17:39:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.zeroCoursesForCourseModeMobileTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:39:01Z" finished-at="2017-02-24T17:39:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="zeroCoursesForCourseModeMobileTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="zeroCoursesForCourseModeMobileTest" duration-ms="4001" started-at="2017-02-24T17:39:01Z" finished-at="2017-02-24T17:39:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- zeroCoursesForCourseModeMobileTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:39:05Z" finished-at="2017-02-24T17:39:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="tearDown(java.lang.String)[pri:0, instance:origamiV2Tests.AppHeaderTest@29b5cd00]" name="tearDown" is-config="true" duration-ms="884" started-at="2017-02-24T17:39:05Z" finished-at="2017-02-24T17:39:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- origamiV2Tests.AppHeaderTest -->
    </test> <!-- Origami - App Header Tests -->
  </suite> <!-- Mobile Regression Test Suite -->
  <suite name="Desktop Regression Test Suite" duration-ms="805942" started-at="2017-02-24T16:54:51Z" finished-at="2017-02-24T17:08:17Z">
    <groups>
      <group name="desktop-ci">
        <method signature="ButtonsTest.defaultButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="defaultButtonTest" class="elementsTests.ButtonsTest"/>
        <method signature="GridTest.spanEqualColumnsTest(int, int, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="spanEqualColumnsTest" class="elementsTests.GridTest"/>
        <method signature="PresentationStrategyTest.setDefaultStrategyTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setDefaultStrategyTest" class="elementsTests.PresentationStrategyTest"/>
        <method signature="ResponsiveUtilitiesTest.mdTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="mdTest" class="elementsTests.ResponsiveUtilitiesTest"/>
        <method signature="ResponsiveUtilitiesTest.xlTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="xlTest" class="elementsTests.ResponsiveUtilitiesTest"/>
        <method signature="ResponsiveUtilitiesTest.xsTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="xsTest" class="elementsTests.ResponsiveUtilitiesTest"/>
        <method signature="TemplatesTest.lgTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="lgTemplateDataTest" class="elementsTests.TemplatesTest"/>
      </group> <!-- desktop-ci -->
      <group name="origamiV2">
        <method signature="AppHeaderTest.addCourseItemsForCourseModeTest(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="addCourseItemsForCourseModeTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.addCoursesForBasicModeTest(java.lang.String, java.lang.String)[pri:1, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="addCoursesForBasicModeTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.basicModeDesktopViewDefaultTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="basicModeDesktopViewDefaultTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.basicModeMobileViewDefaultTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="basicModeMobileViewDefaultTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.courseClickableForBasicModeTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="courseClickableForBasicModeTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.courseModeDesktopViewDefaultTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="courseModeDesktopViewDefaultTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.courseModeMobileViewDefaultTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="courseModeMobileViewDefaultTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.courseNavItemClickableForCourseModeTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="courseNavItemClickableForCourseModeTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.courseNavItemEnabledTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="courseNavItemEnabledTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.helpLinkClickableForBasicModeTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="helpLinkClickableForBasicModeTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.helpLinkClickableForCourseModeTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="helpLinkClickableForCourseModeTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.helpLinkClickableForHideLoginControlsTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="helpLinkClickableForHideLoginControlsTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.helpLinkClickableForIntegModeTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="helpLinkClickableForIntegModeTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.helpLinkClickableForShowLoginControlsTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="helpLinkClickableForShowLoginControlsTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.integrationModeDesktopViewDefaultTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="integrationModeDesktopViewDefaultTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.integrationModeMobileViewDefaultTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="integrationModeMobileViewDefaultTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.listAllCourseNavItemsInCourseModeTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="listAllCourseNavItemsInCourseModeTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.listAllCoursesInBasicModeTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="listAllCoursesInBasicModeTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.myAccountClickableForBasicModeTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="myAccountClickableForBasicModeTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.myAccountClickableForCourseModeTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="myAccountClickableForCourseModeTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.pearsonLogoClickableForBasicModeTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="pearsonLogoClickableForBasicModeTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.pearsonLogoClickableForCourseModeTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="pearsonLogoClickableForCourseModeTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.pearsonLogoClickableForHideLoginControlsTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="pearsonLogoClickableForHideLoginControlsTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.pearsonLogoClickableForIntegModeTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="pearsonLogoClickableForIntegModeTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.pearsonLogoClickableForShowLoginControlsTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="pearsonLogoClickableForShowLoginControlsTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.removeOneCourseForBasicModeTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="removeOneCourseForBasicModeTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.removeOneCourseNavItemForCourseModeTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="removeOneCourseNavItemForCourseModeTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.signOutClickableForBasicModeTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="signOutClickableForBasicModeTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.signOutClickableForCourseModeTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="signOutClickableForCourseModeTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.signedOutModeDefaultTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="signedOutModeDefaultTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.signedOutModeHideLoginControlsTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="signedOutModeHideLoginControlsTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.signedOutModeShowLoginControlsTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="signedOutModeShowLoginControlsTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.themeForAllModesTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="themeForAllModesTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.truncateCourseNameForBasicModeTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="truncateCourseNameForBasicModeTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.truncateCourseNavItemForCourseModeTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="truncateCourseNavItemForCourseModeTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.userMenuForBasicModeTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="userMenuForBasicModeTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.userMenuForCourseModeTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="userMenuForCourseModeTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.zeroCoursesForBasicModeTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="zeroCoursesForBasicModeTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.zeroCoursesForCourseModeTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="zeroCoursesForCourseModeTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AvatarDisplayTest.avatarALTTextConfigTest(java.lang.String, [Ljava.lang.String;, java.lang.String)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="avatarALTTextConfigTest" class="origamiV2Tests.AvatarDisplayTest"/>
        <method signature="AvatarDisplayTest.avatarShapeTest(java.lang.String)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="avatarShapeTest" class="origamiV2Tests.AvatarDisplayTest"/>
        <method signature="AvatarDisplayTest.avatarSizeConfigTest(java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="avatarSizeConfigTest" class="origamiV2Tests.AvatarDisplayTest"/>
        <method signature="AvatarDisplayTest.avatarSizeTest(java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="avatarSizeTest" class="origamiV2Tests.AvatarDisplayTest"/>
        <method signature="AvatarDisplayTest.avatarURLTextConfigTest(java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="avatarURLTextConfigTest" class="origamiV2Tests.AvatarDisplayTest"/>
        <method signature="AvatarDisplayTest.elementIdConfigTest([Ljava.lang.String;)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="elementIdConfigTest" class="origamiV2Tests.AvatarDisplayTest"/>
        <method signature="ComponentArchetypeTest.componentArchetypeDemoTest(java.lang.String, org.openqa.selenium.By, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.ComponentArchetypeTest@49fc609f]" name="componentArchetypeDemoTest" class="origamiV2Tests.ComponentArchetypeTest"/>
        <method signature="DrawerTest.closeDrawerTest(java.lang.String, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By)[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="closeDrawerTest" class="origamiV2Tests.DrawerTest"/>
        <method signature="DrawerTest.openDrawerTest(java.lang.String, org.openqa.selenium.By, org.openqa.selenium.By)[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="openDrawerTest" class="origamiV2Tests.DrawerTest"/>
        <method signature="DrawerTest.otherDrawerTest(java.lang.String, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By)[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="otherDrawerTest" class="origamiV2Tests.DrawerTest"/>
        <method signature="DrawerTest.toggleDrawerTest(java.lang.String, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By)[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="toggleDrawerTest" class="origamiV2Tests.DrawerTest"/>
        <method signature="DrawerTest.useAPIDrawerTest(java.lang.String, org.openqa.selenium.By)[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="useAPIDrawerTest" class="origamiV2Tests.DrawerTest"/>
        <method signature="DrawerTest.useDataTargetForDrawerTest()[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="useDataTargetForDrawerTest" class="origamiV2Tests.DrawerTest"/>
      </group> <!-- origamiV2 -->
      <group name="desktop-regression">
        <method signature="AppHeaderTest.addCourseItemsForCourseModeTest(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="addCourseItemsForCourseModeTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.addCoursesForBasicModeTest(java.lang.String, java.lang.String)[pri:1, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="addCoursesForBasicModeTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.basicModeDesktopViewDefaultTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="basicModeDesktopViewDefaultTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.basicModeMobileViewDefaultTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="basicModeMobileViewDefaultTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.courseClickableForBasicModeTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="courseClickableForBasicModeTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.courseModeDesktopViewDefaultTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="courseModeDesktopViewDefaultTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.courseModeMobileViewDefaultTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="courseModeMobileViewDefaultTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.courseNavItemClickableForCourseModeTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="courseNavItemClickableForCourseModeTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.courseNavItemEnabledTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="courseNavItemEnabledTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.helpLinkClickableForBasicModeTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="helpLinkClickableForBasicModeTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.helpLinkClickableForCourseModeTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="helpLinkClickableForCourseModeTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.helpLinkClickableForHideLoginControlsTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="helpLinkClickableForHideLoginControlsTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.helpLinkClickableForIntegModeTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="helpLinkClickableForIntegModeTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.helpLinkClickableForShowLoginControlsTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="helpLinkClickableForShowLoginControlsTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.integrationModeDesktopViewDefaultTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="integrationModeDesktopViewDefaultTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.integrationModeMobileViewDefaultTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="integrationModeMobileViewDefaultTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.listAllCourseNavItemsInCourseModeTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="listAllCourseNavItemsInCourseModeTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.listAllCoursesInBasicModeTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="listAllCoursesInBasicModeTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.myAccountClickableForBasicModeTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="myAccountClickableForBasicModeTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.myAccountClickableForCourseModeTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="myAccountClickableForCourseModeTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.pearsonLogoClickableForBasicModeTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="pearsonLogoClickableForBasicModeTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.pearsonLogoClickableForCourseModeTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="pearsonLogoClickableForCourseModeTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.pearsonLogoClickableForHideLoginControlsTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="pearsonLogoClickableForHideLoginControlsTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.pearsonLogoClickableForIntegModeTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="pearsonLogoClickableForIntegModeTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.pearsonLogoClickableForShowLoginControlsTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="pearsonLogoClickableForShowLoginControlsTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.removeOneCourseForBasicModeTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="removeOneCourseForBasicModeTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.removeOneCourseNavItemForCourseModeTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="removeOneCourseNavItemForCourseModeTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.signOutClickableForBasicModeTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="signOutClickableForBasicModeTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.signOutClickableForCourseModeTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="signOutClickableForCourseModeTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.signedOutModeDefaultTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="signedOutModeDefaultTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.signedOutModeHideLoginControlsTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="signedOutModeHideLoginControlsTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.signedOutModeShowLoginControlsTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="signedOutModeShowLoginControlsTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.themeForAllModesTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="themeForAllModesTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.truncateCourseNameForBasicModeTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="truncateCourseNameForBasicModeTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.truncateCourseNavItemForCourseModeTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="truncateCourseNavItemForCourseModeTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.userMenuForBasicModeTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="userMenuForBasicModeTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.userMenuForCourseModeTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="userMenuForCourseModeTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.zeroCoursesForBasicModeTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="zeroCoursesForBasicModeTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AppHeaderTest.zeroCoursesForCourseModeTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="zeroCoursesForCourseModeTest" class="origamiV2Tests.AppHeaderTest"/>
        <method signature="AvatarDisplayTest.avatarALTTextConfigTest(java.lang.String, [Ljava.lang.String;, java.lang.String)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="avatarALTTextConfigTest" class="origamiV2Tests.AvatarDisplayTest"/>
        <method signature="AvatarDisplayTest.avatarShapeTest(java.lang.String)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="avatarShapeTest" class="origamiV2Tests.AvatarDisplayTest"/>
        <method signature="AvatarDisplayTest.avatarSizeConfigTest(java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="avatarSizeConfigTest" class="origamiV2Tests.AvatarDisplayTest"/>
        <method signature="AvatarDisplayTest.avatarSizeTest(java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="avatarSizeTest" class="origamiV2Tests.AvatarDisplayTest"/>
        <method signature="AvatarDisplayTest.avatarURLTextConfigTest(java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="avatarURLTextConfigTest" class="origamiV2Tests.AvatarDisplayTest"/>
        <method signature="AvatarDisplayTest.elementIdConfigTest([Ljava.lang.String;)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="elementIdConfigTest" class="origamiV2Tests.AvatarDisplayTest"/>
        <method signature="ButtonsTest.appendValidClassNamesTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="appendValidClassNamesTest" class="compoundsTests.ButtonsTest"/>
        <method signature="ButtonsTest.clickEventButtonTest()[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="clickEventButtonTest" class="compoundsTests.ButtonsTest"/>
        <method signature="ButtonsTest.ctaButtonFocusStateTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="ctaButtonFocusStateTest" class="elementsTests.ButtonsTest"/>
        <method signature="ButtonsTest.ctaButtonHoverStateTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="ctaButtonHoverStateTest" class="elementsTests.ButtonsTest"/>
        <method signature="ButtonsTest.ctaButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="ctaButtonTest" class="elementsTests.ButtonsTest"/>
        <method signature="ButtonsTest.defaultButtonDisabledStateTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="defaultButtonDisabledStateTest" class="elementsTests.ButtonsTest"/>
        <method signature="ButtonsTest.defaultButtonFocusStateTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="defaultButtonFocusStateTest" class="elementsTests.ButtonsTest"/>
        <method signature="ButtonsTest.defaultButtonHoverStateTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="defaultButtonHoverStateTest" class="elementsTests.ButtonsTest"/>
        <method signature="ButtonsTest.defaultButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="defaultButtonTest" class="elementsTests.ButtonsTest"/>
        <method signature="ButtonsTest.incorrectComponentNameButtonTest()[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="incorrectComponentNameButtonTest" class="compoundsTests.ButtonsTest"/>
        <method signature="ButtonsTest.incorrectElementIDButtonTest()[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="incorrectElementIDButtonTest" class="compoundsTests.ButtonsTest"/>
        <method signature="ButtonsTest.largeButtonDisabledStateTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="largeButtonDisabledStateTest" class="elementsTests.ButtonsTest"/>
        <method signature="ButtonsTest.largeButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="largeButtonTest" class="elementsTests.ButtonsTest"/>
        <method signature="ButtonsTest.linkButtonFocusStateTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="linkButtonFocusStateTest" class="elementsTests.ButtonsTest"/>
        <method signature="ButtonsTest.linkButtonHoverStateTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="linkButtonHoverStateTest" class="elementsTests.ButtonsTest"/>
        <method signature="ButtonsTest.linkButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="linkButtonTest" class="elementsTests.ButtonsTest"/>
        <method signature="ButtonsTest.primaryButtonDisabledStateTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="primaryButtonDisabledStateTest" class="elementsTests.ButtonsTest"/>
        <method signature="ButtonsTest.primaryButtonFocusStateTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="primaryButtonFocusStateTest" class="elementsTests.ButtonsTest"/>
        <method signature="ButtonsTest.primaryButtonHoverStateTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="primaryButtonHoverStateTest" class="elementsTests.ButtonsTest"/>
        <method signature="ButtonsTest.primaryButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="primaryButtonTest" class="elementsTests.ButtonsTest"/>
        <method signature="ButtonsTest.smallButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="smallButtonTest" class="elementsTests.ButtonsTest"/>
        <method signature="ButtonsTest.validButtonPropTypesTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="validButtonPropTypesTest" class="compoundsTests.ButtonsTest"/>
        <method signature="ButtonsTest.verifyButtonInvalidPropTypesTest(java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="verifyButtonInvalidPropTypesTest" class="compoundsTests.ButtonsTest"/>
        <method signature="ButtonsTest.xLargeButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="xLargeButtonTest" class="elementsTests.ButtonsTest"/>
        <method signature="ComponentArchetypeTest.componentArchetypeDemoTest(java.lang.String, org.openqa.selenium.By, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.ComponentArchetypeTest@49fc609f]" name="componentArchetypeDemoTest" class="origamiV2Tests.ComponentArchetypeTest"/>
        <method signature="ContextualHelpTest.accordionContentTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="accordionContentTest" class="origamiV2Tests.ContextualHelpTest"/>
        <method signature="ContextualHelpTest.backToHelpTopicsTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="backToHelpTopicsTest" class="origamiV2Tests.ContextualHelpTest"/>
        <method signature="ContextualHelpTest.displayInstructorHelpTopicsTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="displayInstructorHelpTopicsTest" class="origamiV2Tests.ContextualHelpTest"/>
        <method signature="ContextualHelpTest.displayStudentHelpTopicsTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="displayStudentHelpTopicsTest" class="origamiV2Tests.ContextualHelpTest"/>
        <method signature="ContextualHelpTest.focusBackwardTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="focusBackwardTest" class="origamiV2Tests.ContextualHelpTest"/>
        <method signature="ContextualHelpTest.focusForwardTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="focusForwardTest" class="origamiV2Tests.ContextualHelpTest"/>
        <method signature="ContextualHelpTest.focusReturnOutsideContextualHelpDrawerTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="focusReturnOutsideContextualHelpDrawerTest" class="origamiV2Tests.ContextualHelpTest"/>
        <method signature="ContextualHelpTest.focusReturnWithinContextualHelpDrawerTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="focusReturnWithinContextualHelpDrawerTest" class="origamiV2Tests.ContextualHelpTest"/>
        <method signature="ContextualHelpTest.openAndThenRemoveHelpTopicsTest(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="openAndThenRemoveHelpTopicsTest" class="origamiV2Tests.ContextualHelpTest"/>
        <method signature="ContextualHelpTest.openSpecificHelpTopicTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="openSpecificHelpTopicTest" class="origamiV2Tests.ContextualHelpTest"/>
        <method signature="ContextualHelpTest.openThruAppHeaderModeTest(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="openThruAppHeaderModeTest" class="origamiV2Tests.ContextualHelpTest"/>
        <method signature="ContextualHelpTest.styleForBackToHelpTopicsButtonTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="styleForBackToHelpTopicsButtonTest" class="origamiV2Tests.ContextualHelpTest"/>
        <method signature="ContextualHelpTest.styleForCloseHelpTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="styleForCloseHelpTest" class="origamiV2Tests.ContextualHelpTest"/>
        <method signature="ContextualHelpTest.styleForContextualHelpDrawerHeaderTest(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="styleForContextualHelpDrawerHeaderTest" class="origamiV2Tests.ContextualHelpTest"/>
        <method signature="ContextualHelpTest.styleForContextualHelpDrawerHeaderTopicHeadingTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="styleForContextualHelpDrawerHeaderTopicHeadingTest" class="origamiV2Tests.ContextualHelpTest"/>
        <method signature="ContextualHelpTest.styleForContextualHelpDrawerTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="styleForContextualHelpDrawerTest" class="origamiV2Tests.ContextualHelpTest"/>
        <method signature="ContextualHelpTest.styleForHelpTopicExcerptParaTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="styleForHelpTopicExcerptParaTest" class="origamiV2Tests.ContextualHelpTest"/>
        <method signature="ContextualHelpTest.styleForHelpTopicHeadingH3Test()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="styleForHelpTopicHeadingH3Test" class="origamiV2Tests.ContextualHelpTest"/>
        <method signature="ContextualHelpTest.styleForHelpTopicLayoutTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="styleForHelpTopicLayoutTest" class="origamiV2Tests.ContextualHelpTest"/>
        <method signature="ContextualHelpTest.styleForRoomHeaderTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="styleForRoomHeaderTest" class="origamiV2Tests.ContextualHelpTest"/>
        <method signature="ContextualHelpTest.styleForSVGTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="styleForSVGTest" class="origamiV2Tests.ContextualHelpTest"/>
        <method signature="ContextualHelpTest.toggleContextualHelpDrawerTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="toggleContextualHelpDrawerTest" class="origamiV2Tests.ContextualHelpTest"/>
        <method signature="ContextualHelpTest.trapFocusWithinDrawerInHelpTopicsDetailTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="trapFocusWithinDrawerInHelpTopicsDetailTest" class="origamiV2Tests.ContextualHelpTest"/>
        <method signature="ContextualHelpTest.verifyContextualHelpDrawerTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="verifyContextualHelpDrawerTest" class="origamiV2Tests.ContextualHelpTest"/>
        <method signature="ContextualHelpTest.verifyContextualVisibilityImmuneToSetLanguageTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="verifyContextualVisibilityImmuneToSetLanguageTest" class="origamiV2Tests.ContextualHelpTest"/>
        <method signature="ContextualHelpTest.verifyOneHelpTopicDetailsTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="verifyOneHelpTopicDetailsTest" class="origamiV2Tests.ContextualHelpTest"/>
        <method signature="ContextualHelpTest.verifyOpenCloseStateTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="verifyOpenCloseStateTest" class="origamiV2Tests.ContextualHelpTest"/>
        <method signature="ContextualHelpTest.verifyXButtonTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="verifyXButtonTest" class="origamiV2Tests.ContextualHelpTest"/>
        <method signature="DrawerTest.closeDrawerTest(java.lang.String, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By)[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="closeDrawerTest" class="origamiV2Tests.DrawerTest"/>
        <method signature="DrawerTest.focusReturnTest(java.lang.String, java.lang.String, org.openqa.selenium.By, org.openqa.selenium.By)[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="focusReturnTest" class="origamiV2Tests.DrawerTest"/>
        <method signature="DrawerTest.notReturnFocusTest(java.lang.String, java.lang.String, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By)[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="notReturnFocusTest" class="origamiV2Tests.DrawerTest"/>
        <method signature="DrawerTest.openDrawerTest(java.lang.String, org.openqa.selenium.By, org.openqa.selenium.By)[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="openDrawerTest" class="origamiV2Tests.DrawerTest"/>
        <method signature="DrawerTest.otherDrawerTest(java.lang.String, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By)[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="otherDrawerTest" class="origamiV2Tests.DrawerTest"/>
        <method signature="DrawerTest.toggleDrawerTest(java.lang.String, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By)[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="toggleDrawerTest" class="origamiV2Tests.DrawerTest"/>
        <method signature="DrawerTest.trapFocusInADrawerTest(java.lang.String, java.lang.String, org.openqa.selenium.By, org.openqa.selenium.By)[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="trapFocusInADrawerTest" class="origamiV2Tests.DrawerTest"/>
        <method signature="DrawerTest.useAPIDrawerTest(java.lang.String, org.openqa.selenium.By)[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="useAPIDrawerTest" class="origamiV2Tests.DrawerTest"/>
        <method signature="DrawerTest.useDataTargetForDrawerTest()[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="useDataTargetForDrawerTest" class="origamiV2Tests.DrawerTest"/>
        <method signature="DrawerTest.useShiftTabToFocusBackwardTest(java.lang.String, java.lang.String, org.openqa.selenium.By)[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="useShiftTabToFocusBackwardTest" class="origamiV2Tests.DrawerTest"/>
        <method signature="FormsTest.inputBoxTest(java.lang.String, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String)[pri:0, instance:elementsTests.FormsTest@6e6c3152]" name="inputBoxTest" class="elementsTests.FormsTest"/>
        <method signature="GridTest.containerForEqualColumnsTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="containerForEqualColumnsTest" class="elementsTests.GridTest"/>
        <method signature="GridTest.lgSpanColumnWidthTest(java.lang.String, int, int, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="lgSpanColumnWidthTest" class="elementsTests.GridTest"/>
        <method signature="GridTest.mdSpanColumnWidthTest(java.lang.String, int, int, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="mdSpanColumnWidthTest" class="elementsTests.GridTest"/>
        <method signature="GridTest.rowTest(java.lang.String, int, int, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="rowTest" class="elementsTests.GridTest"/>
        <method signature="GridTest.smSpanColumnWidthTest(java.lang.String, int, int, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="smSpanColumnWidthTest" class="elementsTests.GridTest"/>
        <method signature="GridTest.spanEqualColumnsTest(int, int, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="spanEqualColumnsTest" class="elementsTests.GridTest"/>
        <method signature="GridTest.spanMultipleColumnsTest(java.lang.String, int, int, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="spanMultipleColumnsTest" class="elementsTests.GridTest"/>
        <method signature="GridTest.xlgSpanColumnWidthTest(java.lang.String, int, int, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="xlgSpanColumnWidthTest" class="elementsTests.GridTest"/>
        <method signature="GridTest.xsSpanColumnWidthTest(java.lang.String, java.lang.String, int, int, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="xsSpanColumnWidthTest" class="elementsTests.GridTest"/>
        <method signature="IconsTest.getFileSizeOfSpriteTest()[pri:0, instance:elementsTests.IconsTest@551aa95a]" name="getFileSizeOfSpriteTest" class="elementsTests.IconsTest"/>
        <method signature="IconsTest.iconChangeClassAndHrefTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.IconsTest@551aa95a]" name="iconChangeClassAndHrefTest" class="elementsTests.IconsTest"/>
        <method signature="IconsTest.iconFillColorTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.IconsTest@551aa95a]" name="iconFillColorTest" class="elementsTests.IconsTest"/>
        <method signature="IconsTest.incorrectComponentNameIconTest()[pri:0, instance:compoundsTests.IconsTest@3cef309d]" name="incorrectComponentNameIconTest" class="compoundsTests.IconsTest"/>
        <method signature="IconsTest.incorrectElementIDIconTest()[pri:0, instance:compoundsTests.IconsTest@3cef309d]" name="incorrectElementIDIconTest" class="compoundsTests.IconsTest"/>
        <method signature="IconsTest.invalidIconPropTypesTest()[pri:0, instance:compoundsTests.IconsTest@3cef309d]" name="invalidIconPropTypesTest" class="compoundsTests.IconsTest"/>
        <method signature="IconsTest.validIconPropTypesTest(java.lang.String, java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.IconsTest@3cef309d]" name="validIconPropTypesTest" class="compoundsTests.IconsTest"/>
        <method signature="InputsTest.basicInputActiveTest(java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, [Ljava.lang.String;, java.lang.String, [Ljava.lang.String;, java.lang.String)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="basicInputActiveTest" class="elementsTests.InputsTest"/>
        <method signature="InputsTest.basicInputDisabledTest(java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, [Ljava.lang.String;, java.lang.String)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="basicInputDisabledTest" class="elementsTests.InputsTest"/>
        <method signature="InputsTest.basicInputErrorFocusTest([Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="basicInputErrorFocusTest" class="elementsTests.InputsTest"/>
        <method signature="InputsTest.basicInputErrorTest(java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, [Ljava.lang.String;, java.lang.String, [Ljava.lang.String;, java.lang.String)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="basicInputErrorTest" class="elementsTests.InputsTest"/>
        <method signature="InputsTest.basicInputFocusTest([Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, [Ljava.lang.String;, java.lang.String)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="basicInputFocusTest" class="elementsTests.InputsTest"/>
        <method signature="InputsTest.basicSelectInputFocusTest(java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="basicSelectInputFocusTest" class="elementsTests.InputsTest"/>
        <method signature="InputsTest.basicSelectInputTest([Ljava.lang.String;, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="basicSelectInputTest" class="elementsTests.InputsTest"/>
        <method signature="InputsTest.checkboxDisabledStateTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="checkboxDisabledStateTest" class="elementsTests.InputsTest"/>
        <method signature="InputsTest.checkboxFocusStateTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="checkboxFocusStateTest" class="elementsTests.InputsTest"/>
        <method signature="InputsTest.inputBoxPasswordHideTest(int, int, java.lang.String, [Ljava.lang.String;, java.lang.String)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="inputBoxPasswordHideTest" class="elementsTests.InputsTest"/>
        <method signature="InputsTest.inputBoxPasswordShowTest(java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="inputBoxPasswordShowTest" class="elementsTests.InputsTest"/>
        <method signature="InputsTest.inputBoxShowPasswordFocusStateTest()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="inputBoxShowPasswordFocusStateTest" class="elementsTests.InputsTest"/>
        <method signature="InputsTest.inputBoxShowPasswordPaddingTest()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="inputBoxShowPasswordPaddingTest" class="elementsTests.InputsTest"/>
        <method signature="InputsTest.labelForCheckBoxTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, java.lang.String)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="labelForCheckBoxTest" class="elementsTests.InputsTest"/>
        <method signature="InputsTest.multiLineTextInputTest(java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="multiLineTextInputTest" class="elementsTests.InputsTest"/>
        <method signature="InputsTest.multiTextInputFocusTest(java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="multiTextInputFocusTest" class="elementsTests.InputsTest"/>
        <method signature="InputsTest.singleLineInputFocusStateTest(java.lang.String, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="singleLineInputFocusStateTest" class="elementsTests.InputsTest"/>
        <method signature="InputsTest.slInputDisabledTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="slInputDisabledTest" class="elementsTests.InputsTest"/>
        <method signature="InputsTest.slInputErroredTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="slInputErroredTest" class="elementsTests.InputsTest"/>
        <method signature="InputsTest.slInputReadOnlyTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="slInputReadOnlyTest" class="elementsTests.InputsTest"/>
        <method signature="PresentationStrategyTest.setCenteredStrategyTest()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setCenteredStrategyTest" class="elementsTests.PresentationStrategyTest"/>
        <method signature="PresentationStrategyTest.setDefaultStrategyTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setDefaultStrategyTest" class="elementsTests.PresentationStrategyTest"/>
        <method signature="PresentationStrategyTest.setGridLargeCol2Test(int, int, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setGridLargeCol2Test" class="elementsTests.PresentationStrategyTest"/>
        <method signature="PresentationStrategyTest.setGridLargeCol3Test(int, int, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setGridLargeCol3Test" class="elementsTests.PresentationStrategyTest"/>
        <method signature="PresentationStrategyTest.setGridLargeCol4Test(int, int, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setGridLargeCol4Test" class="elementsTests.PresentationStrategyTest"/>
        <method signature="PresentationStrategyTest.setGridSmallCol2Test(int, int, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setGridSmallCol2Test" class="elementsTests.PresentationStrategyTest"/>
        <method signature="PresentationStrategyTest.setGridSmallCol3Test(int, int, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setGridSmallCol3Test" class="elementsTests.PresentationStrategyTest"/>
        <method signature="PresentationStrategyTest.setGridSmallCol4Test(int, int, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setGridSmallCol4Test" class="elementsTests.PresentationStrategyTest"/>
        <method signature="PresentationStrategyTest.setLeftRightStrategyTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setLeftRightStrategyTest" class="elementsTests.PresentationStrategyTest"/>
        <method signature="PresentationStrategyTest.setSpacingDefaultGapTest(java.lang.String, int, int)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setSpacingDefaultGapTest" class="elementsTests.PresentationStrategyTest"/>
        <method signature="PresentationStrategyTest.setSpacingLargeGapTest(java.lang.String, org.openqa.selenium.By, int, int, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setSpacingLargeGapTest" class="elementsTests.PresentationStrategyTest"/>
        <method signature="PresentationStrategyTest.setSpacingSmallGapTest(java.lang.String, org.openqa.selenium.By, int, int, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setSpacingSmallGapTest" class="elementsTests.PresentationStrategyTest"/>
        <method signature="ResponsiveUtilitiesTest.lgTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="lgTest" class="elementsTests.ResponsiveUtilitiesTest"/>
        <method signature="ResponsiveUtilitiesTest.mdTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="mdTest" class="elementsTests.ResponsiveUtilitiesTest"/>
        <method signature="ResponsiveUtilitiesTest.smTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="smTest" class="elementsTests.ResponsiveUtilitiesTest"/>
        <method signature="ResponsiveUtilitiesTest.xlTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="xlTest" class="elementsTests.ResponsiveUtilitiesTest"/>
        <method signature="ResponsiveUtilitiesTest.xsTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="xsTest" class="elementsTests.ResponsiveUtilitiesTest"/>
        <method signature="SliderTest.dragKnobToLeftAndRightTest(org.openqa.selenium.By, int, java.lang.String)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="dragKnobToLeftAndRightTest" class="origamiV2Tests.SliderTest"/>
        <method signature="SliderTest.dragKnobToLeftTest(org.openqa.selenium.By, int, [Ljava.lang.String;)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="dragKnobToLeftTest" class="origamiV2Tests.SliderTest"/>
        <method signature="SliderTest.dragKnobToRightTest(org.openqa.selenium.By, int, [Ljava.lang.String;)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="dragKnobToRightTest" class="origamiV2Tests.SliderTest"/>
        <method signature="SliderTest.inlineCSSPropertyTest(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="inlineCSSPropertyTest" class="origamiV2Tests.SliderTest"/>
        <method signature="SliderTest.sliderLabelTest()[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="sliderLabelTest" class="origamiV2Tests.SliderTest"/>
        <method signature="SliderTest.validateArrowKeysTest(org.openqa.selenium.By, org.openqa.selenium.Keys, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="validateArrowKeysTest" class="origamiV2Tests.SliderTest"/>
        <method signature="SliderTest.validateClickKnobTest()[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="validateClickKnobTest" class="origamiV2Tests.SliderTest"/>
        <method signature="SliderTest.validateHitTabButtonTest()[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="validateHitTabButtonTest" class="origamiV2Tests.SliderTest"/>
        <method signature="SliderTest.validateHomeAndEndKeysTest(org.openqa.selenium.By, org.openqa.selenium.Keys, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="validateHomeAndEndKeysTest" class="origamiV2Tests.SliderTest"/>
        <method signature="TemplatesTest.lgTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="lgTemplateDataTest" class="elementsTests.TemplatesTest"/>
        <method signature="TemplatesTest.mdTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="mdTemplateDataTest" class="elementsTests.TemplatesTest"/>
        <method signature="TemplatesTest.smTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="smTemplateDataTest" class="elementsTests.TemplatesTest"/>
        <method signature="TemplatesTest.xlTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="xlTemplateDataTest" class="elementsTests.TemplatesTest"/>
        <method signature="TemplatesTest.xsTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="xsTemplateDataTest" class="elementsTests.TemplatesTest"/>
        <method signature="TextModalTest.cancelButtonClickTest()[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="cancelButtonClickTest" class="origamiV2Tests.TextModalTest"/>
        <method signature="TextModalTest.checkLayoverTest()[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="checkLayoverTest" class="origamiV2Tests.TextModalTest"/>
        <method signature="TextModalTest.clickButtonTest()[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="clickButtonTest" class="origamiV2Tests.TextModalTest"/>
        <method signature="TextModalTest.clickGrayLayoverTest()[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="clickGrayLayoverTest" class="origamiV2Tests.TextModalTest"/>
        <method signature="TextModalTest.clickXButtonTest()[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="clickXButtonTest" class="origamiV2Tests.TextModalTest"/>
        <method signature="TextModalTest.elementIdConfigTest(java.lang.String)[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="elementIdConfigTest" class="origamiV2Tests.TextModalTest"/>
        <method signature="TextModalTest.footerConfigTest(java.lang.String)[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="footerConfigTest" class="origamiV2Tests.TextModalTest"/>
        <method signature="TextModalTest.hitEscKeyTest()[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="hitEscKeyTest" class="origamiV2Tests.TextModalTest"/>
        <method signature="TextModalTest.inlineCSSPropertyTest(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="inlineCSSPropertyTest" class="origamiV2Tests.TextModalTest"/>
        <method signature="TextModalTest.modalTitleTest(int, int, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;)[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="modalTitleTest" class="origamiV2Tests.TextModalTest"/>
        <method signature="TextModalTest.smTemplateConfigTest(int, int, [Ljava.lang.String;, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="smTemplateConfigTest" class="origamiV2Tests.TextModalTest"/>
        <method signature="TextModalTest.successButtonClickTest()[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="successButtonClickTest" class="origamiV2Tests.TextModalTest"/>
        <method signature="TextModalTest.tabButtonTest()[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="tabButtonTest" class="origamiV2Tests.TextModalTest"/>
        <method signature="TextModalTest.tabCancelButtonTest()[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="tabCancelButtonTest" class="origamiV2Tests.TextModalTest"/>
        <method signature="TextModalTest.tabSuccessButtonTest()[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="tabSuccessButtonTest" class="origamiV2Tests.TextModalTest"/>
        <method signature="TypographyTest.abbrTest()[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="abbrTest" class="elementsTests.TypographyTest"/>
        <method signature="TypographyTest.codeTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="codeTest" class="elementsTests.TypographyTest"/>
        <method signature="TypographyTest.delAndInsTest(org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="delAndInsTest" class="elementsTests.TypographyTest"/>
        <method signature="TypographyTest.headerTest()[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="headerTest" class="elementsTests.TypographyTest"/>
        <method signature="TypographyTest.headingOrderedListTest(java.lang.String, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="headingOrderedListTest" class="elementsTests.TypographyTest"/>
        <method signature="TypographyTest.leadTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="leadTest" class="elementsTests.TypographyTest"/>
        <method signature="TypographyTest.linkStateTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, java.lang.String)[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="linkStateTest" class="elementsTests.TypographyTest"/>
        <method signature="TypographyTest.listTest()[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="listTest" class="elementsTests.TypographyTest"/>
        <method signature="TypographyTest.markTest()[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="markTest" class="elementsTests.TypographyTest"/>
        <method signature="TypographyTest.orderedListTest()[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="orderedListTest" class="elementsTests.TypographyTest"/>
        <method signature="TypographyTest.strongTest()[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="strongTest" class="elementsTests.TypographyTest"/>
        <method signature="TypographyTest.subtitleWithh1h2h3h4h5Test(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="subtitleWithh1h2h3h4h5Test" class="elementsTests.TypographyTest"/>
        <method signature="TypographyTest.superAndSubScriptTagTest(org.openqa.selenium.By, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="superAndSubScriptTagTest" class="elementsTests.TypographyTest"/>
        <method signature="TypographyTest.unorderedListTest()[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="unorderedListTest" class="elementsTests.TypographyTest"/>
        <method signature="TypographyTest.unstyledListTest()[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="unstyledListTest" class="elementsTests.TypographyTest"/>
      </group> <!-- desktop-regression -->
    </groups>
    <test name="Origami - App Header Tests" duration-ms="144900" started-at="2017-02-24T16:54:51Z" finished-at="2017-02-24T16:57:16Z">
      <class name="origamiV2Tests.AppHeaderTest">
        <test-method status="PASS" signature="setUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="setUp" is-config="true" duration-ms="11161" started-at="2017-02-24T16:54:51Z" finished-at="2017-02-24T16:55:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sauce]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OS X 10.11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[54.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[off]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[iOS]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[iPhone 6 Plus]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[9.3]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[safari]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[1.5.3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="beforeClass(java.lang.String)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="beforeClass" is-config="true" duration-ms="135" started-at="2017-02-24T16:55:02Z" finished-at="2017-02-24T16:55:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[off]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:55:02Z" finished-at="2017-02-24T16:55:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.addCourseItemsForCourseModeTest(java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addCourseItemsForCourseModeTest(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="addCourseItemsForCourseModeTest" duration-ms="5796" started-at="2017-02-24T16:55:02Z" data-provider="CourseMode-Add Course items" finished-at="2017-02-24T16:55:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"text":"Performance","href":"https://example.com/performance","active":false}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addCourseItemsForCourseModeTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:55:08Z" finished-at="2017-02-24T16:55:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:55:08Z" finished-at="2017-02-24T16:55:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.addCourseItemsForCourseModeTest(java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addCourseItemsForCourseModeTest(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="addCourseItemsForCourseModeTest" duration-ms="3843" started-at="2017-02-24T16:55:08Z" data-provider="CourseMode-Add Course items" finished-at="2017-02-24T16:55:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"text":"Performance","href":"https://example.com/performance","active":false},{"text":"Assessment","href":"https://example.com/assessments","active":false}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addCourseItemsForCourseModeTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:55:12Z" finished-at="2017-02-24T16:55:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="addCourseItemsForCourseModeTest(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="addCourseItemsForCourseModeTest" duration-ms="3588" started-at="2017-02-24T16:55:12Z" data-provider="CourseMode-Add Course items" finished-at="2017-02-24T16:55:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"text":"Performance","href":"https://example.com/performance","active":false},{"text":"Assessment","href":"https://example.com/assessments","active":false},{"text":"Score","href":"https://example.com/score","active":false}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addCourseItemsForCourseModeTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:55:12Z" finished-at="2017-02-24T16:55:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.addCourseItemsForCourseModeTest(java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:55:16Z" finished-at="2017-02-24T16:55:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:55:16Z" finished-at="2017-02-24T16:55:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.basicModeDesktopViewDefaultTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="basicModeDesktopViewDefaultTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="basicModeDesktopViewDefaultTest" duration-ms="2905" started-at="2017-02-24T16:55:16Z" finished-at="2017-02-24T16:55:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- basicModeDesktopViewDefaultTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:55:19Z" finished-at="2017-02-24T16:55:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:55:19Z" finished-at="2017-02-24T16:55:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.basicModeMobileViewDefaultTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="basicModeMobileViewDefaultTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="basicModeMobileViewDefaultTest" duration-ms="2686" started-at="2017-02-24T16:55:19Z" finished-at="2017-02-24T16:55:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- basicModeMobileViewDefaultTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:55:21Z" finished-at="2017-02-24T16:55:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:55:21Z" finished-at="2017-02-24T16:55:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.courseClickableForBasicModeTest() throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="courseClickableForBasicModeTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="courseClickableForBasicModeTest" duration-ms="1759" started-at="2017-02-24T16:55:21Z" finished-at="2017-02-24T16:55:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- courseClickableForBasicModeTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:55:23Z" finished-at="2017-02-24T16:55:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.courseModeDesktopViewDefaultTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:55:23Z" finished-at="2017-02-24T16:55:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="courseModeDesktopViewDefaultTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="courseModeDesktopViewDefaultTest" duration-ms="3363" started-at="2017-02-24T16:55:23Z" finished-at="2017-02-24T16:55:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- courseModeDesktopViewDefaultTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:55:26Z" finished-at="2017-02-24T16:55:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="courseModeMobileViewDefaultTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="courseModeMobileViewDefaultTest" duration-ms="4285" started-at="2017-02-24T16:55:26Z" finished-at="2017-02-24T16:55:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- courseModeMobileViewDefaultTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:55:26Z" finished-at="2017-02-24T16:55:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.courseModeMobileViewDefaultTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:55:31Z" finished-at="2017-02-24T16:55:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:55:31Z" finished-at="2017-02-24T16:55:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.courseNavItemClickableForCourseModeTest() throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="courseNavItemClickableForCourseModeTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="courseNavItemClickableForCourseModeTest" duration-ms="4834" started-at="2017-02-24T16:55:31Z" finished-at="2017-02-24T16:55:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- courseNavItemClickableForCourseModeTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:55:36Z" finished-at="2017-02-24T16:55:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:55:36Z" finished-at="2017-02-24T16:55:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void origamiV2Tests.AppHeaderTest.courseNavItemEnabledTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="courseNavItemEnabledTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="courseNavItemEnabledTest" duration-ms="2347" started-at="2017-02-24T16:55:36Z" finished-at="2017-02-24T16:55:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- courseNavItemEnabledTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:55:38Z" finished-at="2017-02-24T16:55:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:55:38Z" finished-at="2017-02-24T16:55:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.helpLinkClickableForBasicModeTest() throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="helpLinkClickableForBasicModeTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="helpLinkClickableForBasicModeTest" duration-ms="868" started-at="2017-02-24T16:55:38Z" finished-at="2017-02-24T16:55:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- helpLinkClickableForBasicModeTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:55:39Z" finished-at="2017-02-24T16:55:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.helpLinkClickableForCourseModeTest() throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="helpLinkClickableForCourseModeTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="helpLinkClickableForCourseModeTest" duration-ms="962" started-at="2017-02-24T16:55:39Z" finished-at="2017-02-24T16:55:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- helpLinkClickableForCourseModeTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:55:39Z" finished-at="2017-02-24T16:55:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:55:40Z" finished-at="2017-02-24T16:55:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:55:40Z" finished-at="2017-02-24T16:55:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.helpLinkClickableForHideLoginControlsTest() throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="helpLinkClickableForHideLoginControlsTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="helpLinkClickableForHideLoginControlsTest" duration-ms="788" started-at="2017-02-24T16:55:40Z" finished-at="2017-02-24T16:55:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- helpLinkClickableForHideLoginControlsTest -->
        <test-method status="PASS" signature="helpLinkClickableForIntegModeTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="helpLinkClickableForIntegModeTest" duration-ms="685" started-at="2017-02-24T16:55:41Z" finished-at="2017-02-24T16:55:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- helpLinkClickableForIntegModeTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:55:41Z" finished-at="2017-02-24T16:55:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.helpLinkClickableForIntegModeTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:55:41Z" finished-at="2017-02-24T16:55:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:55:41Z" finished-at="2017-02-24T16:55:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="helpLinkClickableForShowLoginControlsTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="helpLinkClickableForShowLoginControlsTest" duration-ms="708" started-at="2017-02-24T16:55:41Z" finished-at="2017-02-24T16:55:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- helpLinkClickableForShowLoginControlsTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:55:41Z" finished-at="2017-02-24T16:55:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.helpLinkClickableForShowLoginControlsTest() throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:55:42Z" finished-at="2017-02-24T16:55:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.integrationModeDesktopViewDefaultTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:55:42Z" finished-at="2017-02-24T16:55:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="integrationModeDesktopViewDefaultTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="integrationModeDesktopViewDefaultTest" duration-ms="1279" started-at="2017-02-24T16:55:42Z" finished-at="2017-02-24T16:55:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- integrationModeDesktopViewDefaultTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:55:43Z" finished-at="2017-02-24T16:55:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:55:43Z" finished-at="2017-02-24T16:55:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.integrationModeMobileViewDefaultTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="integrationModeMobileViewDefaultTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="integrationModeMobileViewDefaultTest" duration-ms="1730" started-at="2017-02-24T16:55:43Z" finished-at="2017-02-24T16:55:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- integrationModeMobileViewDefaultTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:55:45Z" finished-at="2017-02-24T16:55:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="listAllCourseNavItemsInCourseModeTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="listAllCourseNavItemsInCourseModeTest" duration-ms="6266" started-at="2017-02-24T16:55:45Z" finished-at="2017-02-24T16:55:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listAllCourseNavItemsInCourseModeTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:55:45Z" finished-at="2017-02-24T16:55:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.listAllCourseNavItemsInCourseModeTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="listAllCoursesInBasicModeTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="listAllCoursesInBasicModeTest" duration-ms="3076" started-at="2017-02-24T16:55:51Z" finished-at="2017-02-24T16:55:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listAllCoursesInBasicModeTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:55:51Z" finished-at="2017-02-24T16:55:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:55:51Z" finished-at="2017-02-24T16:55:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.listAllCoursesInBasicModeTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:55:54Z" finished-at="2017-02-24T16:55:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.myAccountClickableForBasicModeTest() throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:55:54Z" finished-at="2017-02-24T16:55:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="myAccountClickableForBasicModeTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="myAccountClickableForBasicModeTest" duration-ms="1648" started-at="2017-02-24T16:55:54Z" finished-at="2017-02-24T16:55:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myAccountClickableForBasicModeTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:55:56Z" finished-at="2017-02-24T16:55:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:55:56Z" finished-at="2017-02-24T16:55:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.myAccountClickableForCourseModeTest() throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="myAccountClickableForCourseModeTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="myAccountClickableForCourseModeTest" duration-ms="1746" started-at="2017-02-24T16:55:56Z" finished-at="2017-02-24T16:55:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myAccountClickableForCourseModeTest -->
        <test-method status="PASS" signature="pearsonLogoClickableForBasicModeTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="pearsonLogoClickableForBasicModeTest" duration-ms="922" started-at="2017-02-24T16:55:58Z" finished-at="2017-02-24T16:55:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pearsonLogoClickableForBasicModeTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:55:58Z" finished-at="2017-02-24T16:55:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:55:58Z" finished-at="2017-02-24T16:55:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.pearsonLogoClickableForBasicModeTest() throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="pearsonLogoClickableForCourseModeTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="pearsonLogoClickableForCourseModeTest" duration-ms="912" started-at="2017-02-24T16:55:59Z" finished-at="2017-02-24T16:56:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pearsonLogoClickableForCourseModeTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:55:59Z" finished-at="2017-02-24T16:55:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.pearsonLogoClickableForCourseModeTest() throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:55:59Z" finished-at="2017-02-24T16:55:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:56:00Z" finished-at="2017-02-24T16:56:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.pearsonLogoClickableForHideLoginControlsTest() throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="pearsonLogoClickableForHideLoginControlsTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="pearsonLogoClickableForHideLoginControlsTest" duration-ms="3507" started-at="2017-02-24T16:56:00Z" finished-at="2017-02-24T16:56:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pearsonLogoClickableForHideLoginControlsTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:56:00Z" finished-at="2017-02-24T16:56:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:56:03Z" finished-at="2017-02-24T16:56:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:56:03Z" finished-at="2017-02-24T16:56:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.pearsonLogoClickableForIntegModeTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="pearsonLogoClickableForIntegModeTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="pearsonLogoClickableForIntegModeTest" duration-ms="3527" started-at="2017-02-24T16:56:03Z" finished-at="2017-02-24T16:56:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pearsonLogoClickableForIntegModeTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:56:07Z" finished-at="2017-02-24T16:56:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.pearsonLogoClickableForShowLoginControlsTest() throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="pearsonLogoClickableForShowLoginControlsTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="pearsonLogoClickableForShowLoginControlsTest" duration-ms="3517" started-at="2017-02-24T16:56:07Z" finished-at="2017-02-24T16:56:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pearsonLogoClickableForShowLoginControlsTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:56:07Z" finished-at="2017-02-24T16:56:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:56:10Z" finished-at="2017-02-24T16:56:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="removeOneCourseForBasicModeTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="removeOneCourseForBasicModeTest" duration-ms="3664" started-at="2017-02-24T16:56:10Z" finished-at="2017-02-24T16:56:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeOneCourseForBasicModeTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:56:10Z" finished-at="2017-02-24T16:56:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.removeOneCourseForBasicModeTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="removeOneCourseNavItemForCourseModeTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="removeOneCourseNavItemForCourseModeTest" duration-ms="6415" started-at="2017-02-24T16:56:14Z" finished-at="2017-02-24T16:56:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeOneCourseNavItemForCourseModeTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:56:14Z" finished-at="2017-02-24T16:56:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.removeOneCourseNavItemForCourseModeTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:56:14Z" finished-at="2017-02-24T16:56:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="signOutClickableForBasicModeTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="signOutClickableForBasicModeTest" duration-ms="1847" started-at="2017-02-24T16:56:20Z" finished-at="2017-02-24T16:56:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signOutClickableForBasicModeTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:56:20Z" finished-at="2017-02-24T16:56:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.signOutClickableForBasicModeTest() throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:56:20Z" finished-at="2017-02-24T16:56:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:56:22Z" finished-at="2017-02-24T16:56:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:56:22Z" finished-at="2017-02-24T16:56:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.signOutClickableForCourseModeTest() throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="signOutClickableForCourseModeTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="signOutClickableForCourseModeTest" duration-ms="1505" started-at="2017-02-24T16:56:22Z" finished-at="2017-02-24T16:56:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signOutClickableForCourseModeTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:56:23Z" finished-at="2017-02-24T16:56:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.signedOutModeDefaultTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:56:23Z" finished-at="2017-02-24T16:56:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="signedOutModeDefaultTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="signedOutModeDefaultTest" duration-ms="1755" started-at="2017-02-24T16:56:23Z" finished-at="2017-02-24T16:56:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signedOutModeDefaultTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:56:25Z" finished-at="2017-02-24T16:56:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="beforeMethod" is-config="true" duration-ms="3" started-at="2017-02-24T16:56:25Z" finished-at="2017-02-24T16:56:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.signedOutModeHideLoginControlsTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="signedOutModeHideLoginControlsTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="signedOutModeHideLoginControlsTest" duration-ms="9149" started-at="2017-02-24T16:56:25Z" finished-at="2017-02-24T16:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signedOutModeHideLoginControlsTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:56:34Z" finished-at="2017-02-24T16:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:56:34Z" finished-at="2017-02-24T16:56:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.signedOutModeShowLoginControlsTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="signedOutModeShowLoginControlsTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="signedOutModeShowLoginControlsTest" duration-ms="1727" started-at="2017-02-24T16:56:34Z" finished-at="2017-02-24T16:56:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signedOutModeShowLoginControlsTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:56:36Z" finished-at="2017-02-24T16:56:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:56:36Z" finished-at="2017-02-24T16:56:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void origamiV2Tests.AppHeaderTest.themeForAllModesTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="themeForAllModesTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="themeForAllModesTest" duration-ms="1330" started-at="2017-02-24T16:56:36Z" data-provider="Set Theme Test Data" finished-at="2017-02-24T16:56:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[signout]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[http://localhost:8000/src/main/java/origamiV2/fixtures/appHeader/app-header-SignOutMode.html]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/home/travis/build/Pearson-Higher-Ed/ux-test-platform/src/main/java/origamiV2/jsfiles/appHeader/signedout.js]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[var config = {"mode":"Signed Out","showLoginControls": true};]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[var config = {"mode":"Signed Out","showLoginControls": false,]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA["theme": "light"};]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- themeForAllModesTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:56:37Z" finished-at="2017-02-24T16:56:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:56:37Z" finished-at="2017-02-24T16:56:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void origamiV2Tests.AppHeaderTest.themeForAllModesTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="themeForAllModesTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="themeForAllModesTest" duration-ms="1298" started-at="2017-02-24T16:56:37Z" data-provider="Set Theme Test Data" finished-at="2017-02-24T16:56:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[signout]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[http://localhost:8000/src/main/java/origamiV2/fixtures/appHeader/app-header-SignOutMode.html]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/home/travis/build/Pearson-Higher-Ed/ux-test-platform/src/main/java/origamiV2/jsfiles/appHeader/signedout.js]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[var config = {"mode":"Signed Out","showLoginControls": true};]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[var config = {"mode":"Signed Out","showLoginControls": true,]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA["theme": "off"};]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- themeForAllModesTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:56:39Z" finished-at="2017-02-24T16:56:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void origamiV2Tests.AppHeaderTest.themeForAllModesTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:56:39Z" finished-at="2017-02-24T16:56:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="themeForAllModesTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="themeForAllModesTest" duration-ms="1461" started-at="2017-02-24T16:56:39Z" data-provider="Set Theme Test Data" finished-at="2017-02-24T16:56:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[basic]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[http://localhost:8000/src/main/java/origamiV2/fixtures/appHeader/app-header-BasicMode.html]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/home/travis/build/Pearson-Higher-Ed/ux-test-platform/src/main/java/origamiV2/jsfiles/appHeader/basic.js]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[var config = {"mode":"Basic", "user":{"givenName":"Steve"},"courseItems":[{"text": "Physics", "href":"https://example.com/physics"},{"text": "Chemistry", "href":"https://example.com/chemistry"}]};]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[var config = {"mode":"Basic", "user":{"givenName":"Michel"},"courseItems":[{"text": "Physics", "href":"https://example.com/physics"}],]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA["theme": "light"};]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- themeForAllModesTest -->
        <test-method status="PASS" signature="themeForAllModesTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="themeForAllModesTest" duration-ms="1296" started-at="2017-02-24T16:56:40Z" data-provider="Set Theme Test Data" finished-at="2017-02-24T16:56:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[basic]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[http://localhost:8000/src/main/java/origamiV2/fixtures/appHeader/app-header-BasicMode.html]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/home/travis/build/Pearson-Higher-Ed/ux-test-platform/src/main/java/origamiV2/jsfiles/appHeader/basic.js]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[var config = {"mode":"Basic", "user":{"givenName":"Steve"},"courseItems":[{"text": "Physics", "href":"https://example.com/physics"},{"text": "Chemistry", "href":"https://example.com/chemistry"}]};]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[var config = {"mode":"Basic", "user":{"givenName":"Michel"},"courseItems":[{"text": "Physics", "href":"https://example.com/physics"}],]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA["theme": "off"};]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- themeForAllModesTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:56:40Z" finished-at="2017-02-24T16:56:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:56:40Z" finished-at="2017-02-24T16:56:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void origamiV2Tests.AppHeaderTest.themeForAllModesTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:56:42Z" finished-at="2017-02-24T16:56:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="themeForAllModesTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="themeForAllModesTest" duration-ms="1323" started-at="2017-02-24T16:56:42Z" data-provider="Set Theme Test Data" finished-at="2017-02-24T16:56:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[course]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[http://localhost:8000/src/main/java/origamiV2/fixtures/appHeader/app-header-CourseMode.html]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/home/travis/build/Pearson-Higher-Ed/ux-test-platform/src/main/java/origamiV2/jsfiles/appHeader/course.js]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[var config = {"mode":"Course","user":{"givenName":"John"},"courseNav":{"heading":{"text":"Physics","href":"https://example.com/physics"},"items":[{"text":"Performance","href":"https://example.com/performance","active":false},{"text":"Assessments","href":"https://example.com/assessments","active":false}]}};]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[var config = {"mode":"Course","user":{"givenName":"Michel"},"courseNav":{"heading":{"text":"Physics","href":"https://example.com/physics"},"items":[,{"text":"Performance","href":"https://example.com/performance","active":false},{"text":"Assessment","href":"https://example.com/assessments","active":false}]},]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA["theme": "light"};]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- themeForAllModesTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:56:42Z" finished-at="2017-02-24T16:56:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void origamiV2Tests.AppHeaderTest.themeForAllModesTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:56:43Z" finished-at="2017-02-24T16:56:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void origamiV2Tests.AppHeaderTest.themeForAllModesTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:56:43Z" finished-at="2017-02-24T16:56:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="themeForAllModesTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="themeForAllModesTest" duration-ms="1556" started-at="2017-02-24T16:56:43Z" data-provider="Set Theme Test Data" finished-at="2017-02-24T16:56:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[course]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[http://localhost:8000/src/main/java/origamiV2/fixtures/appHeader/app-header-CourseMode.html]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/home/travis/build/Pearson-Higher-Ed/ux-test-platform/src/main/java/origamiV2/jsfiles/appHeader/course.js]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[var config = {"mode":"Course","user":{"givenName":"John"},"courseNav":{"heading":{"text":"Physics","href":"https://example.com/physics"},"items":[{"text":"Performance","href":"https://example.com/performance","active":false},{"text":"Assessments","href":"https://example.com/assessments","active":false}]}};]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[var config = {"mode":"Course","user":{"givenName":"Michel"},"courseNav":{"heading":{"text":"Physics","href":"https://example.com/physics"},"items":[,{"text":"Performance","href":"https://example.com/performance","active":false},{"text":"Assessment","href":"https://example.com/assessments","active":false}]},]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA["theme": "off"};]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- themeForAllModesTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:56:44Z" finished-at="2017-02-24T16:56:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:56:44Z" finished-at="2017-02-24T16:56:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void origamiV2Tests.AppHeaderTest.themeForAllModesTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="themeForAllModesTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="themeForAllModesTest" duration-ms="1043" started-at="2017-02-24T16:56:44Z" data-provider="Set Theme Test Data" finished-at="2017-02-24T16:56:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[integration]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[http://localhost:8000/src/main/java/origamiV2/fixtures/appHeader/app-header-IntegMode.html]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/home/travis/build/Pearson-Higher-Ed/ux-test-platform/src/main/java/origamiV2/jsfiles/appHeader/integ.js]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[/home/travis/build/Pearson-Higher-Ed/ux-test-platform/src/main/java/origamiV2/jsfiles/appHeader/integ.js]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[var config = {"mode": "Integration",]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA["theme": "light"};]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- themeForAllModesTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:56:45Z" finished-at="2017-02-24T16:56:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:56:45Z" finished-at="2017-02-24T16:56:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void origamiV2Tests.AppHeaderTest.themeForAllModesTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="themeForAllModesTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="themeForAllModesTest" duration-ms="1107" started-at="2017-02-24T16:56:45Z" data-provider="Set Theme Test Data" finished-at="2017-02-24T16:56:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[integration]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[http://localhost:8000/src/main/java/origamiV2/fixtures/appHeader/app-header-IntegMode.html]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/home/travis/build/Pearson-Higher-Ed/ux-test-platform/src/main/java/origamiV2/jsfiles/appHeader/integ.js]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[/home/travis/build/Pearson-Higher-Ed/ux-test-platform/src/main/java/origamiV2/jsfiles/appHeader/integ.js]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[var config = {"mode": "Integration",]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA["theme": "off"};]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- themeForAllModesTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:56:47Z" finished-at="2017-02-24T16:56:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="truncateCourseNameForBasicModeTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="truncateCourseNameForBasicModeTest" duration-ms="2263" started-at="2017-02-24T16:56:47Z" finished-at="2017-02-24T16:56:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- truncateCourseNameForBasicModeTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:56:47Z" finished-at="2017-02-24T16:56:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.truncateCourseNameForBasicModeTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:56:49Z" finished-at="2017-02-24T16:56:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="truncateCourseNavItemForCourseModeTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="truncateCourseNavItemForCourseModeTest" duration-ms="3792" started-at="2017-02-24T16:56:49Z" finished-at="2017-02-24T16:56:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- truncateCourseNavItemForCourseModeTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:56:49Z" finished-at="2017-02-24T16:56:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.truncateCourseNavItemForCourseModeTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:56:53Z" finished-at="2017-02-24T16:56:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:56:53Z" finished-at="2017-02-24T16:56:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.userMenuForBasicModeTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="userMenuForBasicModeTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="userMenuForBasicModeTest" duration-ms="5145" started-at="2017-02-24T16:56:53Z" finished-at="2017-02-24T16:56:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userMenuForBasicModeTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:56:58Z" finished-at="2017-02-24T16:56:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:56:58Z" finished-at="2017-02-24T16:56:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.userMenuForCourseModeTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="userMenuForCourseModeTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="userMenuForCourseModeTest" duration-ms="4273" started-at="2017-02-24T16:56:58Z" finished-at="2017-02-24T16:57:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userMenuForCourseModeTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:57:02Z" finished-at="2017-02-24T16:57:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:57:02Z" finished-at="2017-02-24T16:57:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.zeroCoursesForBasicModeTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="zeroCoursesForBasicModeTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="zeroCoursesForBasicModeTest" duration-ms="3072" started-at="2017-02-24T16:57:02Z" finished-at="2017-02-24T16:57:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- zeroCoursesForBasicModeTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:57:05Z" finished-at="2017-02-24T16:57:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.zeroCoursesForCourseModeTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:57:05Z" finished-at="2017-02-24T16:57:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="zeroCoursesForCourseModeTest()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="zeroCoursesForCourseModeTest" duration-ms="2181" started-at="2017-02-24T16:57:05Z" finished-at="2017-02-24T16:57:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- zeroCoursesForCourseModeTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:57:07Z" finished-at="2017-02-24T16:57:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:57:07Z" finished-at="2017-02-24T16:57:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.addCoursesForBasicModeTest(java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addCoursesForBasicModeTest(java.lang.String, java.lang.String)[pri:1, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="addCoursesForBasicModeTest" duration-ms="2321" started-at="2017-02-24T16:57:07Z" data-provider="BasicMode-Add Course" finished-at="2017-02-24T16:57:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"text": "Maths", "href":"https://example.com/maths"}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addCoursesForBasicModeTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:57:10Z" finished-at="2017-02-24T16:57:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.addCoursesForBasicModeTest(java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addCoursesForBasicModeTest(java.lang.String, java.lang.String)[pri:1, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="addCoursesForBasicModeTest" duration-ms="2689" started-at="2017-02-24T16:57:10Z" data-provider="BasicMode-Add Course" finished-at="2017-02-24T16:57:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"text": "Maths", "href":"https://example.com/maths"},{"text": "Biology", "href":"https://example.com/biology"},{"text": "English", "href":"https://example.com/english"}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addCoursesForBasicModeTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:57:10Z" finished-at="2017-02-24T16:57:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:57:12Z" finished-at="2017-02-24T16:57:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:57:12Z" finished-at="2017-02-24T16:57:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AppHeaderTest.addCoursesForBasicModeTest(java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addCoursesForBasicModeTest(java.lang.String, java.lang.String)[pri:1, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="addCoursesForBasicModeTest" duration-ms="2629" started-at="2017-02-24T16:57:12Z" data-provider="BasicMode-Add Course" finished-at="2017-02-24T16:57:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"text": "Maths", "href":"https://example.com/maths"},{"text": "Biology", "href":"https://example.com/biology"},{"text": "English", "href":"https://example.com/english"},{"text": "Computer", "href":"https://example.com/computer"}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addCoursesForBasicModeTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:57:15Z" finished-at="2017-02-24T16:57:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="tearDown(java.lang.String)[pri:0, instance:origamiV2Tests.AppHeaderTest@66a3ffec]" name="tearDown" is-config="true" duration-ms="1133" started-at="2017-02-24T16:57:15Z" finished-at="2017-02-24T16:57:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[off]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- origamiV2Tests.AppHeaderTest -->
    </test> <!-- Origami - App Header Tests -->
    <test name="Elements and Origami Tests" duration-ms="661026" started-at="2017-02-24T16:57:16Z" finished-at="2017-02-24T17:08:17Z">
      <class name="elementsTests.ButtonsTest">
        <test-method status="PASS" signature="setUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="setUp" is-config="true" duration-ms="11716" started-at="2017-02-24T16:57:16Z" finished-at="2017-02-24T16:57:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sauce]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OS X 10.11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[54.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[off]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[iOS]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[iPhone 6 Plus]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[9.3]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[safari]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[1.5.3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="buttonsTestBeforeClass(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="buttonsTestBeforeClass" is-config="true" duration-ms="2" started-at="2017-02-24T16:57:28Z" finished-at="2017-02-24T16:57:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sauce]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[off]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[iOS]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[safari]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buttonsTestBeforeClass -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="2232" started-at="2017-02-24T16:57:28Z" finished-at="2017-02-24T16:57:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.ctaButtonFocusStateTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ctaButtonFocusStateTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="ctaButtonFocusStateTest" duration-ms="836" started-at="2017-02-24T16:57:30Z" data-provider="CTA Button-Focus state Test Data" finished-at="2017-02-24T16:57:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@6a8658ff]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctaButtonFocusStateTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:57:31Z" finished-at="2017-02-24T16:57:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="924" started-at="2017-02-24T16:57:31Z" finished-at="2017-02-24T16:57:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.ctaButtonFocusStateTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ctaButtonFocusStateTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="ctaButtonFocusStateTest" duration-ms="910" started-at="2017-02-24T16:57:32Z" data-provider="CTA Button-Focus state Test Data" finished-at="2017-02-24T16:57:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[background-color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@1c742ed4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctaButtonFocusStateTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:57:33Z" finished-at="2017-02-24T16:57:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="836" started-at="2017-02-24T16:57:33Z" finished-at="2017-02-24T16:57:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.ctaButtonHoverStateTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ctaButtonHoverStateTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="ctaButtonHoverStateTest" duration-ms="656" started-at="2017-02-24T16:57:34Z" data-provider="CTA Button-Hover state Test Data" finished-at="2017-02-24T16:57:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@333d4a8c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctaButtonHoverStateTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:57:34Z" finished-at="2017-02-24T16:57:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="739" started-at="2017-02-24T16:57:34Z" finished-at="2017-02-24T16:57:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.ctaButtonHoverStateTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ctaButtonHoverStateTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="ctaButtonHoverStateTest" duration-ms="627" started-at="2017-02-24T16:57:35Z" data-provider="CTA Button-Hover state Test Data" finished-at="2017-02-24T16:57:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[background-color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@55de24cc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctaButtonHoverStateTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:57:36Z" finished-at="2017-02-24T16:57:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="1105" started-at="2017-02-24T16:57:36Z" finished-at="2017-02-24T16:57:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.ctaButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ctaButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="ctaButtonTest" duration-ms="227" started-at="2017-02-24T16:57:37Z" data-provider="CTA Button Test Data" finished-at="2017-02-24T16:57:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@dc7df28]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctaButtonTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="896" started-at="2017-02-24T16:57:37Z" finished-at="2017-02-24T16:57:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.ctaButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:57:37Z" finished-at="2017-02-24T16:57:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="ctaButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="ctaButtonTest" duration-ms="205" started-at="2017-02-24T16:57:38Z" data-provider="CTA Button Test Data" finished-at="2017-02-24T16:57:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[background-color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@30f842ca]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctaButtonTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="892" started-at="2017-02-24T16:57:38Z" finished-at="2017-02-24T16:57:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.ctaButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:57:38Z" finished-at="2017-02-24T16:57:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="ctaButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="ctaButtonTest" duration-ms="230" started-at="2017-02-24T16:57:39Z" data-provider="CTA Button Test Data" finished-at="2017-02-24T16:57:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[background-image]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@69c81773]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctaButtonTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="1110" started-at="2017-02-24T16:57:39Z" finished-at="2017-02-24T16:57:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.ctaButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:57:39Z" finished-at="2017-02-24T16:57:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="ctaButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="ctaButtonTest" duration-ms="215" started-at="2017-02-24T16:57:40Z" data-provider="CTA Button Test Data" finished-at="2017-02-24T16:57:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-top-style]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@4d14b6c2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctaButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:57:40Z" finished-at="2017-02-24T16:57:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="1013" started-at="2017-02-24T16:57:40Z" finished-at="2017-02-24T16:57:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.ctaButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ctaButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="ctaButtonTest" duration-ms="212" started-at="2017-02-24T16:57:41Z" data-provider="CTA Button Test Data" finished-at="2017-02-24T16:57:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-bottom-style]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@7e990ed7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctaButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:57:42Z" finished-at="2017-02-24T16:57:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="927" started-at="2017-02-24T16:57:42Z" finished-at="2017-02-24T16:57:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.ctaButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ctaButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="ctaButtonTest" duration-ms="335" started-at="2017-02-24T16:57:43Z" data-provider="CTA Button Test Data" finished-at="2017-02-24T16:57:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-left-style]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@c05fddc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctaButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:57:43Z" finished-at="2017-02-24T16:57:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="2475" started-at="2017-02-24T16:57:43Z" finished-at="2017-02-24T16:57:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.ctaButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ctaButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="ctaButtonTest" duration-ms="252" started-at="2017-02-24T16:57:45Z" data-provider="CTA Button Test Data" finished-at="2017-02-24T16:57:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-right-style]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@25df00a0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctaButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:57:46Z" finished-at="2017-02-24T16:57:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="1138" started-at="2017-02-24T16:57:46Z" finished-at="2017-02-24T16:57:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.ctaButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ctaButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="ctaButtonTest" duration-ms="206" started-at="2017-02-24T16:57:47Z" data-provider="CTA Button Test Data" finished-at="2017-02-24T16:57:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-bottom-left-radius]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@4d15107f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctaButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:57:47Z" finished-at="2017-02-24T16:57:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="1548" started-at="2017-02-24T16:57:47Z" finished-at="2017-02-24T16:57:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.ctaButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ctaButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="ctaButtonTest" duration-ms="222" started-at="2017-02-24T16:57:49Z" data-provider="CTA Button Test Data" finished-at="2017-02-24T16:57:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-bottom-right-radius]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@7b4c50bc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctaButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:57:49Z" finished-at="2017-02-24T16:57:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="1035" started-at="2017-02-24T16:57:49Z" finished-at="2017-02-24T16:57:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.ctaButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ctaButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="ctaButtonTest" duration-ms="219" started-at="2017-02-24T16:57:50Z" data-provider="CTA Button Test Data" finished-at="2017-02-24T16:57:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-top-left-radius]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@5884a914]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctaButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:57:50Z" finished-at="2017-02-24T16:57:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="709" started-at="2017-02-24T16:57:50Z" finished-at="2017-02-24T16:57:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.ctaButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ctaButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="ctaButtonTest" duration-ms="243" started-at="2017-02-24T16:57:51Z" data-provider="CTA Button Test Data" finished-at="2017-02-24T16:57:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-top-right-radius]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@50378a4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctaButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:57:51Z" finished-at="2017-02-24T16:57:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="831" started-at="2017-02-24T16:57:51Z" finished-at="2017-02-24T16:57:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.ctaButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ctaButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="ctaButtonTest" duration-ms="207" started-at="2017-02-24T16:57:52Z" data-provider="CTA Button Test Data" finished-at="2017-02-24T16:57:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[text-decoration]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@60f00693]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctaButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:57:52Z" finished-at="2017-02-24T16:57:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="740" started-at="2017-02-24T16:57:52Z" finished-at="2017-02-24T16:57:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.ctaButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ctaButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="ctaButtonTest" duration-ms="205" started-at="2017-02-24T16:57:53Z" data-provider="CTA Button Test Data" finished-at="2017-02-24T16:57:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[text-overflow]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@79207381]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctaButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:57:53Z" finished-at="2017-02-24T16:57:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="706" started-at="2017-02-24T16:57:53Z" finished-at="2017-02-24T16:57:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.ctaButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ctaButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="ctaButtonTest" duration-ms="206" started-at="2017-02-24T16:57:54Z" data-provider="CTA Button Test Data" finished-at="2017-02-24T16:57:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[white-space]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@491b9b8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctaButtonTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="845" started-at="2017-02-24T16:57:54Z" finished-at="2017-02-24T16:57:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.ctaButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:57:54Z" finished-at="2017-02-24T16:57:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="ctaButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="ctaButtonTest" duration-ms="223" started-at="2017-02-24T16:57:55Z" data-provider="CTA Button Test Data" finished-at="2017-02-24T16:57:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[overflow-x]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@1a4927d6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctaButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:57:55Z" finished-at="2017-02-24T16:57:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="798" started-at="2017-02-24T16:57:55Z" finished-at="2017-02-24T16:57:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.ctaButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ctaButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="ctaButtonTest" duration-ms="207" started-at="2017-02-24T16:57:56Z" data-provider="CTA Button Test Data" finished-at="2017-02-24T16:57:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[overflow-y]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@7a6d7e92]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctaButtonTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="1280" started-at="2017-02-24T16:57:56Z" finished-at="2017-02-24T16:57:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.ctaButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:57:56Z" finished-at="2017-02-24T16:57:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="ctaButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="ctaButtonTest" duration-ms="208" started-at="2017-02-24T16:57:57Z" data-provider="CTA Button Test Data" finished-at="2017-02-24T16:57:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[display]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@aba625]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctaButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:57:57Z" finished-at="2017-02-24T16:57:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="764" started-at="2017-02-24T16:57:57Z" finished-at="2017-02-24T16:57:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.ctaButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ctaButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="ctaButtonTest" duration-ms="207" started-at="2017-02-24T16:57:58Z" data-provider="CTA Button Test Data" finished-at="2017-02-24T16:57:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[vertical-align]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@97e93f1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctaButtonTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="1291" started-at="2017-02-24T16:57:58Z" finished-at="2017-02-24T16:58:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.ctaButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:57:58Z" finished-at="2017-02-24T16:57:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="ctaButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="ctaButtonTest" duration-ms="217" started-at="2017-02-24T16:58:00Z" data-provider="CTA Button Test Data" finished-at="2017-02-24T16:58:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[cursor]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@5a5a729f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctaButtonTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="884" started-at="2017-02-24T16:58:00Z" finished-at="2017-02-24T16:58:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.ctaButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:00Z" finished-at="2017-02-24T16:58:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="ctaButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="ctaButtonTest" duration-ms="197" started-at="2017-02-24T16:58:01Z" data-provider="CTA Button Test Data" finished-at="2017-02-24T16:58:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[font-size]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@4b520ea8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctaButtonTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="740" started-at="2017-02-24T16:58:01Z" finished-at="2017-02-24T16:58:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.ctaButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:01Z" finished-at="2017-02-24T16:58:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="ctaButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="ctaButtonTest" duration-ms="201" started-at="2017-02-24T16:58:02Z" data-provider="CTA Button Test Data" finished-at="2017-02-24T16:58:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[height]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@16150369]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctaButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:02Z" finished-at="2017-02-24T16:58:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="658" started-at="2017-02-24T16:58:02Z" finished-at="2017-02-24T16:58:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.ctaButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ctaButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="ctaButtonTest" duration-ms="280" started-at="2017-02-24T16:58:03Z" data-provider="CTA Button Test Data" finished-at="2017-02-24T16:58:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[line-height]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@6b09fb41]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctaButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:03Z" finished-at="2017-02-24T16:58:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="767" started-at="2017-02-24T16:58:03Z" finished-at="2017-02-24T16:58:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.ctaButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ctaButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="ctaButtonTest" duration-ms="206" started-at="2017-02-24T16:58:04Z" data-provider="CTA Button Test Data" finished-at="2017-02-24T16:58:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-top]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@624ea235]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctaButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:58:04Z" finished-at="2017-02-24T16:58:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="714" started-at="2017-02-24T16:58:04Z" finished-at="2017-02-24T16:58:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.ctaButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ctaButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="ctaButtonTest" duration-ms="213" started-at="2017-02-24T16:58:05Z" data-provider="CTA Button Test Data" finished-at="2017-02-24T16:58:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-bottom]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@3932c79a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctaButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:05Z" finished-at="2017-02-24T16:58:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="711" started-at="2017-02-24T16:58:05Z" finished-at="2017-02-24T16:58:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.ctaButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ctaButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="ctaButtonTest" duration-ms="205" started-at="2017-02-24T16:58:06Z" data-provider="CTA Button Test Data" finished-at="2017-02-24T16:58:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-left]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@782859e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctaButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:06Z" finished-at="2017-02-24T16:58:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="733" started-at="2017-02-24T16:58:06Z" finished-at="2017-02-24T16:58:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.ctaButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ctaButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="ctaButtonTest" duration-ms="211" started-at="2017-02-24T16:58:06Z" data-provider="CTA Button Test Data" finished-at="2017-02-24T16:58:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-right]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@23f5b5dc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctaButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="2" started-at="2017-02-24T16:58:07Z" finished-at="2017-02-24T16:58:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="676" started-at="2017-02-24T16:58:07Z" finished-at="2017-02-24T16:58:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonDisabledStateTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="defaultButtonDisabledStateTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="defaultButtonDisabledStateTest" duration-ms="219" started-at="2017-02-24T16:58:07Z" data-provider="Default Button-Disabled Test Data" finished-at="2017-02-24T16:58:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@34bde49d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonDisabledStateTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="687" started-at="2017-02-24T16:58:08Z" finished-at="2017-02-24T16:58:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonDisabledStateTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:08Z" finished-at="2017-02-24T16:58:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="defaultButtonDisabledStateTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="defaultButtonDisabledStateTest" duration-ms="204" started-at="2017-02-24T16:58:08Z" data-provider="Default Button-Disabled Test Data" finished-at="2017-02-24T16:58:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[background-color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@1b1cfb87]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonDisabledStateTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:58:08Z" finished-at="2017-02-24T16:58:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="693" started-at="2017-02-24T16:58:08Z" finished-at="2017-02-24T16:58:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonDisabledStateTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="defaultButtonDisabledStateTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="defaultButtonDisabledStateTest" duration-ms="204" started-at="2017-02-24T16:58:09Z" data-provider="Default Button-Disabled Test Data" finished-at="2017-02-24T16:58:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-top-width]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@821330f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonDisabledStateTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:58:09Z" finished-at="2017-02-24T16:58:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="725" started-at="2017-02-24T16:58:09Z" finished-at="2017-02-24T16:58:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonDisabledStateTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="defaultButtonDisabledStateTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="defaultButtonDisabledStateTest" duration-ms="205" started-at="2017-02-24T16:58:10Z" data-provider="Default Button-Disabled Test Data" finished-at="2017-02-24T16:58:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-bottom-width]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@6f43c82]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonDisabledStateTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:10Z" finished-at="2017-02-24T16:58:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="783" started-at="2017-02-24T16:58:10Z" finished-at="2017-02-24T16:58:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonDisabledStateTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="defaultButtonDisabledStateTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="defaultButtonDisabledStateTest" duration-ms="205" started-at="2017-02-24T16:58:11Z" data-provider="Default Button-Disabled Test Data" finished-at="2017-02-24T16:58:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-left-width]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@5db6b9cd]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonDisabledStateTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:11Z" finished-at="2017-02-24T16:58:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="691" started-at="2017-02-24T16:58:11Z" finished-at="2017-02-24T16:58:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonDisabledStateTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="defaultButtonDisabledStateTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="defaultButtonDisabledStateTest" duration-ms="201" started-at="2017-02-24T16:58:12Z" data-provider="Default Button-Disabled Test Data" finished-at="2017-02-24T16:58:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-right-width]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@210ab13f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonDisabledStateTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:12Z" finished-at="2017-02-24T16:58:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="696" started-at="2017-02-24T16:58:12Z" finished-at="2017-02-24T16:58:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonDisabledStateTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="defaultButtonDisabledStateTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="defaultButtonDisabledStateTest" duration-ms="211" started-at="2017-02-24T16:58:13Z" data-provider="Default Button-Disabled Test Data" finished-at="2017-02-24T16:58:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[box-shadow]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@20b2475a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonDisabledStateTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:13Z" finished-at="2017-02-24T16:58:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="698" started-at="2017-02-24T16:58:13Z" finished-at="2017-02-24T16:58:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonDisabledStateTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="defaultButtonDisabledStateTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="defaultButtonDisabledStateTest" duration-ms="218" started-at="2017-02-24T16:58:14Z" data-provider="Default Button-Disabled Test Data" finished-at="2017-02-24T16:58:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[cursor]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@7857fe2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonDisabledStateTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:14Z" finished-at="2017-02-24T16:58:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="856" started-at="2017-02-24T16:58:14Z" finished-at="2017-02-24T16:58:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonFocusStateTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="defaultButtonFocusStateTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="defaultButtonFocusStateTest" duration-ms="655" started-at="2017-02-24T16:58:15Z" data-provider="Default Button-Focus state Test Data" finished-at="2017-02-24T16:58:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@6f15d60e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonFocusStateTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:16Z" finished-at="2017-02-24T16:58:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="1325" started-at="2017-02-24T16:58:16Z" finished-at="2017-02-24T16:58:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonFocusStateTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="defaultButtonFocusStateTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="defaultButtonFocusStateTest" duration-ms="4893" started-at="2017-02-24T16:58:17Z" data-provider="Default Button-Focus state Test Data" finished-at="2017-02-24T16:58:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[background-color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@1be2019a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonFocusStateTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:22Z" finished-at="2017-02-24T16:58:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="799" started-at="2017-02-24T16:58:22Z" finished-at="2017-02-24T16:58:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonHoverStateTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="defaultButtonHoverStateTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="defaultButtonHoverStateTest" duration-ms="630" started-at="2017-02-24T16:58:23Z" data-provider="Default Button-Hover state Test Data" finished-at="2017-02-24T16:58:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@29d80d2b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonHoverStateTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:23Z" finished-at="2017-02-24T16:58:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="732" started-at="2017-02-24T16:58:23Z" finished-at="2017-02-24T16:58:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonHoverStateTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="defaultButtonHoverStateTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="defaultButtonHoverStateTest" duration-ms="620" started-at="2017-02-24T16:58:24Z" data-provider="Default Button-Hover state Test Data" finished-at="2017-02-24T16:58:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[background-color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@58e1d9d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonHoverStateTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:58:25Z" finished-at="2017-02-24T16:58:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="690" started-at="2017-02-24T16:58:25Z" finished-at="2017-02-24T16:58:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="defaultButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="defaultButtonTest" duration-ms="206" started-at="2017-02-24T16:58:25Z" data-provider="Default Button Test Data" finished-at="2017-02-24T16:58:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@446a1e84]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="716" started-at="2017-02-24T16:58:25Z" finished-at="2017-02-24T16:58:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:25Z" finished-at="2017-02-24T16:58:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="defaultButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="defaultButtonTest" duration-ms="228" started-at="2017-02-24T16:58:26Z" data-provider="Default Button Test Data" finished-at="2017-02-24T16:58:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[background-color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@4f0f2942]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:26Z" finished-at="2017-02-24T16:58:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="664" started-at="2017-02-24T16:58:26Z" finished-at="2017-02-24T16:58:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="defaultButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="defaultButtonTest" duration-ms="234" started-at="2017-02-24T16:58:27Z" data-provider="Default Button Test Data" finished-at="2017-02-24T16:58:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-top-style]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@2657d4dd]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:27Z" finished-at="2017-02-24T16:58:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="700" started-at="2017-02-24T16:58:27Z" finished-at="2017-02-24T16:58:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="defaultButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="defaultButtonTest" duration-ms="198" started-at="2017-02-24T16:58:28Z" data-provider="Default Button Test Data" finished-at="2017-02-24T16:58:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-bottom-style]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@5340477f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:58:28Z" finished-at="2017-02-24T16:58:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="880" started-at="2017-02-24T16:58:28Z" finished-at="2017-02-24T16:58:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="defaultButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="defaultButtonTest" duration-ms="210" started-at="2017-02-24T16:58:29Z" data-provider="Default Button Test Data" finished-at="2017-02-24T16:58:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-left-style]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@47caedad]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:58:29Z" finished-at="2017-02-24T16:58:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="741" started-at="2017-02-24T16:58:29Z" finished-at="2017-02-24T16:58:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="defaultButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="defaultButtonTest" duration-ms="213" started-at="2017-02-24T16:58:30Z" data-provider="Default Button Test Data" finished-at="2017-02-24T16:58:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-right-style]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@7139992f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="741" started-at="2017-02-24T16:58:30Z" finished-at="2017-02-24T16:58:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:30Z" finished-at="2017-02-24T16:58:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="defaultButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="defaultButtonTest" duration-ms="216" started-at="2017-02-24T16:58:31Z" data-provider="Default Button Test Data" finished-at="2017-02-24T16:58:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-top-color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@69504ae9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="734" started-at="2017-02-24T16:58:31Z" finished-at="2017-02-24T16:58:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:31Z" finished-at="2017-02-24T16:58:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="defaultButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="defaultButtonTest" duration-ms="210" started-at="2017-02-24T16:58:32Z" data-provider="Default Button Test Data" finished-at="2017-02-24T16:58:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-bottom-color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@387a8303]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:32Z" finished-at="2017-02-24T16:58:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="709" started-at="2017-02-24T16:58:32Z" finished-at="2017-02-24T16:58:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="defaultButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="defaultButtonTest" duration-ms="208" started-at="2017-02-24T16:58:33Z" data-provider="Default Button Test Data" finished-at="2017-02-24T16:58:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-left-color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@28cda624]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:58:33Z" finished-at="2017-02-24T16:58:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="703" started-at="2017-02-24T16:58:33Z" finished-at="2017-02-24T16:58:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="defaultButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="defaultButtonTest" duration-ms="200" started-at="2017-02-24T16:58:34Z" data-provider="Default Button Test Data" finished-at="2017-02-24T16:58:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-right-color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@1500b2f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:34Z" finished-at="2017-02-24T16:58:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="782" started-at="2017-02-24T16:58:34Z" finished-at="2017-02-24T16:58:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="defaultButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="defaultButtonTest" duration-ms="211" started-at="2017-02-24T16:58:35Z" data-provider="Default Button Test Data" finished-at="2017-02-24T16:58:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-bottom-left-radius]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@7eecb5b8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:35Z" finished-at="2017-02-24T16:58:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="712" started-at="2017-02-24T16:58:35Z" finished-at="2017-02-24T16:58:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="defaultButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="defaultButtonTest" duration-ms="206" started-at="2017-02-24T16:58:36Z" data-provider="Default Button Test Data" finished-at="2017-02-24T16:58:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-bottom-right-radius]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@126253fd]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:58:36Z" finished-at="2017-02-24T16:58:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="747" started-at="2017-02-24T16:58:36Z" finished-at="2017-02-24T16:58:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="defaultButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="defaultButtonTest" duration-ms="210" started-at="2017-02-24T16:58:37Z" data-provider="Default Button Test Data" finished-at="2017-02-24T16:58:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-top-left-radius]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@57db2b13]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:58:37Z" finished-at="2017-02-24T16:58:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="686" started-at="2017-02-24T16:58:37Z" finished-at="2017-02-24T16:58:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="defaultButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="defaultButtonTest" duration-ms="219" started-at="2017-02-24T16:58:37Z" data-provider="Default Button Test Data" finished-at="2017-02-24T16:58:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-top-right-radius]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@475c9c31]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="703" started-at="2017-02-24T16:58:38Z" finished-at="2017-02-24T16:58:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:38Z" finished-at="2017-02-24T16:58:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="defaultButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="defaultButtonTest" duration-ms="213" started-at="2017-02-24T16:58:38Z" data-provider="Default Button Test Data" finished-at="2017-02-24T16:58:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[text-decoration]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@5c86a017]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="752" started-at="2017-02-24T16:58:39Z" finished-at="2017-02-24T16:58:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:39Z" finished-at="2017-02-24T16:58:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="defaultButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="defaultButtonTest" duration-ms="204" started-at="2017-02-24T16:58:39Z" data-provider="Default Button Test Data" finished-at="2017-02-24T16:58:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[text-overflow]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@5c7bfdc1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="692" started-at="2017-02-24T16:58:40Z" finished-at="2017-02-24T16:58:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:40Z" finished-at="2017-02-24T16:58:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="defaultButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="defaultButtonTest" duration-ms="196" started-at="2017-02-24T16:58:40Z" data-provider="Default Button Test Data" finished-at="2017-02-24T16:58:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[white-space]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@5276d6ee]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="717" started-at="2017-02-24T16:58:40Z" finished-at="2017-02-24T16:58:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:40Z" finished-at="2017-02-24T16:58:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="defaultButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="defaultButtonTest" duration-ms="212" started-at="2017-02-24T16:58:41Z" data-provider="Default Button Test Data" finished-at="2017-02-24T16:58:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[overflow-x]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@71687585]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:41Z" finished-at="2017-02-24T16:58:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="774" started-at="2017-02-24T16:58:41Z" finished-at="2017-02-24T16:58:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="defaultButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="defaultButtonTest" duration-ms="213" started-at="2017-02-24T16:58:42Z" data-provider="Default Button Test Data" finished-at="2017-02-24T16:58:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[overflow-y]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@1807f5a7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="709" started-at="2017-02-24T16:58:42Z" finished-at="2017-02-24T16:58:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:42Z" finished-at="2017-02-24T16:58:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="defaultButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="defaultButtonTest" duration-ms="219" started-at="2017-02-24T16:58:43Z" data-provider="Default Button Test Data" finished-at="2017-02-24T16:58:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[display]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@1b919693]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="756" started-at="2017-02-24T16:58:43Z" finished-at="2017-02-24T16:58:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:43Z" finished-at="2017-02-24T16:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="defaultButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="defaultButtonTest" duration-ms="202" started-at="2017-02-24T16:58:44Z" data-provider="Default Button Test Data" finished-at="2017-02-24T16:58:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[vertical-align]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@7fb4f2a9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:44Z" finished-at="2017-02-24T16:58:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="680" started-at="2017-02-24T16:58:44Z" finished-at="2017-02-24T16:58:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="defaultButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="defaultButtonTest" duration-ms="209" started-at="2017-02-24T16:58:45Z" data-provider="Default Button Test Data" finished-at="2017-02-24T16:58:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[cursor]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@4dc27487]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:45Z" finished-at="2017-02-24T16:58:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="708" started-at="2017-02-24T16:58:45Z" finished-at="2017-02-24T16:58:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="defaultButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="defaultButtonTest" duration-ms="223" started-at="2017-02-24T16:58:46Z" data-provider="Default Button Test Data" finished-at="2017-02-24T16:58:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[font-size]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@6a4f1a55]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:46Z" finished-at="2017-02-24T16:58:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="705" started-at="2017-02-24T16:58:46Z" finished-at="2017-02-24T16:58:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="defaultButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="defaultButtonTest" duration-ms="209" started-at="2017-02-24T16:58:47Z" data-provider="Default Button Test Data" finished-at="2017-02-24T16:58:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[height]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@7dfd3c81]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="769" started-at="2017-02-24T16:58:47Z" finished-at="2017-02-24T16:58:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:47Z" finished-at="2017-02-24T16:58:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="defaultButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="defaultButtonTest" duration-ms="211" started-at="2017-02-24T16:58:48Z" data-provider="Default Button Test Data" finished-at="2017-02-24T16:58:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[line-height]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@2584b82d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="685" started-at="2017-02-24T16:58:48Z" finished-at="2017-02-24T16:58:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:48Z" finished-at="2017-02-24T16:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="defaultButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="defaultButtonTest" duration-ms="201" started-at="2017-02-24T16:58:49Z" data-provider="Default Button Test Data" finished-at="2017-02-24T16:58:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-top]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@7bbc8656]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:49Z" finished-at="2017-02-24T16:58:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="695" started-at="2017-02-24T16:58:49Z" finished-at="2017-02-24T16:58:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="defaultButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="defaultButtonTest" duration-ms="300" started-at="2017-02-24T16:58:50Z" data-provider="Default Button Test Data" finished-at="2017-02-24T16:58:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-bottom]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@6933b6c6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:58:50Z" finished-at="2017-02-24T16:58:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="712" started-at="2017-02-24T16:58:50Z" finished-at="2017-02-24T16:58:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="defaultButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="defaultButtonTest" duration-ms="203" started-at="2017-02-24T16:58:51Z" data-provider="Default Button Test Data" finished-at="2017-02-24T16:58:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-left]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@7d3e8655]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="753" started-at="2017-02-24T16:58:51Z" finished-at="2017-02-24T16:58:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.defaultButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:51Z" finished-at="2017-02-24T16:58:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="defaultButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="defaultButtonTest" duration-ms="232" started-at="2017-02-24T16:58:52Z" data-provider="Default Button Test Data" finished-at="2017-02-24T16:58:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-right]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@7dfb0c0f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:58:52Z" finished-at="2017-02-24T16:58:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="706" started-at="2017-02-24T16:58:52Z" finished-at="2017-02-24T16:58:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.largeButtonDisabledStateTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="largeButtonDisabledStateTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="largeButtonDisabledStateTest" duration-ms="227" started-at="2017-02-24T16:58:52Z" data-provider="Default Button-Disabled Test Data" finished-at="2017-02-24T16:58:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@1f9f6368]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- largeButtonDisabledStateTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:53Z" finished-at="2017-02-24T16:58:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="728" started-at="2017-02-24T16:58:53Z" finished-at="2017-02-24T16:58:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.largeButtonDisabledStateTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="largeButtonDisabledStateTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="largeButtonDisabledStateTest" duration-ms="214" started-at="2017-02-24T16:58:53Z" data-provider="Default Button-Disabled Test Data" finished-at="2017-02-24T16:58:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[background-color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@1c9b0314]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- largeButtonDisabledStateTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:58:54Z" finished-at="2017-02-24T16:58:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="684" started-at="2017-02-24T16:58:54Z" finished-at="2017-02-24T16:58:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.largeButtonDisabledStateTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="largeButtonDisabledStateTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="largeButtonDisabledStateTest" duration-ms="223" started-at="2017-02-24T16:58:54Z" data-provider="Default Button-Disabled Test Data" finished-at="2017-02-24T16:58:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-top-width]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@45385f75]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- largeButtonDisabledStateTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="726" started-at="2017-02-24T16:58:55Z" finished-at="2017-02-24T16:58:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.largeButtonDisabledStateTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:55Z" finished-at="2017-02-24T16:58:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="largeButtonDisabledStateTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="largeButtonDisabledStateTest" duration-ms="204" started-at="2017-02-24T16:58:55Z" data-provider="Default Button-Disabled Test Data" finished-at="2017-02-24T16:58:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-bottom-width]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@49c90a9c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- largeButtonDisabledStateTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:55Z" finished-at="2017-02-24T16:58:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="684" started-at="2017-02-24T16:58:55Z" finished-at="2017-02-24T16:58:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.largeButtonDisabledStateTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="largeButtonDisabledStateTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="largeButtonDisabledStateTest" duration-ms="218" started-at="2017-02-24T16:58:56Z" data-provider="Default Button-Disabled Test Data" finished-at="2017-02-24T16:58:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-left-width]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@2d29b4ee]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- largeButtonDisabledStateTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="759" started-at="2017-02-24T16:58:56Z" finished-at="2017-02-24T16:58:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.largeButtonDisabledStateTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:56Z" finished-at="2017-02-24T16:58:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="largeButtonDisabledStateTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="largeButtonDisabledStateTest" duration-ms="205" started-at="2017-02-24T16:58:57Z" data-provider="Default Button-Disabled Test Data" finished-at="2017-02-24T16:58:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-right-width]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@69ee81fc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- largeButtonDisabledStateTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="777" started-at="2017-02-24T16:58:57Z" finished-at="2017-02-24T16:58:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.largeButtonDisabledStateTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:57Z" finished-at="2017-02-24T16:58:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="largeButtonDisabledStateTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="largeButtonDisabledStateTest" duration-ms="204" started-at="2017-02-24T16:58:58Z" data-provider="Default Button-Disabled Test Data" finished-at="2017-02-24T16:58:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[box-shadow]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@6e2aa843]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- largeButtonDisabledStateTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="715" started-at="2017-02-24T16:58:58Z" finished-at="2017-02-24T16:58:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.largeButtonDisabledStateTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:58Z" finished-at="2017-02-24T16:58:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="largeButtonDisabledStateTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="largeButtonDisabledStateTest" duration-ms="218" started-at="2017-02-24T16:58:59Z" data-provider="Default Button-Disabled Test Data" finished-at="2017-02-24T16:58:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[cursor]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@6f36c2f0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- largeButtonDisabledStateTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:58:59Z" finished-at="2017-02-24T16:58:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="772" started-at="2017-02-24T16:58:59Z" finished-at="2017-02-24T16:59:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.largeButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="largeButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="largeButtonTest" duration-ms="229" started-at="2017-02-24T16:59:00Z" data-provider="Large Button Test Data" finished-at="2017-02-24T16:59:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[font-size]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@f58853c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- largeButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:00Z" finished-at="2017-02-24T16:59:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="743" started-at="2017-02-24T16:59:00Z" finished-at="2017-02-24T16:59:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.largeButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="largeButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="largeButtonTest" duration-ms="201" started-at="2017-02-24T16:59:01Z" data-provider="Large Button Test Data" finished-at="2017-02-24T16:59:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[height]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@1224144a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- largeButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:59:01Z" finished-at="2017-02-24T16:59:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="718" started-at="2017-02-24T16:59:01Z" finished-at="2017-02-24T16:59:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.largeButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="largeButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="largeButtonTest" duration-ms="207" started-at="2017-02-24T16:59:02Z" data-provider="Large Button Test Data" finished-at="2017-02-24T16:59:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[line-height]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@29f7cefd]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- largeButtonTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="752" started-at="2017-02-24T16:59:02Z" finished-at="2017-02-24T16:59:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.largeButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:02Z" finished-at="2017-02-24T16:59:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="largeButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="largeButtonTest" duration-ms="206" started-at="2017-02-24T16:59:03Z" data-provider="Large Button Test Data" finished-at="2017-02-24T16:59:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-top]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@700fb871]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- largeButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:59:03Z" finished-at="2017-02-24T16:59:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="740" started-at="2017-02-24T16:59:03Z" finished-at="2017-02-24T16:59:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.largeButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="largeButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="largeButtonTest" duration-ms="210" started-at="2017-02-24T16:59:04Z" data-provider="Large Button Test Data" finished-at="2017-02-24T16:59:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-bottom]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@3b35a229]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- largeButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:59:04Z" finished-at="2017-02-24T16:59:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="875" started-at="2017-02-24T16:59:04Z" finished-at="2017-02-24T16:59:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.largeButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="largeButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="largeButtonTest" duration-ms="213" started-at="2017-02-24T16:59:05Z" data-provider="Large Button Test Data" finished-at="2017-02-24T16:59:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-left]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@9816741]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- largeButtonTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="686" started-at="2017-02-24T16:59:05Z" finished-at="2017-02-24T16:59:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.largeButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:05Z" finished-at="2017-02-24T16:59:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="largeButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="largeButtonTest" duration-ms="205" started-at="2017-02-24T16:59:06Z" data-provider="Large Button Test Data" finished-at="2017-02-24T16:59:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-right]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@1e16c0aa]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- largeButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:06Z" finished-at="2017-02-24T16:59:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="1916" started-at="2017-02-24T16:59:06Z" finished-at="2017-02-24T16:59:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.linkButtonFocusStateTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="linkButtonFocusStateTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="linkButtonFocusStateTest" duration-ms="1622" started-at="2017-02-24T16:59:08Z" data-provider="Link Button-Focus state Test Data" finished-at="2017-02-24T16:59:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@60db1c0e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkButtonFocusStateTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:10Z" finished-at="2017-02-24T16:59:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="793" started-at="2017-02-24T16:59:10Z" finished-at="2017-02-24T16:59:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.linkButtonFocusStateTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="linkButtonFocusStateTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="linkButtonFocusStateTest" duration-ms="1803" started-at="2017-02-24T16:59:10Z" data-provider="Link Button-Focus state Test Data" finished-at="2017-02-24T16:59:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[text-decoration]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@3e78b6a5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkButtonFocusStateTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:59:12Z" finished-at="2017-02-24T16:59:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="759" started-at="2017-02-24T16:59:12Z" finished-at="2017-02-24T16:59:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.linkButtonHoverStateTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="linkButtonHoverStateTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="linkButtonHoverStateTest" duration-ms="632" started-at="2017-02-24T16:59:13Z" data-provider="Link Button-Hover state Test Data" finished-at="2017-02-24T16:59:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@769a1df5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkButtonHoverStateTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="697" started-at="2017-02-24T16:59:14Z" finished-at="2017-02-24T16:59:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.linkButtonHoverStateTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:14Z" finished-at="2017-02-24T16:59:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="linkButtonHoverStateTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="linkButtonHoverStateTest" duration-ms="733" started-at="2017-02-24T16:59:14Z" data-provider="Link Button-Hover state Test Data" finished-at="2017-02-24T16:59:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[text-decoration]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@41f69e84]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkButtonHoverStateTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:15Z" finished-at="2017-02-24T16:59:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="711" started-at="2017-02-24T16:59:15Z" finished-at="2017-02-24T16:59:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.linkButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="linkButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="linkButtonTest" duration-ms="209" started-at="2017-02-24T16:59:16Z" data-provider="Link Button Test Data" finished-at="2017-02-24T16:59:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@7975d1d8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:59:16Z" finished-at="2017-02-24T16:59:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="738" started-at="2017-02-24T16:59:16Z" finished-at="2017-02-24T16:59:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.linkButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="linkButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="linkButtonTest" duration-ms="218" started-at="2017-02-24T16:59:17Z" data-provider="Link Button Test Data" finished-at="2017-02-24T16:59:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[background-color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@2438dcd]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkButtonTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="736" started-at="2017-02-24T16:59:17Z" finished-at="2017-02-24T16:59:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.linkButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:17Z" finished-at="2017-02-24T16:59:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="linkButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="linkButtonTest" duration-ms="197" started-at="2017-02-24T16:59:18Z" data-provider="Link Button Test Data" finished-at="2017-02-24T16:59:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[background-image]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@24105dc5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkButtonTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="777" started-at="2017-02-24T16:59:18Z" finished-at="2017-02-24T16:59:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.linkButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:18Z" finished-at="2017-02-24T16:59:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="linkButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="linkButtonTest" duration-ms="202" started-at="2017-02-24T16:59:19Z" data-provider="Link Button Test Data" finished-at="2017-02-24T16:59:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-top-width]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@5167f57d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:59:19Z" finished-at="2017-02-24T16:59:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="706" started-at="2017-02-24T16:59:19Z" finished-at="2017-02-24T16:59:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.linkButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="linkButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="linkButtonTest" duration-ms="207" started-at="2017-02-24T16:59:19Z" data-provider="Link Button Test Data" finished-at="2017-02-24T16:59:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-bottom-width]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@64b0598]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:20Z" finished-at="2017-02-24T16:59:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="751" started-at="2017-02-24T16:59:20Z" finished-at="2017-02-24T16:59:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.linkButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="linkButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="linkButtonTest" duration-ms="202" started-at="2017-02-24T16:59:20Z" data-provider="Link Button Test Data" finished-at="2017-02-24T16:59:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-left-width]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@18f8cd79]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:21Z" finished-at="2017-02-24T16:59:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="691" started-at="2017-02-24T16:59:21Z" finished-at="2017-02-24T16:59:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.linkButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="linkButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="linkButtonTest" duration-ms="222" started-at="2017-02-24T16:59:21Z" data-provider="Link Button Test Data" finished-at="2017-02-24T16:59:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-right-width]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@3e2055d6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:59:22Z" finished-at="2017-02-24T16:59:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="764" started-at="2017-02-24T16:59:22Z" finished-at="2017-02-24T16:59:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.linkButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="linkButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="linkButtonTest" duration-ms="251" started-at="2017-02-24T16:59:22Z" data-provider="Link Button Test Data" finished-at="2017-02-24T16:59:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[text-decoration]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@50029372]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkButtonTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="722" started-at="2017-02-24T16:59:23Z" finished-at="2017-02-24T16:59:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.linkButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:23Z" finished-at="2017-02-24T16:59:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="linkButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="linkButtonTest" duration-ms="200" started-at="2017-02-24T16:59:23Z" data-provider="Link Button Test Data" finished-at="2017-02-24T16:59:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[cursor]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@e3b3b2f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:24Z" finished-at="2017-02-24T16:59:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="809" started-at="2017-02-24T16:59:24Z" finished-at="2017-02-24T16:59:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.linkButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="linkButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="linkButtonTest" duration-ms="213" started-at="2017-02-24T16:59:24Z" data-provider="Link Button Test Data" finished-at="2017-02-24T16:59:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-top]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@50f6ac94]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkButtonTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="1492" started-at="2017-02-24T16:59:25Z" finished-at="2017-02-24T16:59:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.linkButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:25Z" finished-at="2017-02-24T16:59:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="linkButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="linkButtonTest" duration-ms="219" started-at="2017-02-24T16:59:26Z" data-provider="Link Button Test Data" finished-at="2017-02-24T16:59:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-bottom]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@6cc4cdb9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:59:26Z" finished-at="2017-02-24T16:59:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="710" started-at="2017-02-24T16:59:26Z" finished-at="2017-02-24T16:59:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.linkButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="linkButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="linkButtonTest" duration-ms="196" started-at="2017-02-24T16:59:27Z" data-provider="Link Button Test Data" finished-at="2017-02-24T16:59:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-left]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@28194a50]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:27Z" finished-at="2017-02-24T16:59:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="848" started-at="2017-02-24T16:59:27Z" finished-at="2017-02-24T16:59:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.linkButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="linkButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="linkButtonTest" duration-ms="220" started-at="2017-02-24T16:59:28Z" data-provider="Link Button Test Data" finished-at="2017-02-24T16:59:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-right]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@7f2cfe3f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:28Z" finished-at="2017-02-24T16:59:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="679" started-at="2017-02-24T16:59:28Z" finished-at="2017-02-24T16:59:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonDisabledStateTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="primaryButtonDisabledStateTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="primaryButtonDisabledStateTest" duration-ms="216" started-at="2017-02-24T16:59:29Z" data-provider="Primary Button-Disabled Test Data" finished-at="2017-02-24T16:59:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@536dbea0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonDisabledStateTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="679" started-at="2017-02-24T16:59:29Z" finished-at="2017-02-24T16:59:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonDisabledStateTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:29Z" finished-at="2017-02-24T16:59:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="primaryButtonDisabledStateTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="primaryButtonDisabledStateTest" duration-ms="204" started-at="2017-02-24T16:59:30Z" data-provider="Primary Button-Disabled Test Data" finished-at="2017-02-24T16:59:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[background-color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@47c81abf]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonDisabledStateTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="703" started-at="2017-02-24T16:59:30Z" finished-at="2017-02-24T16:59:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonDisabledStateTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:30Z" finished-at="2017-02-24T16:59:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="primaryButtonDisabledStateTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="primaryButtonDisabledStateTest" duration-ms="197" started-at="2017-02-24T16:59:31Z" data-provider="Primary Button-Disabled Test Data" finished-at="2017-02-24T16:59:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-top-width]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@776a6d9b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonDisabledStateTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:31Z" finished-at="2017-02-24T16:59:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="717" started-at="2017-02-24T16:59:31Z" finished-at="2017-02-24T16:59:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonDisabledStateTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="primaryButtonDisabledStateTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="primaryButtonDisabledStateTest" duration-ms="215" started-at="2017-02-24T16:59:32Z" data-provider="Primary Button-Disabled Test Data" finished-at="2017-02-24T16:59:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-bottom-width]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@21d03963]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonDisabledStateTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:32Z" finished-at="2017-02-24T16:59:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="679" started-at="2017-02-24T16:59:32Z" finished-at="2017-02-24T16:59:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonDisabledStateTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="primaryButtonDisabledStateTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="primaryButtonDisabledStateTest" duration-ms="197" started-at="2017-02-24T16:59:33Z" data-provider="Primary Button-Disabled Test Data" finished-at="2017-02-24T16:59:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-left-width]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@1f760b47]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonDisabledStateTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="697" started-at="2017-02-24T16:59:33Z" finished-at="2017-02-24T16:59:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonDisabledStateTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:33Z" finished-at="2017-02-24T16:59:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="primaryButtonDisabledStateTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="primaryButtonDisabledStateTest" duration-ms="196" started-at="2017-02-24T16:59:33Z" data-provider="Primary Button-Disabled Test Data" finished-at="2017-02-24T16:59:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-right-width]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@18ece7f4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonDisabledStateTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="669" started-at="2017-02-24T16:59:34Z" finished-at="2017-02-24T16:59:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonDisabledStateTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:34Z" finished-at="2017-02-24T16:59:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="primaryButtonDisabledStateTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="primaryButtonDisabledStateTest" duration-ms="214" started-at="2017-02-24T16:59:34Z" data-provider="Primary Button-Disabled Test Data" finished-at="2017-02-24T16:59:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[box-shadow]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@3cce57c7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonDisabledStateTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:59:34Z" finished-at="2017-02-24T16:59:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="739" started-at="2017-02-24T16:59:34Z" finished-at="2017-02-24T16:59:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonDisabledStateTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="primaryButtonDisabledStateTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="primaryButtonDisabledStateTest" duration-ms="205" started-at="2017-02-24T16:59:35Z" data-provider="Primary Button-Disabled Test Data" finished-at="2017-02-24T16:59:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[text-decoration]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@1cf56a1c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonDisabledStateTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:35Z" finished-at="2017-02-24T16:59:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="678" started-at="2017-02-24T16:59:35Z" finished-at="2017-02-24T16:59:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonDisabledStateTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="primaryButtonDisabledStateTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="primaryButtonDisabledStateTest" duration-ms="204" started-at="2017-02-24T16:59:36Z" data-provider="Primary Button-Disabled Test Data" finished-at="2017-02-24T16:59:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[cursor]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@33f676f6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonDisabledStateTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:36Z" finished-at="2017-02-24T16:59:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="683" started-at="2017-02-24T16:59:36Z" finished-at="2017-02-24T16:59:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonFocusStateTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="primaryButtonFocusStateTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="primaryButtonFocusStateTest" duration-ms="701" started-at="2017-02-24T16:59:37Z" data-provider="Primary Button-Focus state Test Data" finished-at="2017-02-24T16:59:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@4c5ae43b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonFocusStateTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:59:38Z" finished-at="2017-02-24T16:59:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="873" started-at="2017-02-24T16:59:38Z" finished-at="2017-02-24T16:59:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonFocusStateTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="primaryButtonFocusStateTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="primaryButtonFocusStateTest" duration-ms="647" started-at="2017-02-24T16:59:39Z" data-provider="Primary Button-Focus state Test Data" finished-at="2017-02-24T16:59:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[background-color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@264f218]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonFocusStateTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:59:39Z" finished-at="2017-02-24T16:59:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="690" started-at="2017-02-24T16:59:39Z" finished-at="2017-02-24T16:59:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonHoverStateTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="primaryButtonHoverStateTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="primaryButtonHoverStateTest" duration-ms="665" started-at="2017-02-24T16:59:40Z" data-provider="Primary Button-Hover state Test Data" finished-at="2017-02-24T16:59:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@3576ddc2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonHoverStateTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="802" started-at="2017-02-24T16:59:41Z" finished-at="2017-02-24T16:59:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonHoverStateTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:41Z" finished-at="2017-02-24T16:59:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="primaryButtonHoverStateTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="primaryButtonHoverStateTest" duration-ms="602" started-at="2017-02-24T16:59:41Z" data-provider="Primary Button-Hover state Test Data" finished-at="2017-02-24T16:59:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[background-color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@35b74c5c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonHoverStateTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:59:42Z" finished-at="2017-02-24T16:59:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="731" started-at="2017-02-24T16:59:42Z" finished-at="2017-02-24T16:59:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="primaryButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="primaryButtonTest" duration-ms="200" started-at="2017-02-24T16:59:43Z" data-provider="Primary Button Test Data" finished-at="2017-02-24T16:59:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@2e570ded]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:43Z" finished-at="2017-02-24T16:59:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="693" started-at="2017-02-24T16:59:43Z" finished-at="2017-02-24T16:59:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="primaryButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="primaryButtonTest" duration-ms="206" started-at="2017-02-24T16:59:44Z" data-provider="Primary Button Test Data" finished-at="2017-02-24T16:59:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[background-color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@b86de0d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:59:44Z" finished-at="2017-02-24T16:59:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="713" started-at="2017-02-24T16:59:44Z" finished-at="2017-02-24T16:59:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="primaryButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="primaryButtonTest" duration-ms="205" started-at="2017-02-24T16:59:45Z" data-provider="Primary Button Test Data" finished-at="2017-02-24T16:59:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-top-style]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@81d9a72]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:59:45Z" finished-at="2017-02-24T16:59:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="762" started-at="2017-02-24T16:59:45Z" finished-at="2017-02-24T16:59:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="primaryButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="primaryButtonTest" duration-ms="2739" started-at="2017-02-24T16:59:45Z" data-provider="Primary Button Test Data" finished-at="2017-02-24T16:59:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-bottom-style]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@747f281]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="764" started-at="2017-02-24T16:59:48Z" finished-at="2017-02-24T16:59:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:48Z" finished-at="2017-02-24T16:59:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="primaryButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="primaryButtonTest" duration-ms="215" started-at="2017-02-24T16:59:49Z" data-provider="Primary Button Test Data" finished-at="2017-02-24T16:59:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-left-style]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@1169afe1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:59:49Z" finished-at="2017-02-24T16:59:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="704" started-at="2017-02-24T16:59:49Z" finished-at="2017-02-24T16:59:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="primaryButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="primaryButtonTest" duration-ms="196" started-at="2017-02-24T16:59:50Z" data-provider="Primary Button Test Data" finished-at="2017-02-24T16:59:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-right-style]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@2ca26d77]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:50Z" finished-at="2017-02-24T16:59:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="733" started-at="2017-02-24T16:59:50Z" finished-at="2017-02-24T16:59:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="primaryButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="primaryButtonTest" duration-ms="209" started-at="2017-02-24T16:59:51Z" data-provider="Primary Button Test Data" finished-at="2017-02-24T16:59:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-bottom-left-radius]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@4808bc9b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:59:51Z" finished-at="2017-02-24T16:59:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="673" started-at="2017-02-24T16:59:51Z" finished-at="2017-02-24T16:59:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="primaryButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="primaryButtonTest" duration-ms="212" started-at="2017-02-24T16:59:52Z" data-provider="Primary Button Test Data" finished-at="2017-02-24T16:59:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-bottom-right-radius]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@70e38ce1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="791" started-at="2017-02-24T16:59:52Z" finished-at="2017-02-24T16:59:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:52Z" finished-at="2017-02-24T16:59:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="primaryButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="primaryButtonTest" duration-ms="212" started-at="2017-02-24T16:59:53Z" data-provider="Primary Button Test Data" finished-at="2017-02-24T16:59:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-top-left-radius]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@2ca923bb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="699" started-at="2017-02-24T16:59:53Z" finished-at="2017-02-24T16:59:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:53Z" finished-at="2017-02-24T16:59:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="primaryButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="primaryButtonTest" duration-ms="202" started-at="2017-02-24T16:59:54Z" data-provider="Primary Button Test Data" finished-at="2017-02-24T16:59:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-top-right-radius]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@13df2a8c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="718" started-at="2017-02-24T16:59:54Z" finished-at="2017-02-24T16:59:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:54Z" finished-at="2017-02-24T16:59:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="primaryButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="primaryButtonTest" duration-ms="203" started-at="2017-02-24T16:59:55Z" data-provider="Primary Button Test Data" finished-at="2017-02-24T16:59:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[text-decoration]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@1ebea008]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:59:55Z" finished-at="2017-02-24T16:59:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="747" started-at="2017-02-24T16:59:55Z" finished-at="2017-02-24T16:59:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="primaryButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="primaryButtonTest" duration-ms="215" started-at="2017-02-24T16:59:56Z" data-provider="Primary Button Test Data" finished-at="2017-02-24T16:59:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[text-overflow]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@72d6b3ba]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:59:56Z" finished-at="2017-02-24T16:59:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="723" started-at="2017-02-24T16:59:56Z" finished-at="2017-02-24T16:59:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="primaryButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="primaryButtonTest" duration-ms="209" started-at="2017-02-24T16:59:56Z" data-provider="Primary Button Test Data" finished-at="2017-02-24T16:59:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[white-space]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@1787f2a0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:57Z" finished-at="2017-02-24T16:59:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="743" started-at="2017-02-24T16:59:57Z" finished-at="2017-02-24T16:59:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="primaryButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="primaryButtonTest" duration-ms="204" started-at="2017-02-24T16:59:57Z" data-provider="Primary Button Test Data" finished-at="2017-02-24T16:59:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[display]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@7de62196]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:59:58Z" finished-at="2017-02-24T16:59:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="775" started-at="2017-02-24T16:59:58Z" finished-at="2017-02-24T16:59:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="primaryButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="primaryButtonTest" duration-ms="199" started-at="2017-02-24T16:59:58Z" data-provider="Primary Button Test Data" finished-at="2017-02-24T16:59:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[vertical-align]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@163370c2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:59:59Z" finished-at="2017-02-24T16:59:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="733" started-at="2017-02-24T16:59:59Z" finished-at="2017-02-24T16:59:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="primaryButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="primaryButtonTest" duration-ms="211" started-at="2017-02-24T16:59:59Z" data-provider="Primary Button Test Data" finished-at="2017-02-24T17:00:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[cursor]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@51bf5add]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="689" started-at="2017-02-24T17:00:00Z" finished-at="2017-02-24T17:00:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:00Z" finished-at="2017-02-24T17:00:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="primaryButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="primaryButtonTest" duration-ms="234" started-at="2017-02-24T17:00:00Z" data-provider="Primary Button Test Data" finished-at="2017-02-24T17:00:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[font-size]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@7905a0b8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:00Z" finished-at="2017-02-24T17:00:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="739" started-at="2017-02-24T17:00:00Z" finished-at="2017-02-24T17:00:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="primaryButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="primaryButtonTest" duration-ms="200" started-at="2017-02-24T17:00:01Z" data-provider="Primary Button Test Data" finished-at="2017-02-24T17:00:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[height]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@35a3d49f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:01Z" finished-at="2017-02-24T17:00:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="714" started-at="2017-02-24T17:00:01Z" finished-at="2017-02-24T17:00:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="primaryButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="primaryButtonTest" duration-ms="203" started-at="2017-02-24T17:00:02Z" data-provider="Primary Button Test Data" finished-at="2017-02-24T17:00:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[line-height]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@389b0789]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:02Z" finished-at="2017-02-24T17:00:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="733" started-at="2017-02-24T17:00:02Z" finished-at="2017-02-24T17:00:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="primaryButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="primaryButtonTest" duration-ms="203" started-at="2017-02-24T17:00:03Z" data-provider="Primary Button Test Data" finished-at="2017-02-24T17:00:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-top]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@13d9cbf5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:00:03Z" finished-at="2017-02-24T17:00:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="670" started-at="2017-02-24T17:00:03Z" finished-at="2017-02-24T17:00:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="primaryButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="primaryButtonTest" duration-ms="204" started-at="2017-02-24T17:00:04Z" data-provider="Primary Button Test Data" finished-at="2017-02-24T17:00:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-bottom]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@478db956]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:04Z" finished-at="2017-02-24T17:00:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="718" started-at="2017-02-24T17:00:04Z" finished-at="2017-02-24T17:00:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="primaryButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="primaryButtonTest" duration-ms="209" started-at="2017-02-24T17:00:05Z" data-provider="Primary Button Test Data" finished-at="2017-02-24T17:00:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-left]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@6ca18a14]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:05Z" finished-at="2017-02-24T17:00:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="691" started-at="2017-02-24T17:00:05Z" finished-at="2017-02-24T17:00:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.primaryButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="primaryButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="primaryButtonTest" duration-ms="206" started-at="2017-02-24T17:00:06Z" data-provider="Primary Button Test Data" finished-at="2017-02-24T17:00:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-right]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@c667f46]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primaryButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:00:06Z" finished-at="2017-02-24T17:00:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="670" started-at="2017-02-24T17:00:06Z" finished-at="2017-02-24T17:00:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.smallButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="smallButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="smallButtonTest" duration-ms="221" started-at="2017-02-24T17:00:07Z" data-provider="Small Button Test Data" finished-at="2017-02-24T17:00:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[font-size]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@651aed93]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smallButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:07Z" finished-at="2017-02-24T17:00:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="709" started-at="2017-02-24T17:00:07Z" finished-at="2017-02-24T17:00:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.smallButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="smallButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="smallButtonTest" duration-ms="210" started-at="2017-02-24T17:00:08Z" data-provider="Small Button Test Data" finished-at="2017-02-24T17:00:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[height]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@4dd6fd0a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smallButtonTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="714" started-at="2017-02-24T17:00:08Z" finished-at="2017-02-24T17:00:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.smallButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:08Z" finished-at="2017-02-24T17:00:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="smallButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="smallButtonTest" duration-ms="210" started-at="2017-02-24T17:00:08Z" data-provider="Small Button Test Data" finished-at="2017-02-24T17:00:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[line-height]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@bb9e6dc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smallButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:09Z" finished-at="2017-02-24T17:00:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="722" started-at="2017-02-24T17:00:09Z" finished-at="2017-02-24T17:00:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.smallButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="smallButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="smallButtonTest" duration-ms="203" started-at="2017-02-24T17:00:09Z" data-provider="Small Button Test Data" finished-at="2017-02-24T17:00:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-top]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@5456afaa]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smallButtonTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="687" started-at="2017-02-24T17:00:10Z" finished-at="2017-02-24T17:00:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.smallButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:10Z" finished-at="2017-02-24T17:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="smallButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="smallButtonTest" duration-ms="220" started-at="2017-02-24T17:00:10Z" data-provider="Small Button Test Data" finished-at="2017-02-24T17:00:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-bottom]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@6692b6c6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smallButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:11Z" finished-at="2017-02-24T17:00:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="847" started-at="2017-02-24T17:00:11Z" finished-at="2017-02-24T17:00:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.smallButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="smallButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="smallButtonTest" duration-ms="227" started-at="2017-02-24T17:00:11Z" data-provider="Small Button Test Data" finished-at="2017-02-24T17:00:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-left]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@1cd629b3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smallButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:12Z" finished-at="2017-02-24T17:00:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="686" started-at="2017-02-24T17:00:12Z" finished-at="2017-02-24T17:00:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.smallButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="smallButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="smallButtonTest" duration-ms="323" started-at="2017-02-24T17:00:12Z" data-provider="Small Button Test Data" finished-at="2017-02-24T17:00:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-right]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@589da3f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smallButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:13Z" finished-at="2017-02-24T17:00:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="699" started-at="2017-02-24T17:00:13Z" finished-at="2017-02-24T17:00:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.xLargeButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xLargeButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="xLargeButtonTest" duration-ms="219" started-at="2017-02-24T17:00:13Z" data-provider="XLarge Button Test Data" finished-at="2017-02-24T17:00:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[font-size]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@28d18df5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xLargeButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:14Z" finished-at="2017-02-24T17:00:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="743" started-at="2017-02-24T17:00:14Z" finished-at="2017-02-24T17:00:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.xLargeButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xLargeButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="xLargeButtonTest" duration-ms="204" started-at="2017-02-24T17:00:14Z" data-provider="XLarge Button Test Data" finished-at="2017-02-24T17:00:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[height]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@934b6cb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xLargeButtonTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="730" started-at="2017-02-24T17:00:14Z" finished-at="2017-02-24T17:00:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.xLargeButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:14Z" finished-at="2017-02-24T17:00:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="xLargeButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="xLargeButtonTest" duration-ms="219" started-at="2017-02-24T17:00:15Z" data-provider="XLarge Button Test Data" finished-at="2017-02-24T17:00:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[line-height]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@55cf0d14]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xLargeButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:15Z" finished-at="2017-02-24T17:00:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="731" started-at="2017-02-24T17:00:15Z" finished-at="2017-02-24T17:00:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.xLargeButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xLargeButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="xLargeButtonTest" duration-ms="202" started-at="2017-02-24T17:00:16Z" data-provider="XLarge Button Test Data" finished-at="2017-02-24T17:00:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-top]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@3b74ac8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xLargeButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:16Z" finished-at="2017-02-24T17:00:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="720" started-at="2017-02-24T17:00:16Z" finished-at="2017-02-24T17:00:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.xLargeButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xLargeButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="xLargeButtonTest" duration-ms="213" started-at="2017-02-24T17:00:17Z" data-provider="XLarge Button Test Data" finished-at="2017-02-24T17:00:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-bottom]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@27adc16e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xLargeButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:00:17Z" finished-at="2017-02-24T17:00:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="709" started-at="2017-02-24T17:00:17Z" finished-at="2017-02-24T17:00:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.xLargeButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xLargeButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="xLargeButtonTest" duration-ms="219" started-at="2017-02-24T17:00:18Z" data-provider="XLarge Button Test Data" finished-at="2017-02-24T17:00:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-left]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@b83a9be]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xLargeButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:00:18Z" finished-at="2017-02-24T17:00:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="beforeMethod" is-config="true" duration-ms="740" started-at="2017-02-24T17:00:18Z" finished-at="2017-02-24T17:00:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ButtonsTest.xLargeButtonTest(java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xLargeButtonTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="xLargeButtonTest" duration-ms="228" started-at="2017-02-24T17:00:19Z" data-provider="XLarge Button Test Data" finished-at="2017-02-24T17:00:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-right]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@2609b277]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xLargeButtonTest -->
        <test-method status="PASS" signature="tearDown(java.lang.String)[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="tearDown" is-config="true" duration-ms="1116" started-at="2017-02-24T17:00:19Z" finished-at="2017-02-24T17:00:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[off]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ButtonsTest@2758fe70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:19Z" finished-at="2017-02-24T17:00:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- elementsTests.ButtonsTest -->
      <class name="elementsTests.ResponsiveUtilitiesTest">
        <test-method status="PASS" signature="setUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="setUp" is-config="true" duration-ms="10404" started-at="2017-02-24T16:57:16Z" finished-at="2017-02-24T16:57:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sauce]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OS X 10.11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[54.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[off]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[iOS]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[iPhone 6 Plus]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[9.3]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[safari]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[1.5.3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="beforeClass(java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="beforeClass" is-config="true" duration-ms="0" started-at="2017-02-24T16:57:26Z" finished-at="2017-02-24T16:57:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sauce]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 6 Plus]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="lgTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="lgTest" duration-ms="3566" started-at="2017-02-24T16:57:26Z" data-provider="LGTestData" finished-at="2017-02-24T16:57:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1024]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: lg-visible]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[lg-visible]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[rgba(139, 0, 139, 1)]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[block]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:57:26Z" finished-at="2017-02-24T16:57:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ResponsiveUtilitiesTest.lgTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:57:30Z" finished-at="2017-02-24T16:57:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:57:30Z" finished-at="2017-02-24T16:57:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ResponsiveUtilitiesTest.lgTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="lgTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="lgTest" duration-ms="1837" started-at="2017-02-24T16:57:30Z" data-provider="LGTestData" finished-at="2017-02-24T16:57:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1279]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: lg-visible]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[lg-visible]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[rgba(139, 0, 139, 1)]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[block]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:57:32Z" finished-at="2017-02-24T16:57:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:57:32Z" finished-at="2017-02-24T16:57:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ResponsiveUtilitiesTest.lgTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="lgTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="lgTest" duration-ms="1529" started-at="2017-02-24T16:57:32Z" data-provider="LGTestData" finished-at="2017-02-24T16:57:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1023]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: lg-visible]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[rgba(139, 0, 139, 1)]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[none]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgTest -->
        <test-method status="PASS" signature="lgTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="lgTest" duration-ms="1543" started-at="2017-02-24T16:57:33Z" data-provider="LGTestData" finished-at="2017-02-24T16:57:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1280]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: lg-visible]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[rgba(139, 0, 139, 1)]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[none]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:57:33Z" finished-at="2017-02-24T16:57:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:57:33Z" finished-at="2017-02-24T16:57:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ResponsiveUtilitiesTest.lgTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:57:35Z" finished-at="2017-02-24T16:57:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ResponsiveUtilitiesTest.lgTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="lgTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="lgTest" duration-ms="1794" started-at="2017-02-24T16:57:35Z" data-provider="LGTestData" finished-at="2017-02-24T16:57:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1024]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: lg-hidden]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[rgba(128, 128, 128, 1)]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[none]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:57:35Z" finished-at="2017-02-24T16:57:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:57:37Z" finished-at="2017-02-24T16:57:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="lgTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="lgTest" duration-ms="1547" started-at="2017-02-24T16:57:37Z" data-provider="LGTestData" finished-at="2017-02-24T16:57:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1279]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: lg-hidden]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[rgba(128, 128, 128, 1)]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[none]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:57:37Z" finished-at="2017-02-24T16:57:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ResponsiveUtilitiesTest.lgTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:57:38Z" finished-at="2017-02-24T16:57:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:57:38Z" finished-at="2017-02-24T16:57:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ResponsiveUtilitiesTest.lgTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="lgTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="lgTest" duration-ms="2024" started-at="2017-02-24T16:57:38Z" data-provider="LGTestData" finished-at="2017-02-24T16:57:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1023]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: lg-hidden]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[lg-hidden]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[rgba(128, 128, 128, 1)]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[inline-block]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:57:40Z" finished-at="2017-02-24T16:57:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:57:40Z" finished-at="2017-02-24T16:57:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ResponsiveUtilitiesTest.lgTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="lgTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="lgTest" duration-ms="1722" started-at="2017-02-24T16:57:40Z" data-provider="LGTestData" finished-at="2017-02-24T16:57:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1280]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: lg-hidden]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[lg-hidden]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[rgba(128, 128, 128, 1)]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[inline-block]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:57:42Z" finished-at="2017-02-24T16:57:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:57:42Z" finished-at="2017-02-24T16:57:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ResponsiveUtilitiesTest.mdTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="mdTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="mdTest" duration-ms="1814" started-at="2017-02-24T16:57:42Z" data-provider="MDTestData" finished-at="2017-02-24T16:57:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[768]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: md-visible]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[md-visible]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[rgba(0, 0, 255, 1)]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[block]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:57:44Z" finished-at="2017-02-24T16:57:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:57:44Z" finished-at="2017-02-24T16:57:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ResponsiveUtilitiesTest.mdTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="mdTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="mdTest" duration-ms="5162" started-at="2017-02-24T16:57:44Z" data-provider="MDTestData" finished-at="2017-02-24T16:57:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1023]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: md-visible]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[md-visible]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[rgba(0, 0, 255, 1)]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[block]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:57:49Z" finished-at="2017-02-24T16:57:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="mdTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="mdTest" duration-ms="2075" started-at="2017-02-24T16:57:49Z" data-provider="MDTestData" finished-at="2017-02-24T16:57:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[767]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: md-visible]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[rgba(0, 0, 255, 1)]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[none]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:57:49Z" finished-at="2017-02-24T16:57:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ResponsiveUtilitiesTest.mdTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:57:51Z" finished-at="2017-02-24T16:57:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:57:51Z" finished-at="2017-02-24T16:57:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ResponsiveUtilitiesTest.mdTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="mdTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="mdTest" duration-ms="1653" started-at="2017-02-24T16:57:51Z" data-provider="MDTestData" finished-at="2017-02-24T16:57:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1024]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: md-visible]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[rgba(0, 0, 255, 1)]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[none]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:57:53Z" finished-at="2017-02-24T16:57:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:57:53Z" finished-at="2017-02-24T16:57:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ResponsiveUtilitiesTest.mdTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="mdTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="mdTest" duration-ms="1965" started-at="2017-02-24T16:57:53Z" data-provider="MDTestData" finished-at="2017-02-24T16:57:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[768]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: md-hidden]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[rgba(128, 128, 128, 1)]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[none]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:57:55Z" finished-at="2017-02-24T16:57:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:57:55Z" finished-at="2017-02-24T16:57:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ResponsiveUtilitiesTest.mdTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="mdTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="mdTest" duration-ms="1510" started-at="2017-02-24T16:57:55Z" data-provider="MDTestData" finished-at="2017-02-24T16:57:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1023]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: md-hidden]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[rgba(128, 128, 128, 1)]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[none]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:57:56Z" finished-at="2017-02-24T16:57:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:57:56Z" finished-at="2017-02-24T16:57:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ResponsiveUtilitiesTest.mdTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="mdTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="mdTest" duration-ms="1743" started-at="2017-02-24T16:57:56Z" data-provider="MDTestData" finished-at="2017-02-24T16:57:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[767]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: md-hidden]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[md-hidden]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[rgba(128, 128, 128, 1)]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[inline-block]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:57:58Z" finished-at="2017-02-24T16:57:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="mdTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="mdTest" duration-ms="1775" started-at="2017-02-24T16:57:58Z" data-provider="MDTestData" finished-at="2017-02-24T16:58:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1024]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: md-hidden]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[md-hidden]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[rgba(128, 128, 128, 1)]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[inline-block]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:57:58Z" finished-at="2017-02-24T16:57:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ResponsiveUtilitiesTest.mdTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:58:00Z" finished-at="2017-02-24T16:58:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="smTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="smTest" duration-ms="1542" started-at="2017-02-24T16:58:00Z" data-provider="SMTestData" finished-at="2017-02-24T16:58:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[480]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: sm-visible]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[sm-visible]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[rgba(0, 128, 0, 1)]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[block]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:00Z" finished-at="2017-02-24T16:58:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ResponsiveUtilitiesTest.smTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:58:01Z" finished-at="2017-02-24T16:58:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ResponsiveUtilitiesTest.smTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:01Z" finished-at="2017-02-24T16:58:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="smTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="smTest" duration-ms="1359" started-at="2017-02-24T16:58:01Z" data-provider="SMTestData" finished-at="2017-02-24T16:58:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[767]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: sm-visible]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[sm-visible]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[rgba(0, 128, 0, 1)]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[block]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:58:03Z" finished-at="2017-02-24T16:58:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:03Z" finished-at="2017-02-24T16:58:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ResponsiveUtilitiesTest.smTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="smTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="smTest" duration-ms="1553" started-at="2017-02-24T16:58:03Z" data-provider="SMTestData" finished-at="2017-02-24T16:58:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[479]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: sm-visible]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[rgba(0, 128, 0, 1)]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[none]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:04Z" finished-at="2017-02-24T16:58:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:58:04Z" finished-at="2017-02-24T16:58:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ResponsiveUtilitiesTest.smTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="smTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="smTest" duration-ms="1589" started-at="2017-02-24T16:58:04Z" data-provider="SMTestData" finished-at="2017-02-24T16:58:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[768]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: sm-visible]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[rgba(0, 128, 0, 1)]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[none]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:58:06Z" finished-at="2017-02-24T16:58:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="smTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="smTest" duration-ms="1826" started-at="2017-02-24T16:58:06Z" data-provider="SMTestData" finished-at="2017-02-24T16:58:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[480]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: sm-hidden]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[rgba(128, 128, 128, 1)]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[none]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:06Z" finished-at="2017-02-24T16:58:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ResponsiveUtilitiesTest.smTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:58:08Z" finished-at="2017-02-24T16:58:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:58:08Z" finished-at="2017-02-24T16:58:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ResponsiveUtilitiesTest.smTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="smTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="smTest" duration-ms="1533" started-at="2017-02-24T16:58:08Z" data-provider="SMTestData" finished-at="2017-02-24T16:58:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[767]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: sm-hidden]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[rgba(128, 128, 128, 1)]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[none]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTest -->
        <test-method status="PASS" signature="smTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="smTest" duration-ms="1513" started-at="2017-02-24T16:58:09Z" data-provider="SMTestData" finished-at="2017-02-24T16:58:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[479]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: sm-hidden]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[sm-hidden]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[rgba(128, 128, 128, 1)]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[inline-block]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:09Z" finished-at="2017-02-24T16:58:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:09Z" finished-at="2017-02-24T16:58:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ResponsiveUtilitiesTest.smTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:11Z" finished-at="2017-02-24T16:58:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ResponsiveUtilitiesTest.smTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="smTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="smTest" duration-ms="1594" started-at="2017-02-24T16:58:11Z" data-provider="SMTestData" finished-at="2017-02-24T16:58:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[768]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: sm-hidden]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[sm-hidden]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[rgba(128, 128, 128, 1)]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[inline-block]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:11Z" finished-at="2017-02-24T16:58:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:12Z" finished-at="2017-02-24T16:58:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="xlTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="xlTest" duration-ms="1903" started-at="2017-02-24T16:58:12Z" data-provider="XLTestData" finished-at="2017-02-24T16:58:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1280]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: xl-visible]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[xl-visible]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[rgba(173, 255, 47, 1)]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[block]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:12Z" finished-at="2017-02-24T16:58:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ResponsiveUtilitiesTest.xlTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xlTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="xlTest" duration-ms="1660" started-at="2017-02-24T16:58:14Z" data-provider="XLTestData" finished-at="2017-02-24T16:58:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1279]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: xl-visible]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[rgba(173, 255, 47, 1)]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[none]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:14Z" finished-at="2017-02-24T16:58:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ResponsiveUtilitiesTest.xlTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:14Z" finished-at="2017-02-24T16:58:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:16Z" finished-at="2017-02-24T16:58:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:16Z" finished-at="2017-02-24T16:58:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ResponsiveUtilitiesTest.xlTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xlTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="xlTest" duration-ms="6216" started-at="2017-02-24T16:58:16Z" data-provider="XLTestData" finished-at="2017-02-24T16:58:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1279]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: xl-hidden]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[xl-hidden]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[rgba(128, 128, 128, 1)]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[inline-block]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlTest -->
        <test-method status="PASS" signature="xlTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="xlTest" duration-ms="1578" started-at="2017-02-24T16:58:22Z" data-provider="XLTestData" finished-at="2017-02-24T16:58:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1280]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: xl-hidden]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[rgba(128, 128, 128, 1)]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[none]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:22Z" finished-at="2017-02-24T16:58:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ResponsiveUtilitiesTest.xlTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:22Z" finished-at="2017-02-24T16:58:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:24Z" finished-at="2017-02-24T16:58:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="xsTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="xsTest" duration-ms="1547" started-at="2017-02-24T16:58:24Z" data-provider="XSTestData" finished-at="2017-02-24T16:58:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[479]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: xs-visible]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[xs-visible]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[rgba(255, 0, 0, 1)]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[block]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:24Z" finished-at="2017-02-24T16:58:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ResponsiveUtilitiesTest.xsTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:58:25Z" finished-at="2017-02-24T16:58:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="xsTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="xsTest" duration-ms="1455" started-at="2017-02-24T16:58:25Z" data-provider="XSTestData" finished-at="2017-02-24T16:58:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[480]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: xs-visible]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[rgba(255, 0, 0, 1)]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[none]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:25Z" finished-at="2017-02-24T16:58:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ResponsiveUtilitiesTest.xsTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:27Z" finished-at="2017-02-24T16:58:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:58:27Z" finished-at="2017-02-24T16:58:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ResponsiveUtilitiesTest.xsTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xsTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="xsTest" duration-ms="1577" started-at="2017-02-24T16:58:27Z" data-provider="XSTestData" finished-at="2017-02-24T16:58:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[479]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: xs-hidden]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[rgba(128, 128, 128, 1)]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[none]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:58:28Z" finished-at="2017-02-24T16:58:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:28Z" finished-at="2017-02-24T16:58:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.ResponsiveUtilitiesTest.xsTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xsTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="xsTest" duration-ms="1440" started-at="2017-02-24T16:58:28Z" data-provider="XSTestData" finished-at="2017-02-24T16:58:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[480]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: xs-hidden]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[xs-hidden]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[rgba(128, 128, 128, 1)]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[inline-block]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsTest -->
        <test-method status="PASS" signature="tearDown(java.lang.String)[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="tearDown" is-config="true" duration-ms="1147" started-at="2017-02-24T16:58:30Z" finished-at="2017-02-24T16:58:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[off]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.ResponsiveUtilitiesTest@578486a3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:30Z" finished-at="2017-02-24T16:58:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- elementsTests.ResponsiveUtilitiesTest -->
      <class name="elementsTests.InputsTest">
        <test-method status="PASS" signature="setUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="setUp" is-config="true" duration-ms="12413" started-at="2017-02-24T16:57:16Z" finished-at="2017-02-24T16:57:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sauce]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OS X 10.11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[54.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[off]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[iOS]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[iPhone 6 Plus]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[9.3]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[safari]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[1.5.3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="InputsTestBeforeClass(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="InputsTestBeforeClass" is-config="true" duration-ms="0" started-at="2017-02-24T16:57:29Z" finished-at="2017-02-24T16:57:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[off]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OS X 10.11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[iOS]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InputsTestBeforeClass -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="3747" started-at="2017-02-24T16:57:29Z" finished-at="2017-02-24T16:57:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.basicInputActiveTest(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="basicInputActiveTest(java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, [Ljava.lang.String;, java.lang.String, [Ljava.lang.String;, java.lang.String)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="basicInputActiveTest" duration-ms="6572" started-at="2017-02-24T16:57:32Z" data-provider="Inputs - Basic (single line - Active) Test Data" finished-at="2017-02-24T16:57:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1px]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[solid]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@4201c465]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@5b799640]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[6px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[14px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[14px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[[Ljava.lang.String;@6cb107fd]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[3px]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[[Ljava.lang.String;@710636b0]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[18px]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[[Ljava.lang.String;@3de8f619]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[12px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- basicInputActiveTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:57:39Z" finished-at="2017-02-24T16:57:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="1198" started-at="2017-02-24T16:57:39Z" finished-at="2017-02-24T16:57:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.basicInputDisabledTest(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="basicInputDisabledTest(java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, [Ljava.lang.String;, java.lang.String)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="basicInputDisabledTest" duration-ms="6839" started-at="2017-02-24T16:57:40Z" data-provider="Inputs - Basic (single line - disabled) Test Data" finished-at="2017-02-24T16:57:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1px]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[solid]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@2ab4bc72]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@4e5ed836]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[6px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[14px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[14px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[[Ljava.lang.String;@eadd4fb]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[3px]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[[Ljava.lang.String;@740fb309]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[14px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- basicInputDisabledTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:57:47Z" finished-at="2017-02-24T16:57:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="2192" started-at="2017-02-24T16:57:47Z" finished-at="2017-02-24T16:57:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.basicInputErrorFocusTest(java.lang.String[],java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="basicInputErrorFocusTest([Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="basicInputErrorFocusTest" duration-ms="5408" started-at="2017-02-24T16:57:49Z" data-provider="Inputs - Basic (single line - Error Focus) Test Data" finished-at="2017-02-24T16:57:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@7bd7d6d6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@43f02ef2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@239a307b]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[rgba(219, 0, 32, 1)]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[12px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- basicInputErrorFocusTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="2" started-at="2017-02-24T16:57:54Z" finished-at="2017-02-24T16:57:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="1369" started-at="2017-02-24T16:57:54Z" finished-at="2017-02-24T16:57:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.basicInputErrorTest(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="basicInputErrorTest(java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, [Ljava.lang.String;, java.lang.String, [Ljava.lang.String;, java.lang.String)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="basicInputErrorTest" duration-ms="6646" started-at="2017-02-24T16:57:56Z" data-provider="Inputs - Basic (single line - Error) Test Data" finished-at="2017-02-24T16:58:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1px]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[solid]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@2a8448fa]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@6f204a1a]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[6px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[14px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[14px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[[Ljava.lang.String;@2de56eb2]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[3px]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[[Ljava.lang.String;@5f8e8a9d]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[18px]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[[Ljava.lang.String;@5745ca0e]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[12px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- basicInputErrorTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:02Z" finished-at="2017-02-24T16:58:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="1298" started-at="2017-02-24T16:58:02Z" finished-at="2017-02-24T16:58:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.basicInputFocusTest(java.lang.String[],java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="basicInputFocusTest([Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, [Ljava.lang.String;, java.lang.String)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="basicInputFocusTest" duration-ms="4272" started-at="2017-02-24T16:58:04Z" data-provider="Inputs - Basic (single line - Focus) Test Data" finished-at="2017-02-24T16:58:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@3ad83a66]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@3cce5371]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@17bffc17]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[12px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- basicInputFocusTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:08Z" finished-at="2017-02-24T16:58:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="1051" started-at="2017-02-24T16:58:08Z" finished-at="2017-02-24T16:58:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.basicSelectInputFocusTest(java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="basicSelectInputFocusTest(java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="basicSelectInputFocusTest" duration-ms="3721" started-at="2017-02-24T16:58:09Z" data-provider="Basic Select Input (Focus) Test Data" finished-at="2017-02-24T16:58:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1px]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[solid]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@6e535154]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[rgb(4, 122, 156) 0px 0px 5px 0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[14px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[rgba(37, 37, 37, 1)]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[18px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- basicSelectInputFocusTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:13Z" finished-at="2017-02-24T16:58:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="1511" started-at="2017-02-24T16:58:13Z" finished-at="2017-02-24T16:58:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.basicSelectInputTest(java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="basicSelectInputTest([Ljava.lang.String;, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="basicSelectInputTest" duration-ms="10404" started-at="2017-02-24T16:58:14Z" data-provider="Basic Select Input Test Data" finished-at="2017-02-24T16:58:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@15a34df2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[14px]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[14px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[6px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[1px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[solid]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[[Ljava.lang.String;@5b38c1ec]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[14px]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[[Ljava.lang.String;@338fc1d8]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[[Ljava.lang.String;@4722ef0c]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[[Ljava.lang.String;@48e1f6c7]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[[Ljava.lang.String;@55cb6996]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[12px]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[16px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- basicSelectInputTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:25Z" finished-at="2017-02-24T16:58:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="1289" started-at="2017-02-24T16:58:25Z" finished-at="2017-02-24T16:58:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.checkboxDisabledStateTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkboxDisabledStateTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="checkboxDisabledStateTest" duration-ms="224" started-at="2017-02-24T16:58:26Z" data-provider="Check Box - Disabled State Test Data" finished-at="2017-02-24T16:58:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[background-color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@1807e3f6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkboxDisabledStateTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:58:26Z" finished-at="2017-02-24T16:58:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="976" started-at="2017-02-24T16:58:26Z" finished-at="2017-02-24T16:58:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.checkboxDisabledStateTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkboxDisabledStateTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="checkboxDisabledStateTest" duration-ms="234" started-at="2017-02-24T16:58:27Z" data-provider="Check Box - Disabled State Test Data" finished-at="2017-02-24T16:58:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-top-color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@480d3575]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkboxDisabledStateTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:58:27Z" finished-at="2017-02-24T16:58:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="1220" started-at="2017-02-24T16:58:27Z" finished-at="2017-02-24T16:58:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.checkboxDisabledStateTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkboxDisabledStateTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="checkboxDisabledStateTest" duration-ms="227" started-at="2017-02-24T16:58:29Z" data-provider="Check Box - Disabled State Test Data" finished-at="2017-02-24T16:58:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-bottom-color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@f1da57d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkboxDisabledStateTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:29Z" finished-at="2017-02-24T16:58:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="1222" started-at="2017-02-24T16:58:29Z" finished-at="2017-02-24T16:58:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.checkboxDisabledStateTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkboxDisabledStateTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="checkboxDisabledStateTest" duration-ms="235" started-at="2017-02-24T16:58:30Z" data-provider="Check Box - Disabled State Test Data" finished-at="2017-02-24T16:58:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-left-color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@194fad1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkboxDisabledStateTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:58:30Z" finished-at="2017-02-24T16:58:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="1185" started-at="2017-02-24T16:58:30Z" finished-at="2017-02-24T16:58:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.checkboxDisabledStateTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkboxDisabledStateTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="checkboxDisabledStateTest" duration-ms="247" started-at="2017-02-24T16:58:32Z" data-provider="Check Box - Disabled State Test Data" finished-at="2017-02-24T16:58:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-right-color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@26abb146]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkboxDisabledStateTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:32Z" finished-at="2017-02-24T16:58:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="1151" started-at="2017-02-24T16:58:32Z" finished-at="2017-02-24T16:58:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.checkboxFocusStateTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkboxFocusStateTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="checkboxFocusStateTest" duration-ms="951" started-at="2017-02-24T16:58:33Z" data-provider="Check Box - Focus State Test Data" finished-at="2017-02-24T16:58:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-top-color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@72c8e7b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkboxFocusStateTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="1236" started-at="2017-02-24T16:58:34Z" finished-at="2017-02-24T16:58:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.checkboxFocusStateTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:34Z" finished-at="2017-02-24T16:58:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="checkboxFocusStateTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="checkboxFocusStateTest" duration-ms="846" started-at="2017-02-24T16:58:35Z" data-provider="Check Box - Focus State Test Data" finished-at="2017-02-24T16:58:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-bottom-color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@65f8f5ae]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkboxFocusStateTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:58:36Z" finished-at="2017-02-24T16:58:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="1058" started-at="2017-02-24T16:58:36Z" finished-at="2017-02-24T16:58:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.checkboxFocusStateTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkboxFocusStateTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="checkboxFocusStateTest" duration-ms="862" started-at="2017-02-24T16:58:37Z" data-provider="Check Box - Focus State Test Data" finished-at="2017-02-24T16:58:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-left-color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@431cd9b2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkboxFocusStateTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:38Z" finished-at="2017-02-24T16:58:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="991" started-at="2017-02-24T16:58:38Z" finished-at="2017-02-24T16:58:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.checkboxFocusStateTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkboxFocusStateTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="checkboxFocusStateTest" duration-ms="894" started-at="2017-02-24T16:58:39Z" data-provider="Check Box - Focus State Test Data" finished-at="2017-02-24T16:58:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-right-color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@38467116]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkboxFocusStateTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:58:40Z" finished-at="2017-02-24T16:58:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="1034" started-at="2017-02-24T16:58:40Z" finished-at="2017-02-24T16:58:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.inputBoxPasswordHideTest(int,int,java.lang.String,java.lang.String[],java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="inputBoxPasswordHideTest(int, int, java.lang.String, [Ljava.lang.String;, java.lang.String)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="inputBoxPasswordHideTest" duration-ms="2975" started-at="2017-02-24T16:58:41Z" data-provider="Input Box - Password Hide Test Data" finished-at="2017-02-24T16:58:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[480]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@14bdbc74]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[480px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inputBoxPasswordHideTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:58:44Z" finished-at="2017-02-24T16:58:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="1221" started-at="2017-02-24T16:58:44Z" finished-at="2017-02-24T16:58:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.inputBoxPasswordHideTest(int,int,java.lang.String,java.lang.String[],java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="inputBoxPasswordHideTest(int, int, java.lang.String, [Ljava.lang.String;, java.lang.String)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="inputBoxPasswordHideTest" duration-ms="2800" started-at="2017-02-24T16:58:45Z" data-provider="Input Box - Password Hide Test Data" finished-at="2017-02-24T16:58:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[768]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@12591ac8]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[768px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inputBoxPasswordHideTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:48Z" finished-at="2017-02-24T16:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="1428" started-at="2017-02-24T16:58:48Z" finished-at="2017-02-24T16:58:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.inputBoxPasswordHideTest(int,int,java.lang.String,java.lang.String[],java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="inputBoxPasswordHideTest(int, int, java.lang.String, [Ljava.lang.String;, java.lang.String)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="inputBoxPasswordHideTest" duration-ms="2784" started-at="2017-02-24T16:58:49Z" data-provider="Input Box - Password Hide Test Data" finished-at="2017-02-24T16:58:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1024]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@5a7fe64f]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[1024px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inputBoxPasswordHideTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:58:52Z" finished-at="2017-02-24T16:58:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="1386" started-at="2017-02-24T16:58:52Z" finished-at="2017-02-24T16:58:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.inputBoxPasswordHideTest(int,int,java.lang.String,java.lang.String[],java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="inputBoxPasswordHideTest(int, int, java.lang.String, [Ljava.lang.String;, java.lang.String)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="inputBoxPasswordHideTest" duration-ms="2815" started-at="2017-02-24T16:58:53Z" data-provider="Input Box - Password Hide Test Data" finished-at="2017-02-24T16:58:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1140]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@38145825]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[1140px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inputBoxPasswordHideTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:56Z" finished-at="2017-02-24T16:58:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="1301" started-at="2017-02-24T16:58:56Z" finished-at="2017-02-24T16:58:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.inputBoxPasswordShowTest(java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="inputBoxPasswordShowTest(java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="inputBoxPasswordShowTest" duration-ms="2926" started-at="2017-02-24T16:58:58Z" data-provider="Input Box - Password Show Test Data" finished-at="2017-02-24T16:59:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12px]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@41330d4f]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[8px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[1px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@1b66c0fb]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[solid]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[[Ljava.lang.String;@3e0e1046]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[-32px]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[right]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inputBoxPasswordShowTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:59:00Z" finished-at="2017-02-24T16:59:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="1298" started-at="2017-02-24T16:59:00Z" finished-at="2017-02-24T16:59:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.inputBoxShowPasswordFocusStateTest() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="inputBoxShowPasswordFocusStateTest()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="inputBoxShowPasswordFocusStateTest" duration-ms="2992" started-at="2017-02-24T16:59:02Z" finished-at="2017-02-24T16:59:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inputBoxShowPasswordFocusStateTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:05Z" finished-at="2017-02-24T16:59:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="1262" started-at="2017-02-24T16:59:05Z" finished-at="2017-02-24T16:59:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.inputBoxShowPasswordPaddingTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="inputBoxShowPasswordPaddingTest()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="inputBoxShowPasswordPaddingTest" duration-ms="923" started-at="2017-02-24T16:59:06Z" finished-at="2017-02-24T16:59:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inputBoxShowPasswordPaddingTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:07Z" finished-at="2017-02-24T16:59:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="1520" started-at="2017-02-24T16:59:07Z" finished-at="2017-02-24T16:59:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.labelForCheckBoxTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="labelForCheckBoxTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, java.lang.String)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="labelForCheckBoxTest" duration-ms="497" started-at="2017-02-24T16:59:08Z" data-provider="Check Box - Label Test Data" finished-at="2017-02-24T16:59:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[checkbox-unchecked]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.xpath: //label[@for='checkboxInput-unchecked']]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@798162bc]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[inline-block]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- labelForCheckBoxTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:09Z" finished-at="2017-02-24T16:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="1236" started-at="2017-02-24T16:59:09Z" finished-at="2017-02-24T16:59:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.labelForCheckBoxTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="labelForCheckBoxTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, java.lang.String)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="labelForCheckBoxTest" duration-ms="485" started-at="2017-02-24T16:59:10Z" data-provider="Check Box - Label Test Data" finished-at="2017-02-24T16:59:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[checkbox-checked]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.xpath: //label[@for='checkboxInput-checked']]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@1df8da7a]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[inline-block]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- labelForCheckBoxTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:11Z" finished-at="2017-02-24T16:59:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="1255" started-at="2017-02-24T16:59:11Z" finished-at="2017-02-24T16:59:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.labelForCheckBoxTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="labelForCheckBoxTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, java.lang.String)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="labelForCheckBoxTest" duration-ms="1128" started-at="2017-02-24T16:59:12Z" data-provider="Check Box - Label Test Data" finished-at="2017-02-24T16:59:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[checkbox-unchecked-focus]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.xpath: //label[@for='checkboxInput-unchecked-focus']]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@23941fb4]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[inline-block]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- labelForCheckBoxTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="1274" started-at="2017-02-24T16:59:13Z" finished-at="2017-02-24T16:59:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.labelForCheckBoxTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:13Z" finished-at="2017-02-24T16:59:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="labelForCheckBoxTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, java.lang.String)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="labelForCheckBoxTest" duration-ms="1175" started-at="2017-02-24T16:59:14Z" data-provider="Check Box - Label Test Data" finished-at="2017-02-24T16:59:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[checkbox-checked-focus]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.xpath: //label[@for='checkboxInput-checked-focus']]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@7486b455]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[inline-block]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- labelForCheckBoxTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:16Z" finished-at="2017-02-24T16:59:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="1247" started-at="2017-02-24T16:59:16Z" finished-at="2017-02-24T16:59:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.labelForCheckBoxTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="labelForCheckBoxTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, java.lang.String)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="labelForCheckBoxTest" duration-ms="495" started-at="2017-02-24T16:59:17Z" data-provider="Check Box - Label Test Data" finished-at="2017-02-24T16:59:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[checkbox-unchecked-disabled]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.xpath: //label[@for='checkboxInput-unchecked-disabled']]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@660acfb]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[inline-block]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- labelForCheckBoxTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:59:17Z" finished-at="2017-02-24T16:59:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="1196" started-at="2017-02-24T16:59:17Z" finished-at="2017-02-24T16:59:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.labelForCheckBoxTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="labelForCheckBoxTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, java.lang.String)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="labelForCheckBoxTest" duration-ms="509" started-at="2017-02-24T16:59:18Z" data-provider="Check Box - Label Test Data" finished-at="2017-02-24T16:59:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[checkbox-checked-disabled]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.xpath: //label[@for='checkboxInput-checked-disabled']]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@5d908d47]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[inline-block]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- labelForCheckBoxTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:59:19Z" finished-at="2017-02-24T16:59:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="1229" started-at="2017-02-24T16:59:19Z" finished-at="2017-02-24T16:59:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.labelForCheckBoxTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="labelForCheckBoxTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, java.lang.String)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="labelForCheckBoxTest" duration-ms="474" started-at="2017-02-24T16:59:20Z" data-provider="Check Box - Label Test Data" finished-at="2017-02-24T16:59:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[checkbox-long-label]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.xpath: //label[@for='longLabel']]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@5efa40fe]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[inline-block]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- labelForCheckBoxTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:21Z" finished-at="2017-02-24T16:59:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="1198" started-at="2017-02-24T16:59:21Z" finished-at="2017-02-24T16:59:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.multiLineTextInputTest(java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="multiLineTextInputTest(java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="multiLineTextInputTest" duration-ms="5582" started-at="2017-02-24T16:59:22Z" data-provider="MultiLine Input Text Test Data" finished-at="2017-02-24T16:59:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1px]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[solid]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@3e62d773]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[9px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[14px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[6px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[14px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[[Ljava.lang.String;@4ef74c30]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[[Ljava.lang.String;@7283d3eb]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[18px]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[12px]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[16px]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[[Ljava.lang.String;@638ef7ed]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multiLineTextInputTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:27Z" finished-at="2017-02-24T16:59:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="1320" started-at="2017-02-24T16:59:27Z" finished-at="2017-02-24T16:59:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.multiTextInputFocusTest(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="multiTextInputFocusTest(java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="multiTextInputFocusTest" duration-ms="3591" started-at="2017-02-24T16:59:29Z" data-provider="Multi Text Input (Focus) Test Data" finished-at="2017-02-24T16:59:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1px]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[solid]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@4bff7da0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@3f1d2e23]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multiTextInputFocusTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:32Z" finished-at="2017-02-24T16:59:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="1207" started-at="2017-02-24T16:59:32Z" finished-at="2017-02-24T16:59:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.singleLineInputFocusStateTest(java.lang.String,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="singleLineInputFocusStateTest(java.lang.String, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="singleLineInputFocusStateTest" duration-ms="2691" started-at="2017-02-24T16:59:34Z" data-provider="Single Line Input - Focus state Test Data" finished-at="2017-02-24T16:59:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sl-text-input]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: sl-text-input]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[sl-text-input]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[none]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[input-underline]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[By.id: input-underline]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[[Ljava.lang.String;@3eb91815]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[block]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[[Ljava.lang.String;@56dc1551]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[[Ljava.lang.String;@102cec62]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[[Ljava.lang.String;@74f6c5d8]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[all]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[[Ljava.lang.String;@27912e3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleLineInputFocusStateTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="1021" started-at="2017-02-24T16:59:36Z" finished-at="2017-02-24T16:59:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.singleLineInputFocusStateTest(java.lang.String,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:36Z" finished-at="2017-02-24T16:59:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="singleLineInputFocusStateTest(java.lang.String, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="singleLineInputFocusStateTest" duration-ms="2588" started-at="2017-02-24T16:59:37Z" data-provider="Single Line Input - Focus state Test Data" finished-at="2017-02-24T16:59:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sl-text-input-error]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: sl-text-input-error]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[sl-text-input-error]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[none]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[input-underline-error]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[By.id: input-underline-error]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[[Ljava.lang.String;@34b9f960]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[block]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[[Ljava.lang.String;@43015c69]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[[Ljava.lang.String;@19b89d4]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[[Ljava.lang.String;@4bbf6d0e]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[all]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[[Ljava.lang.String;@30b6ffe0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleLineInputFocusStateTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="979" started-at="2017-02-24T16:59:40Z" finished-at="2017-02-24T16:59:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.singleLineInputFocusStateTest(java.lang.String,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:40Z" finished-at="2017-02-24T16:59:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="singleLineInputFocusStateTest(java.lang.String, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="singleLineInputFocusStateTest" duration-ms="788" started-at="2017-02-24T16:59:41Z" data-provider="Single Line Input - Focus state Test Data" finished-at="2017-02-24T16:59:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sl-text-label-input-readonly]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: sl-text-label-input-readonly]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[sl-text-label-input-readonly]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[none]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[By.xpath: ]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[[Ljava.lang.String;@791d1f8b]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[[Ljava.lang.String;@2415fc55]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[[Ljava.lang.String;@14f232c4]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[[Ljava.lang.String;@13bc8645]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[[Ljava.lang.String;@24c22fe]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleLineInputFocusStateTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:42Z" finished-at="2017-02-24T16:59:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="1093" started-at="2017-02-24T16:59:42Z" finished-at="2017-02-24T16:59:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.slInputDisabledTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="slInputDisabledTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="slInputDisabledTest" duration-ms="236" started-at="2017-02-24T16:59:43Z" data-provider="Single Line Input Disabled Test Data" finished-at="2017-02-24T16:59:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-bottom-width]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@93081b6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slInputDisabledTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:59:43Z" finished-at="2017-02-24T16:59:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="1164" started-at="2017-02-24T16:59:43Z" finished-at="2017-02-24T16:59:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.slInputDisabledTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="slInputDisabledTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="slInputDisabledTest" duration-ms="217" started-at="2017-02-24T16:59:44Z" data-provider="Single Line Input Disabled Test Data" finished-at="2017-02-24T16:59:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-bottom-style]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@cd1e646]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slInputDisabledTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:59:44Z" finished-at="2017-02-24T16:59:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="987" started-at="2017-02-24T16:59:44Z" finished-at="2017-02-24T16:59:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.slInputDisabledTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="slInputDisabledTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="slInputDisabledTest" duration-ms="2635" started-at="2017-02-24T16:59:45Z" data-provider="Single Line Input Disabled Test Data" finished-at="2017-02-24T16:59:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-bottom-color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@7ba8c737]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slInputDisabledTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:59:48Z" finished-at="2017-02-24T16:59:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="1026" started-at="2017-02-24T16:59:48Z" finished-at="2017-02-24T16:59:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.slInputDisabledTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="slInputDisabledTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="slInputDisabledTest" duration-ms="218" started-at="2017-02-24T16:59:49Z" data-provider="Single Line Input Disabled Test Data" finished-at="2017-02-24T16:59:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@1890516e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slInputDisabledTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="1017" started-at="2017-02-24T16:59:49Z" finished-at="2017-02-24T16:59:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.slInputDisabledTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:49Z" finished-at="2017-02-24T16:59:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="slInputDisabledTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="slInputDisabledTest" duration-ms="213" started-at="2017-02-24T16:59:50Z" data-provider="Single Line Input Disabled Test Data" finished-at="2017-02-24T16:59:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[background-color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@15a04efb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slInputDisabledTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:50Z" finished-at="2017-02-24T16:59:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="1042" started-at="2017-02-24T16:59:50Z" finished-at="2017-02-24T16:59:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.slInputDisabledTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="slInputDisabledTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="slInputDisabledTest" duration-ms="223" started-at="2017-02-24T16:59:52Z" data-provider="Single Line Input Disabled Test Data" finished-at="2017-02-24T16:59:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[font-family]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@16c069df]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slInputDisabledTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:52Z" finished-at="2017-02-24T16:59:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="1228" started-at="2017-02-24T16:59:52Z" finished-at="2017-02-24T16:59:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.slInputErroredTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="slInputErroredTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="slInputErroredTest" duration-ms="213" started-at="2017-02-24T16:59:53Z" data-provider="Single Line Input Errored Test Data" finished-at="2017-02-24T16:59:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-bottom-width]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@2bec854f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slInputErroredTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:59:53Z" finished-at="2017-02-24T16:59:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="949" started-at="2017-02-24T16:59:53Z" finished-at="2017-02-24T16:59:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.slInputErroredTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="slInputErroredTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="slInputErroredTest" duration-ms="220" started-at="2017-02-24T16:59:54Z" data-provider="Single Line Input Errored Test Data" finished-at="2017-02-24T16:59:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-bottom-style]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@31edaa7d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slInputErroredTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:59:54Z" finished-at="2017-02-24T16:59:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="1146" started-at="2017-02-24T16:59:54Z" finished-at="2017-02-24T16:59:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.slInputErroredTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="slInputErroredTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="slInputErroredTest" duration-ms="217" started-at="2017-02-24T16:59:56Z" data-provider="Single Line Input Errored Test Data" finished-at="2017-02-24T16:59:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-bottom-color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@26adfd2d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slInputErroredTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="1072" started-at="2017-02-24T16:59:56Z" finished-at="2017-02-24T16:59:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.slInputErroredTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:56Z" finished-at="2017-02-24T16:59:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="slInputErroredTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="slInputErroredTest" duration-ms="216" started-at="2017-02-24T16:59:57Z" data-provider="Single Line Input Errored Test Data" finished-at="2017-02-24T16:59:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[font-size]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@3336e6b6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slInputErroredTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:57Z" finished-at="2017-02-24T16:59:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="975" started-at="2017-02-24T16:59:57Z" finished-at="2017-02-24T16:59:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.slInputErroredTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="slInputErroredTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="slInputErroredTest" duration-ms="218" started-at="2017-02-24T16:59:58Z" data-provider="Single Line Input Errored Test Data" finished-at="2017-02-24T16:59:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@7c3fdb62]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slInputErroredTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:58Z" finished-at="2017-02-24T16:59:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="1030" started-at="2017-02-24T16:59:58Z" finished-at="2017-02-24T16:59:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.slInputErroredTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="slInputErroredTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="slInputErroredTest" duration-ms="206" started-at="2017-02-24T16:59:59Z" data-provider="Single Line Input Errored Test Data" finished-at="2017-02-24T16:59:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-top-style]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@205d38da]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slInputErroredTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:59:59Z" finished-at="2017-02-24T16:59:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="1036" started-at="2017-02-24T16:59:59Z" finished-at="2017-02-24T17:00:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.slInputErroredTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="slInputErroredTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="slInputErroredTest" duration-ms="211" started-at="2017-02-24T17:00:00Z" data-provider="Single Line Input Errored Test Data" finished-at="2017-02-24T17:00:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-right-style]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@6950ed69]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slInputErroredTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="1040" started-at="2017-02-24T17:00:01Z" finished-at="2017-02-24T17:00:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.slInputErroredTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:01Z" finished-at="2017-02-24T17:00:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="slInputErroredTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="slInputErroredTest" duration-ms="214" started-at="2017-02-24T17:00:02Z" data-provider="Single Line Input Errored Test Data" finished-at="2017-02-24T17:00:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-left-style]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@6dd7b5a3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slInputErroredTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="864" started-at="2017-02-24T17:00:02Z" finished-at="2017-02-24T17:00:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.slInputErroredTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:02Z" finished-at="2017-02-24T17:00:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="slInputErroredTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="slInputErroredTest" duration-ms="243" started-at="2017-02-24T17:00:03Z" data-provider="Single Line Input Errored Test Data" finished-at="2017-02-24T17:00:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-top]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@6f3187b0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slInputErroredTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:00:03Z" finished-at="2017-02-24T17:00:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="1048" started-at="2017-02-24T17:00:03Z" finished-at="2017-02-24T17:00:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.slInputErroredTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="slInputErroredTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="slInputErroredTest" duration-ms="207" started-at="2017-02-24T17:00:04Z" data-provider="Single Line Input Errored Test Data" finished-at="2017-02-24T17:00:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-right]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@2663e964]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slInputErroredTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:00:04Z" finished-at="2017-02-24T17:00:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="1410" started-at="2017-02-24T17:00:04Z" finished-at="2017-02-24T17:00:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.slInputErroredTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="slInputErroredTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="slInputErroredTest" duration-ms="225" started-at="2017-02-24T17:00:06Z" data-provider="Single Line Input Errored Test Data" finished-at="2017-02-24T17:00:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-bottom]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@48b67364]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slInputErroredTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:00:06Z" finished-at="2017-02-24T17:00:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="1082" started-at="2017-02-24T17:00:06Z" finished-at="2017-02-24T17:00:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.slInputErroredTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="slInputErroredTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="slInputErroredTest" duration-ms="212" started-at="2017-02-24T17:00:07Z" data-provider="Single Line Input Errored Test Data" finished-at="2017-02-24T17:00:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-left]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@189cbd7c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slInputErroredTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="1040" started-at="2017-02-24T17:00:07Z" finished-at="2017-02-24T17:00:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.slInputErroredTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:07Z" finished-at="2017-02-24T17:00:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="slInputErroredTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="slInputErroredTest" duration-ms="293" started-at="2017-02-24T17:00:08Z" data-provider="Single Line Input Errored Test Data" finished-at="2017-02-24T17:00:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[font-family]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@7bf3a5d8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slInputErroredTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:09Z" finished-at="2017-02-24T17:00:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="888" started-at="2017-02-24T17:00:09Z" finished-at="2017-02-24T17:00:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.slInputReadOnlyTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="slInputReadOnlyTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="slInputReadOnlyTest" duration-ms="235" started-at="2017-02-24T17:00:09Z" data-provider="Single Line Input ReadOnly Test Data" finished-at="2017-02-24T17:00:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-bottom-width]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@42e25b0b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slInputReadOnlyTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="1069" started-at="2017-02-24T17:00:10Z" finished-at="2017-02-24T17:00:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.slInputReadOnlyTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:10Z" finished-at="2017-02-24T17:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="slInputReadOnlyTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="slInputReadOnlyTest" duration-ms="232" started-at="2017-02-24T17:00:11Z" data-provider="Single Line Input ReadOnly Test Data" finished-at="2017-02-24T17:00:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-bottom-style]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@39b43d60]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slInputReadOnlyTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="981" started-at="2017-02-24T17:00:11Z" finished-at="2017-02-24T17:00:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.slInputReadOnlyTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:11Z" finished-at="2017-02-24T17:00:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="slInputReadOnlyTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="slInputReadOnlyTest" duration-ms="235" started-at="2017-02-24T17:00:12Z" data-provider="Single Line Input ReadOnly Test Data" finished-at="2017-02-24T17:00:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-bottom-color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@44be0077]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slInputReadOnlyTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="996" started-at="2017-02-24T17:00:12Z" finished-at="2017-02-24T17:00:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.slInputReadOnlyTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:12Z" finished-at="2017-02-24T17:00:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="slInputReadOnlyTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="slInputReadOnlyTest" duration-ms="222" started-at="2017-02-24T17:00:13Z" data-provider="Single Line Input ReadOnly Test Data" finished-at="2017-02-24T17:00:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[color]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@2205a05d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slInputReadOnlyTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:13Z" finished-at="2017-02-24T17:00:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="1123" started-at="2017-02-24T17:00:13Z" finished-at="2017-02-24T17:00:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.slInputReadOnlyTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="slInputReadOnlyTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="slInputReadOnlyTest" duration-ms="219" started-at="2017-02-24T17:00:15Z" data-provider="Single Line Input ReadOnly Test Data" finished-at="2017-02-24T17:00:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[font-size]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@72ef8d15]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slInputReadOnlyTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="1008" started-at="2017-02-24T17:00:15Z" finished-at="2017-02-24T17:00:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.slInputReadOnlyTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:15Z" finished-at="2017-02-24T17:00:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="slInputReadOnlyTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="slInputReadOnlyTest" duration-ms="236" started-at="2017-02-24T17:00:16Z" data-provider="Single Line Input ReadOnly Test Data" finished-at="2017-02-24T17:00:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-top-style]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@6aa8e115]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slInputReadOnlyTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="1052" started-at="2017-02-24T17:00:16Z" finished-at="2017-02-24T17:00:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.slInputReadOnlyTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:16Z" finished-at="2017-02-24T17:00:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="slInputReadOnlyTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="slInputReadOnlyTest" duration-ms="220" started-at="2017-02-24T17:00:17Z" data-provider="Single Line Input ReadOnly Test Data" finished-at="2017-02-24T17:00:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-right-style]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@5e21e98f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slInputReadOnlyTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:00:17Z" finished-at="2017-02-24T17:00:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="1109" started-at="2017-02-24T17:00:17Z" finished-at="2017-02-24T17:00:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.slInputReadOnlyTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="slInputReadOnlyTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="slInputReadOnlyTest" duration-ms="206" started-at="2017-02-24T17:00:18Z" data-provider="Single Line Input ReadOnly Test Data" finished-at="2017-02-24T17:00:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[border-left-style]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@51a9ad5e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slInputReadOnlyTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:19Z" finished-at="2017-02-24T17:00:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="1013" started-at="2017-02-24T17:00:19Z" finished-at="2017-02-24T17:00:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.slInputReadOnlyTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="slInputReadOnlyTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="slInputReadOnlyTest" duration-ms="233" started-at="2017-02-24T17:00:20Z" data-provider="Single Line Input ReadOnly Test Data" finished-at="2017-02-24T17:00:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-top]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@5f20155b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slInputReadOnlyTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="910" started-at="2017-02-24T17:00:20Z" finished-at="2017-02-24T17:00:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.slInputReadOnlyTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:20Z" finished-at="2017-02-24T17:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="slInputReadOnlyTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="slInputReadOnlyTest" duration-ms="224" started-at="2017-02-24T17:00:21Z" data-provider="Single Line Input ReadOnly Test Data" finished-at="2017-02-24T17:00:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-right]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@72ade7e3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slInputReadOnlyTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="1099" started-at="2017-02-24T17:00:21Z" finished-at="2017-02-24T17:00:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.slInputReadOnlyTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:21Z" finished-at="2017-02-24T17:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="slInputReadOnlyTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="slInputReadOnlyTest" duration-ms="217" started-at="2017-02-24T17:00:22Z" data-provider="Single Line Input ReadOnly Test Data" finished-at="2017-02-24T17:00:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-bottom]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@239105a8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slInputReadOnlyTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="1039" started-at="2017-02-24T17:00:22Z" finished-at="2017-02-24T17:00:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.slInputReadOnlyTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:22Z" finished-at="2017-02-24T17:00:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="slInputReadOnlyTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="slInputReadOnlyTest" duration-ms="225" started-at="2017-02-24T17:00:23Z" data-provider="Single Line Input ReadOnly Test Data" finished-at="2017-02-24T17:00:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[padding-left]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@3fce8fd9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slInputReadOnlyTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:00:24Z" finished-at="2017-02-24T17:00:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="beforeMethod" is-config="true" duration-ms="924" started-at="2017-02-24T17:00:24Z" finished-at="2017-02-24T17:00:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.InputsTest.slInputReadOnlyTest(java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="slInputReadOnlyTest(java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="slInputReadOnlyTest" duration-ms="226" started-at="2017-02-24T17:00:25Z" data-provider="Single Line Input ReadOnly Test Data" finished-at="2017-02-24T17:00:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[font-family]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@609bcfb6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slInputReadOnlyTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.InputsTest@2b552920]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:25Z" finished-at="2017-02-24T17:00:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="tearDown(java.lang.String)[pri:0, instance:elementsTests.InputsTest@2b552920]" name="tearDown" is-config="true" duration-ms="1505" started-at="2017-02-24T17:00:25Z" finished-at="2017-02-24T17:00:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[off]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- elementsTests.InputsTest -->
      <class name="elementsTests.IconsTest">
        <test-method status="PASS" signature="setUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.IconsTest@551aa95a]" name="setUp" is-config="true" duration-ms="10251" started-at="2017-02-24T16:57:16Z" finished-at="2017-02-24T16:57:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sauce]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OS X 10.11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[54.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[off]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[iOS]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[iPhone 6 Plus]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[9.3]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[safari]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[1.5.3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.IconsTest@551aa95a]" name="beforeMethod" is-config="true" duration-ms="2720" started-at="2017-02-24T16:57:26Z" finished-at="2017-02-24T16:57:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.IconsTest.getFileSizeOfSpriteTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="typographyTestBeforeClass(java.lang.String, java.lang.String)[pri:0, instance:elementsTests.IconsTest@551aa95a]" name="typographyTestBeforeClass" is-config="true" duration-ms="0" started-at="2017-02-24T16:57:26Z" finished-at="2017-02-24T16:57:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[off]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- typographyTestBeforeClass -->
        <test-method status="PASS" signature="getFileSizeOfSpriteTest()[pri:0, instance:elementsTests.IconsTest@551aa95a]" name="getFileSizeOfSpriteTest" duration-ms="1" started-at="2017-02-24T16:57:29Z" finished-at="2017-02-24T16:57:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getFileSizeOfSpriteTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.IconsTest@551aa95a]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:57:29Z" finished-at="2017-02-24T16:57:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.IconsTest@551aa95a]" name="beforeMethod" is-config="true" duration-ms="1263" started-at="2017-02-24T16:57:29Z" finished-at="2017-02-24T16:57:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.IconsTest.iconChangeClassAndHrefTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="iconChangeClassAndHrefTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.IconsTest@551aa95a]" name="iconChangeClassAndHrefTest" duration-ms="611" started-at="2017-02-24T16:57:30Z" data-provider="Change Class and href Test Data" finished-at="2017-02-24T16:57:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class-18-href-24]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.xpath: //p[@name='icon-change-class-18-href-24']/*[local-name() = 'svg']]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@66ea810]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@6cd24612]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- iconChangeClassAndHrefTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.IconsTest@551aa95a]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:57:31Z" finished-at="2017-02-24T16:57:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.IconsTest@551aa95a]" name="beforeMethod" is-config="true" duration-ms="861" started-at="2017-02-24T16:57:31Z" finished-at="2017-02-24T16:57:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.IconsTest.iconChangeClassAndHrefTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="iconChangeClassAndHrefTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.IconsTest@551aa95a]" name="iconChangeClassAndHrefTest" duration-ms="480" started-at="2017-02-24T16:57:32Z" data-provider="Change Class and href Test Data" finished-at="2017-02-24T16:57:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class-24-href-18]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.xpath: //p[@name='icon-change-class-24-href-18']/*[local-name() = 'svg']]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@5dafbe45]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@2254127a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- iconChangeClassAndHrefTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.IconsTest@551aa95a]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:57:32Z" finished-at="2017-02-24T16:57:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.IconsTest@551aa95a]" name="beforeMethod" is-config="true" duration-ms="1032" started-at="2017-02-24T16:57:32Z" finished-at="2017-02-24T16:57:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.IconsTest.iconFillColorTest(java.lang.String,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="iconFillColorTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.IconsTest@551aa95a]" name="iconFillColorTest" duration-ms="219" started-at="2017-02-24T16:57:33Z" data-provider="Icons Fill Color Test Data" finished-at="2017-02-24T16:57:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[icon-fill-color-18]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.xpath: //p[@name='icon-fill-color-18']/*[local-name() = 'svg']]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@51891008]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- iconFillColorTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.IconsTest@551aa95a]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:57:34Z" finished-at="2017-02-24T16:57:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.IconsTest@551aa95a]" name="beforeMethod" is-config="true" duration-ms="1072" started-at="2017-02-24T16:57:34Z" finished-at="2017-02-24T16:57:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.IconsTest.iconFillColorTest(java.lang.String,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="iconFillColorTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.IconsTest@551aa95a]" name="iconFillColorTest" duration-ms="286" started-at="2017-02-24T16:57:35Z" data-provider="Icons Fill Color Test Data" finished-at="2017-02-24T16:57:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[icon-fill-color-24]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.xpath: //p[@name='icon-fill-color-24']/*[local-name() = 'svg']]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@2f953efd]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- iconFillColorTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.IconsTest@551aa95a]" name="beforeMethod" is-config="true" duration-ms="970" started-at="2017-02-24T16:57:35Z" finished-at="2017-02-24T16:57:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.IconsTest.iconFillColorTest(java.lang.String,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.IconsTest@551aa95a]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:57:35Z" finished-at="2017-02-24T16:57:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="iconFillColorTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.IconsTest@551aa95a]" name="iconFillColorTest" duration-ms="224" started-at="2017-02-24T16:57:36Z" data-provider="Icons Fill Color Test Data" finished-at="2017-02-24T16:57:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[icon-default-color-18]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.xpath: //p[@name='icon-default-color-18']/*[local-name() = 'svg']]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@f68f0dc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- iconFillColorTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.IconsTest@551aa95a]" name="beforeMethod" is-config="true" duration-ms="851" started-at="2017-02-24T16:57:36Z" finished-at="2017-02-24T16:57:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.IconsTest.iconFillColorTest(java.lang.String,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.IconsTest@551aa95a]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:57:36Z" finished-at="2017-02-24T16:57:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="iconFillColorTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.IconsTest@551aa95a]" name="iconFillColorTest" duration-ms="285" started-at="2017-02-24T16:57:37Z" data-provider="Icons Fill Color Test Data" finished-at="2017-02-24T16:57:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[icon-default-color-24]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.xpath: //p[@name='icon-default-color-24']/*[local-name() = 'svg']]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@d2de489]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- iconFillColorTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.IconsTest@551aa95a]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:57:37Z" finished-at="2017-02-24T16:57:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="tearDown(java.lang.String)[pri:0, instance:elementsTests.IconsTest@551aa95a]" name="tearDown" is-config="true" duration-ms="1523" started-at="2017-02-24T16:57:37Z" finished-at="2017-02-24T16:57:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[off]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- elementsTests.IconsTest -->
      <class name="elementsTests.TemplatesTest">
        <test-method status="PASS" signature="setUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="setUp" is-config="true" duration-ms="13769" started-at="2017-02-24T16:58:31Z" finished-at="2017-02-24T16:58:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sauce]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OS X 10.11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[54.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[off]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[iOS]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[iPhone 6 Plus]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[9.3]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[safari]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[1.5.3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="beforeClass(java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeClass" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:45Z" finished-at="2017-02-24T16:58:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sauce]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 6 Plus]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:58:45Z" finished-at="2017-02-24T16:58:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.lgTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="lgTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="lgTemplateDataTest" duration-ms="4936" started-at="2017-02-24T16:58:45Z" data-provider="LG Template Test Data" finished-at="2017-02-24T16:58:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1024]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-single]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@147e2ae7]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgTemplateDataTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:58:50Z" finished-at="2017-02-24T16:58:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:50Z" finished-at="2017-02-24T16:58:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.lgTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="lgTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="lgTemplateDataTest" duration-ms="3071" started-at="2017-02-24T16:58:50Z" data-provider="LG Template Test Data" finished-at="2017-02-24T16:58:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1024]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-double-main]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@448c8166]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgTemplateDataTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:53Z" finished-at="2017-02-24T16:58:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.lgTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:53Z" finished-at="2017-02-24T16:58:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="lgTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="lgTemplateDataTest" duration-ms="3039" started-at="2017-02-24T16:58:53Z" data-provider="LG Template Test Data" finished-at="2017-02-24T16:58:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1024]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-double-sidebar]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@4470fbd6]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgTemplateDataTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:56Z" finished-at="2017-02-24T16:58:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:56Z" finished-at="2017-02-24T16:58:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.lgTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="lgTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="lgTemplateDataTest" duration-ms="2793" started-at="2017-02-24T16:58:56Z" data-provider="LG Template Test Data" finished-at="2017-02-24T16:58:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1024]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-double-main-left]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@15d49048]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgTemplateDataTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:58:58Z" finished-at="2017-02-24T16:58:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="lgTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="lgTemplateDataTest" duration-ms="2514" started-at="2017-02-24T16:58:58Z" data-provider="LG Template Test Data" finished-at="2017-02-24T16:59:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1024]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-double-sidebar-left]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@7098b907]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgTemplateDataTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:58Z" finished-at="2017-02-24T16:58:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.lgTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:59:01Z" finished-at="2017-02-24T16:59:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.lgTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:01Z" finished-at="2017-02-24T16:59:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="lgTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="lgTemplateDataTest" duration-ms="2519" started-at="2017-02-24T16:59:01Z" data-provider="LG Template Test Data" finished-at="2017-02-24T16:59:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1024]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-static-small]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@503f91c3]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgTemplateDataTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:59:03Z" finished-at="2017-02-24T16:59:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.lgTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:03Z" finished-at="2017-02-24T16:59:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="lgTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="lgTemplateDataTest" duration-ms="2540" started-at="2017-02-24T16:59:03Z" data-provider="LG Template Test Data" finished-at="2017-02-24T16:59:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1024]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-static-large]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@13526e59]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgTemplateDataTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:06Z" finished-at="2017-02-24T16:59:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:59:06Z" finished-at="2017-02-24T16:59:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.lgTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="lgTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="lgTemplateDataTest" duration-ms="5593" started-at="2017-02-24T16:59:06Z" data-provider="LG Template Test Data" finished-at="2017-02-24T16:59:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1024]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-single-adjoin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@2235eaab]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgTemplateDataTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:12Z" finished-at="2017-02-24T16:59:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="lgTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="lgTemplateDataTest" duration-ms="2586" started-at="2017-02-24T16:59:12Z" data-provider="LG Template Test Data" finished-at="2017-02-24T16:59:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1024]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-double-main-adjoin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@17503f6b]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgTemplateDataTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:12Z" finished-at="2017-02-24T16:59:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.lgTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:14Z" finished-at="2017-02-24T16:59:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="lgTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="lgTemplateDataTest" duration-ms="2543" started-at="2017-02-24T16:59:14Z" data-provider="LG Template Test Data" finished-at="2017-02-24T16:59:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1024]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-double-sidebar-adjoin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@3bcd05cb]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgTemplateDataTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:14Z" finished-at="2017-02-24T16:59:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.lgTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:17Z" finished-at="2017-02-24T16:59:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:59:17Z" finished-at="2017-02-24T16:59:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.lgTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="lgTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="lgTemplateDataTest" duration-ms="2711" started-at="2017-02-24T16:59:17Z" data-provider="LG Template Test Data" finished-at="2017-02-24T16:59:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1024]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-single-bottom]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@3b6d844d]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgTemplateDataTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:19Z" finished-at="2017-02-24T16:59:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:59:19Z" finished-at="2017-02-24T16:59:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.lgTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="lgTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="lgTemplateDataTest" duration-ms="2243" started-at="2017-02-24T16:59:19Z" data-provider="LG Template Test Data" finished-at="2017-02-24T16:59:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1024]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-single-smallgap]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@36804139]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgTemplateDataTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:59:22Z" finished-at="2017-02-24T16:59:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:22Z" finished-at="2017-02-24T16:59:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.lgTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="lgTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="lgTemplateDataTest" duration-ms="2568" started-at="2017-02-24T16:59:22Z" data-provider="LG Template Test Data" finished-at="2017-02-24T16:59:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1024]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-double-smallgap]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@20bd8be5]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgTemplateDataTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:24Z" finished-at="2017-02-24T16:59:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.lgTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="lgTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="lgTemplateDataTest" duration-ms="3502" started-at="2017-02-24T16:59:24Z" data-provider="LG Template Test Data" finished-at="2017-02-24T16:59:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1024]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-double-main-smallgap]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@730d2164]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgTemplateDataTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:24Z" finished-at="2017-02-24T16:59:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:28Z" finished-at="2017-02-24T16:59:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:28Z" finished-at="2017-02-24T16:59:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.lgTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="lgTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="lgTemplateDataTest" duration-ms="3024" started-at="2017-02-24T16:59:28Z" data-provider="LG Template Test Data" finished-at="2017-02-24T16:59:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1024]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-double-sidebar-smallgap]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@24959ca4]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgTemplateDataTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:31Z" finished-at="2017-02-24T16:59:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:59:31Z" finished-at="2017-02-24T16:59:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.lgTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="lgTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="lgTemplateDataTest" duration-ms="2350" started-at="2017-02-24T16:59:31Z" data-provider="LG Template Test Data" finished-at="2017-02-24T16:59:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1024]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-single-smallgap-bottom]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@10289886]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgTemplateDataTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:33Z" finished-at="2017-02-24T16:59:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:59:33Z" finished-at="2017-02-24T16:59:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.lgTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="lgTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="lgTemplateDataTest" duration-ms="2875" started-at="2017-02-24T16:59:33Z" data-provider="LG Template Test Data" finished-at="2017-02-24T16:59:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1024]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-single-largegap]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@5c86dbc5]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgTemplateDataTest -->
        <test-method status="PASS" signature="lgTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="lgTemplateDataTest" duration-ms="2413" started-at="2017-02-24T16:59:36Z" data-provider="LG Template Test Data" finished-at="2017-02-24T16:59:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1024]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-double-largegap]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@461ad730]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgTemplateDataTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:36Z" finished-at="2017-02-24T16:59:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.lgTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:36Z" finished-at="2017-02-24T16:59:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="lgTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="lgTemplateDataTest" duration-ms="2320" started-at="2017-02-24T16:59:38Z" data-provider="LG Template Test Data" finished-at="2017-02-24T16:59:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1024]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-double-main-largegap]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@4ee203eb]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgTemplateDataTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:38Z" finished-at="2017-02-24T16:59:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.lgTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:38Z" finished-at="2017-02-24T16:59:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:41Z" finished-at="2017-02-24T16:59:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="lgTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="lgTemplateDataTest" duration-ms="2349" started-at="2017-02-24T16:59:41Z" data-provider="LG Template Test Data" finished-at="2017-02-24T16:59:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1024]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-double-sidebar-largegap]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@1a5a4e19]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgTemplateDataTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:41Z" finished-at="2017-02-24T16:59:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.lgTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="lgTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="lgTemplateDataTest" duration-ms="2135" started-at="2017-02-24T16:59:43Z" data-provider="LG Template Test Data" finished-at="2017-02-24T16:59:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1024]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-single-largegap-bottom]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@7068e664]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgTemplateDataTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:43Z" finished-at="2017-02-24T16:59:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:43Z" finished-at="2017-02-24T16:59:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.lgTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:45Z" finished-at="2017-02-24T16:59:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:59:45Z" finished-at="2017-02-24T16:59:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.mdTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="mdTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="mdTemplateDataTest" duration-ms="4329" started-at="2017-02-24T16:59:45Z" data-provider="MD Template Test Data" finished-at="2017-02-24T16:59:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[768]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-single]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@5f9edf14]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTemplateDataTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:50Z" finished-at="2017-02-24T16:59:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:50Z" finished-at="2017-02-24T16:59:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.mdTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="mdTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="mdTemplateDataTest" duration-ms="2347" started-at="2017-02-24T16:59:50Z" data-provider="MD Template Test Data" finished-at="2017-02-24T16:59:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[768]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-double-main]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@68746f22]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTemplateDataTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:52Z" finished-at="2017-02-24T16:59:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="mdTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="mdTemplateDataTest" duration-ms="2449" started-at="2017-02-24T16:59:52Z" data-provider="MD Template Test Data" finished-at="2017-02-24T16:59:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[768]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-double-sidebar]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@2f01783a]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTemplateDataTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:52Z" finished-at="2017-02-24T16:59:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.mdTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:54Z" finished-at="2017-02-24T16:59:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:54Z" finished-at="2017-02-24T16:59:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.mdTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="mdTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="mdTemplateDataTest" duration-ms="2215" started-at="2017-02-24T16:59:54Z" data-provider="MD Template Test Data" finished-at="2017-02-24T16:59:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[768]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-double-main-left]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@68878f6d]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTemplateDataTest -->
        <test-method status="PASS" signature="mdTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="mdTemplateDataTest" duration-ms="2300" started-at="2017-02-24T16:59:57Z" data-provider="MD Template Test Data" finished-at="2017-02-24T16:59:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[768]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-double-sidebar-left]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@41488b16]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTemplateDataTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:57Z" finished-at="2017-02-24T16:59:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:57Z" finished-at="2017-02-24T16:59:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.mdTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:59Z" finished-at="2017-02-24T16:59:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:59:59Z" finished-at="2017-02-24T16:59:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.mdTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="mdTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="mdTemplateDataTest" duration-ms="2213" started-at="2017-02-24T16:59:59Z" data-provider="MD Template Test Data" finished-at="2017-02-24T17:00:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[768]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-static-small]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@a8ef162]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTemplateDataTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:00:01Z" finished-at="2017-02-24T17:00:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.mdTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:01Z" finished-at="2017-02-24T17:00:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="mdTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="mdTemplateDataTest" duration-ms="2349" started-at="2017-02-24T17:00:01Z" data-provider="MD Template Test Data" finished-at="2017-02-24T17:00:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[768]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-static-large]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@2eea88a1]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTemplateDataTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:00:03Z" finished-at="2017-02-24T17:00:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="mdTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="mdTemplateDataTest" duration-ms="2237" started-at="2017-02-24T17:00:03Z" data-provider="MD Template Test Data" finished-at="2017-02-24T17:00:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[768]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-single-adjoin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@7ac296f6]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTemplateDataTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:03Z" finished-at="2017-02-24T17:00:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.mdTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:06Z" finished-at="2017-02-24T17:00:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="mdTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="mdTemplateDataTest" duration-ms="2314" started-at="2017-02-24T17:00:06Z" data-provider="MD Template Test Data" finished-at="2017-02-24T17:00:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[768]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-double-main-adjoin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@7fd7a283]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTemplateDataTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:06Z" finished-at="2017-02-24T17:00:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.mdTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:08Z" finished-at="2017-02-24T17:00:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.mdTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:08Z" finished-at="2017-02-24T17:00:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="mdTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="mdTemplateDataTest" duration-ms="2333" started-at="2017-02-24T17:00:08Z" data-provider="MD Template Test Data" finished-at="2017-02-24T17:00:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[768]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-double-sidebar-adjoin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@22f59fa]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTemplateDataTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:00:10Z" finished-at="2017-02-24T17:00:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.mdTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:10Z" finished-at="2017-02-24T17:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="mdTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="mdTemplateDataTest" duration-ms="2322" started-at="2017-02-24T17:00:10Z" data-provider="MD Template Test Data" finished-at="2017-02-24T17:00:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[768]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-single-bottom]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@78fa769e]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTemplateDataTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:00:13Z" finished-at="2017-02-24T17:00:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.mdTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:13Z" finished-at="2017-02-24T17:00:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="mdTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="mdTemplateDataTest" duration-ms="2230" started-at="2017-02-24T17:00:13Z" data-provider="MD Template Test Data" finished-at="2017-02-24T17:00:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[768]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-single-smallgap]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@16612a51]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTemplateDataTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:00:15Z" finished-at="2017-02-24T17:00:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="mdTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="mdTemplateDataTest" duration-ms="2342" started-at="2017-02-24T17:00:15Z" data-provider="MD Template Test Data" finished-at="2017-02-24T17:00:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[768]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-double-smallgap]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@54e041a4]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTemplateDataTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:15Z" finished-at="2017-02-24T17:00:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.mdTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:00:17Z" finished-at="2017-02-24T17:00:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:17Z" finished-at="2017-02-24T17:00:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.mdTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="mdTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="mdTemplateDataTest" duration-ms="2328" started-at="2017-02-24T17:00:17Z" data-provider="MD Template Test Data" finished-at="2017-02-24T17:00:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[768]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-double-main-smallgap]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@2c78324b]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTemplateDataTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:00:20Z" finished-at="2017-02-24T17:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:20Z" finished-at="2017-02-24T17:00:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.mdTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="mdTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="mdTemplateDataTest" duration-ms="2450" started-at="2017-02-24T17:00:20Z" data-provider="MD Template Test Data" finished-at="2017-02-24T17:00:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[768]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-double-sidebar-smallgap]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@79defdc]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTemplateDataTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:00:22Z" finished-at="2017-02-24T17:00:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.mdTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:22Z" finished-at="2017-02-24T17:00:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="mdTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="mdTemplateDataTest" duration-ms="2259" started-at="2017-02-24T17:00:22Z" data-provider="MD Template Test Data" finished-at="2017-02-24T17:00:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[768]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-single-smallgap-bottom]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@18317edc]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTemplateDataTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:24Z" finished-at="2017-02-24T17:00:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:24Z" finished-at="2017-02-24T17:00:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.mdTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="mdTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="mdTemplateDataTest" duration-ms="2444" started-at="2017-02-24T17:00:24Z" data-provider="MD Template Test Data" finished-at="2017-02-24T17:00:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[768]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-single-largegap]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@4e0ae11f]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTemplateDataTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:00:27Z" finished-at="2017-02-24T17:00:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="mdTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="mdTemplateDataTest" duration-ms="2133" started-at="2017-02-24T17:00:27Z" data-provider="MD Template Test Data" finished-at="2017-02-24T17:00:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[768]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-double-largegap]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@238d68ff]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTemplateDataTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:27Z" finished-at="2017-02-24T17:00:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.mdTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="mdTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="mdTemplateDataTest" duration-ms="2592" started-at="2017-02-24T17:00:29Z" data-provider="MD Template Test Data" finished-at="2017-02-24T17:00:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[768]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-double-main-largegap]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@4b86805d]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTemplateDataTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:29Z" finished-at="2017-02-24T17:00:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.mdTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:29Z" finished-at="2017-02-24T17:00:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:31Z" finished-at="2017-02-24T17:00:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:31Z" finished-at="2017-02-24T17:00:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.mdTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="mdTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="mdTemplateDataTest" duration-ms="2285" started-at="2017-02-24T17:00:31Z" data-provider="MD Template Test Data" finished-at="2017-02-24T17:00:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[768]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-double-sidebar-largegap]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@5852c06f]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTemplateDataTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:34Z" finished-at="2017-02-24T17:00:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:00:34Z" finished-at="2017-02-24T17:00:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.mdTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="mdTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="mdTemplateDataTest" duration-ms="2328" started-at="2017-02-24T17:00:34Z" data-provider="MD Template Test Data" finished-at="2017-02-24T17:00:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[768]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-single-largegap-bottom]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@4149c063]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdTemplateDataTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:36Z" finished-at="2017-02-24T17:00:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:00:36Z" finished-at="2017-02-24T17:00:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.smTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="smTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="smTemplateDataTest" duration-ms="2421" started-at="2017-02-24T17:00:36Z" data-provider="SM Template Test Data" finished-at="2017-02-24T17:00:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[480]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-single]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@5f0fd5a0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTemplateDataTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:38Z" finished-at="2017-02-24T17:00:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:00:38Z" finished-at="2017-02-24T17:00:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.smTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="smTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="smTemplateDataTest" duration-ms="2211" started-at="2017-02-24T17:00:38Z" data-provider="SM Template Test Data" finished-at="2017-02-24T17:00:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[480]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-double-main]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@64e7619d]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTemplateDataTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:00:41Z" finished-at="2017-02-24T17:00:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="smTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="smTemplateDataTest" duration-ms="2107" started-at="2017-02-24T17:00:41Z" data-provider="SM Template Test Data" finished-at="2017-02-24T17:00:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[480]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-double-sidebar]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@495ee280]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTemplateDataTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:41Z" finished-at="2017-02-24T17:00:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.smTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:00:43Z" finished-at="2017-02-24T17:00:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="smTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="smTemplateDataTest" duration-ms="2344" started-at="2017-02-24T17:00:43Z" data-provider="SM Template Test Data" finished-at="2017-02-24T17:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[480]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-double-main-left]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@4fa1c212]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTemplateDataTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:43Z" finished-at="2017-02-24T17:00:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.smTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:45Z" finished-at="2017-02-24T17:00:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:45Z" finished-at="2017-02-24T17:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.smTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="smTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="smTemplateDataTest" duration-ms="2153" started-at="2017-02-24T17:00:45Z" data-provider="SM Template Test Data" finished-at="2017-02-24T17:00:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[480]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-double-sidebar-left]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@6ea2bc93]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTemplateDataTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:00:47Z" finished-at="2017-02-24T17:00:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="smTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="smTemplateDataTest" duration-ms="2066" started-at="2017-02-24T17:00:47Z" data-provider="SM Template Test Data" finished-at="2017-02-24T17:00:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[480]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-static-small]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@3116c353]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTemplateDataTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:47Z" finished-at="2017-02-24T17:00:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.smTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:49Z" finished-at="2017-02-24T17:00:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.smTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="smTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="smTemplateDataTest" duration-ms="2255" started-at="2017-02-24T17:00:49Z" data-provider="SM Template Test Data" finished-at="2017-02-24T17:00:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[480]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-static-large]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@f627d13]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTemplateDataTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:49Z" finished-at="2017-02-24T17:00:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:52Z" finished-at="2017-02-24T17:00:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:52Z" finished-at="2017-02-24T17:00:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.smTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="smTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="smTemplateDataTest" duration-ms="2051" started-at="2017-02-24T17:00:52Z" data-provider="SM Template Test Data" finished-at="2017-02-24T17:00:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[480]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-single-adjoin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@4e928fbf]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTemplateDataTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:54Z" finished-at="2017-02-24T17:00:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.smTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="smTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="smTemplateDataTest" duration-ms="2128" started-at="2017-02-24T17:00:54Z" data-provider="SM Template Test Data" finished-at="2017-02-24T17:00:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[480]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-double-main-adjoin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@352ff4da]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTemplateDataTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:54Z" finished-at="2017-02-24T17:00:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:00:56Z" finished-at="2017-02-24T17:00:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.smTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:56Z" finished-at="2017-02-24T17:00:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="smTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="smTemplateDataTest" duration-ms="2261" started-at="2017-02-24T17:00:56Z" data-provider="SM Template Test Data" finished-at="2017-02-24T17:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[480]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-double-sidebar-adjoin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@3224a577]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTemplateDataTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:58Z" finished-at="2017-02-24T17:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.smTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:58Z" finished-at="2017-02-24T17:00:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="smTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="smTemplateDataTest" duration-ms="2286" started-at="2017-02-24T17:00:58Z" data-provider="SM Template Test Data" finished-at="2017-02-24T17:01:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[480]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-single-bottom]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@2e32ccc5]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTemplateDataTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:01:00Z" finished-at="2017-02-24T17:01:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:00Z" finished-at="2017-02-24T17:01:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.smTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="smTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="smTemplateDataTest" duration-ms="2204" started-at="2017-02-24T17:01:00Z" data-provider="SM Template Test Data" finished-at="2017-02-24T17:01:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[480]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-single-smallgap]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@748741cb]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTemplateDataTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:03Z" finished-at="2017-02-24T17:01:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:03Z" finished-at="2017-02-24T17:01:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.smTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="smTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="smTemplateDataTest" duration-ms="2171" started-at="2017-02-24T17:01:03Z" data-provider="SM Template Test Data" finished-at="2017-02-24T17:01:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[480]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-double-smallgap]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@3e44f2a5]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTemplateDataTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:05Z" finished-at="2017-02-24T17:01:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.smTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="smTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="smTemplateDataTest" duration-ms="2091" started-at="2017-02-24T17:01:05Z" data-provider="SM Template Test Data" finished-at="2017-02-24T17:01:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[480]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-double-main-smallgap]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@295cf707]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTemplateDataTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:05Z" finished-at="2017-02-24T17:01:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:07Z" finished-at="2017-02-24T17:01:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.smTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="smTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="smTemplateDataTest" duration-ms="2044" started-at="2017-02-24T17:01:07Z" data-provider="SM Template Test Data" finished-at="2017-02-24T17:01:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[480]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-double-sidebar-smallgap]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@1130520d]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTemplateDataTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:07Z" finished-at="2017-02-24T17:01:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="smTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="smTemplateDataTest" duration-ms="4791" started-at="2017-02-24T17:01:09Z" data-provider="SM Template Test Data" finished-at="2017-02-24T17:01:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[480]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-single-smallgap-bottom]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@5f77d0f9]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTemplateDataTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:09Z" finished-at="2017-02-24T17:01:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:09Z" finished-at="2017-02-24T17:01:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.smTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:01:14Z" finished-at="2017-02-24T17:01:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="smTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="smTemplateDataTest" duration-ms="2173" started-at="2017-02-24T17:01:14Z" data-provider="SM Template Test Data" finished-at="2017-02-24T17:01:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[480]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-single-largegap]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@463fd068]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTemplateDataTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:14Z" finished-at="2017-02-24T17:01:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.smTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:16Z" finished-at="2017-02-24T17:01:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.smTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="smTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="smTemplateDataTest" duration-ms="2684" started-at="2017-02-24T17:01:16Z" data-provider="SM Template Test Data" finished-at="2017-02-24T17:01:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[480]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-double-largegap]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@895e367]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTemplateDataTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:16Z" finished-at="2017-02-24T17:01:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:19Z" finished-at="2017-02-24T17:01:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:01:19Z" finished-at="2017-02-24T17:01:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.smTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="smTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="smTemplateDataTest" duration-ms="2011" started-at="2017-02-24T17:01:19Z" data-provider="SM Template Test Data" finished-at="2017-02-24T17:01:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[480]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-double-main-largegap]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@1b266842]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTemplateDataTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:21Z" finished-at="2017-02-24T17:01:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.smTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="smTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="smTemplateDataTest" duration-ms="2012" started-at="2017-02-24T17:01:21Z" data-provider="SM Template Test Data" finished-at="2017-02-24T17:01:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[480]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-double-sidebar-largegap]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@7a3793c7]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTemplateDataTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:21Z" finished-at="2017-02-24T17:01:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:23Z" finished-at="2017-02-24T17:01:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:01:23Z" finished-at="2017-02-24T17:01:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.smTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="smTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="smTemplateDataTest" duration-ms="2176" started-at="2017-02-24T17:01:23Z" data-provider="SM Template Test Data" finished-at="2017-02-24T17:01:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[480]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-single-largegap-bottom]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@42b3b079]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTemplateDataTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:01:25Z" finished-at="2017-02-24T17:01:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:25Z" finished-at="2017-02-24T17:01:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xlTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xlTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="xlTemplateDataTest" duration-ms="2279" started-at="2017-02-24T17:01:25Z" data-provider="XL Template Test Data" finished-at="2017-02-24T17:01:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1140]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-single]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@1fd14d74]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlTemplateDataTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:27Z" finished-at="2017-02-24T17:01:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:27Z" finished-at="2017-02-24T17:01:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xlTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xlTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="xlTemplateDataTest" duration-ms="2363" started-at="2017-02-24T17:01:27Z" data-provider="XL Template Test Data" finished-at="2017-02-24T17:01:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1140]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-double-main]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@563e4951]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlTemplateDataTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:01:29Z" finished-at="2017-02-24T17:01:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:29Z" finished-at="2017-02-24T17:01:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xlTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xlTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="xlTemplateDataTest" duration-ms="2209" started-at="2017-02-24T17:01:29Z" data-provider="XL Template Test Data" finished-at="2017-02-24T17:01:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1140]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-double-sidebar]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@4066c471]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlTemplateDataTest -->
        <test-method status="PASS" signature="xlTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="xlTemplateDataTest" duration-ms="2356" started-at="2017-02-24T17:01:32Z" data-provider="XL Template Test Data" finished-at="2017-02-24T17:01:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1140]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-double-main-left]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@2b175c00]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlTemplateDataTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:32Z" finished-at="2017-02-24T17:01:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:32Z" finished-at="2017-02-24T17:01:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xlTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:34Z" finished-at="2017-02-24T17:01:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:34Z" finished-at="2017-02-24T17:01:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xlTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xlTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="xlTemplateDataTest" duration-ms="2306" started-at="2017-02-24T17:01:34Z" data-provider="XL Template Test Data" finished-at="2017-02-24T17:01:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1140]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-double-sidebar-left]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@3eb81efb]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlTemplateDataTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:36Z" finished-at="2017-02-24T17:01:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xlTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:36Z" finished-at="2017-02-24T17:01:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="xlTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="xlTemplateDataTest" duration-ms="2378" started-at="2017-02-24T17:01:36Z" data-provider="XL Template Test Data" finished-at="2017-02-24T17:01:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1140]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-static-small]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@1ae8bcbc]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlTemplateDataTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:01:39Z" finished-at="2017-02-24T17:01:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:39Z" finished-at="2017-02-24T17:01:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xlTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xlTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="xlTemplateDataTest" duration-ms="2275" started-at="2017-02-24T17:01:39Z" data-provider="XL Template Test Data" finished-at="2017-02-24T17:01:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1140]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-static-large]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@6cdba6dc]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlTemplateDataTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:41Z" finished-at="2017-02-24T17:01:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="xlTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="xlTemplateDataTest" duration-ms="2436" started-at="2017-02-24T17:01:41Z" data-provider="XL Template Test Data" finished-at="2017-02-24T17:01:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1140]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-single-adjoin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@7d3d101b]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlTemplateDataTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:41Z" finished-at="2017-02-24T17:01:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xlTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:43Z" finished-at="2017-02-24T17:01:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:01:43Z" finished-at="2017-02-24T17:01:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xlTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xlTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="xlTemplateDataTest" duration-ms="2611" started-at="2017-02-24T17:01:43Z" data-provider="XL Template Test Data" finished-at="2017-02-24T17:01:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1140]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-double-main-adjoin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@30c8681]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlTemplateDataTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:01:46Z" finished-at="2017-02-24T17:01:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="xlTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="xlTemplateDataTest" duration-ms="2320" started-at="2017-02-24T17:01:46Z" data-provider="XL Template Test Data" finished-at="2017-02-24T17:01:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1140]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-double-sidebar-adjoin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@5cdec700]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlTemplateDataTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:46Z" finished-at="2017-02-24T17:01:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xlTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:01:48Z" finished-at="2017-02-24T17:01:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xlTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:48Z" finished-at="2017-02-24T17:01:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="xlTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="xlTemplateDataTest" duration-ms="2236" started-at="2017-02-24T17:01:48Z" data-provider="XL Template Test Data" finished-at="2017-02-24T17:01:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1140]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-single-bottom]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@6d026701]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlTemplateDataTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:50Z" finished-at="2017-02-24T17:01:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:01:50Z" finished-at="2017-02-24T17:01:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xlTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xlTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="xlTemplateDataTest" duration-ms="2291" started-at="2017-02-24T17:01:50Z" data-provider="XL Template Test Data" finished-at="2017-02-24T17:01:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1140]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-single-smallgap]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@78aa1f72]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlTemplateDataTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:53Z" finished-at="2017-02-24T17:01:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:01:53Z" finished-at="2017-02-24T17:01:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xlTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xlTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="xlTemplateDataTest" duration-ms="2254" started-at="2017-02-24T17:01:53Z" data-provider="XL Template Test Data" finished-at="2017-02-24T17:01:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1140]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-double-smallgap]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@1f75a668]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlTemplateDataTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:01:55Z" finished-at="2017-02-24T17:01:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:55Z" finished-at="2017-02-24T17:01:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xlTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xlTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="xlTemplateDataTest" duration-ms="2362" started-at="2017-02-24T17:01:55Z" data-provider="XL Template Test Data" finished-at="2017-02-24T17:01:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1140]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-double-main-smallgap]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@35399441]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlTemplateDataTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:01:57Z" finished-at="2017-02-24T17:01:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xlTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:57Z" finished-at="2017-02-24T17:01:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="xlTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="xlTemplateDataTest" duration-ms="2211" started-at="2017-02-24T17:01:57Z" data-provider="XL Template Test Data" finished-at="2017-02-24T17:02:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1140]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-double-sidebar-smallgap]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@4b7dc788]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlTemplateDataTest -->
        <test-method status="PASS" signature="xlTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="xlTemplateDataTest" duration-ms="2099" started-at="2017-02-24T17:02:00Z" data-provider="XL Template Test Data" finished-at="2017-02-24T17:02:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1140]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-single-smallgap-bottom]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@6304101a]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlTemplateDataTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:00Z" finished-at="2017-02-24T17:02:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xlTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:00Z" finished-at="2017-02-24T17:02:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="xlTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="xlTemplateDataTest" duration-ms="2074" started-at="2017-02-24T17:02:02Z" data-provider="XL Template Test Data" finished-at="2017-02-24T17:02:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1140]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-single-largegap]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@5170bcf4]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlTemplateDataTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:02Z" finished-at="2017-02-24T17:02:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xlTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:02Z" finished-at="2017-02-24T17:02:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:04Z" finished-at="2017-02-24T17:02:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xlTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xlTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="xlTemplateDataTest" duration-ms="3489" started-at="2017-02-24T17:02:04Z" data-provider="XL Template Test Data" finished-at="2017-02-24T17:02:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1140]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-double-largegap]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@2812b107]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlTemplateDataTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:04Z" finished-at="2017-02-24T17:02:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="xlTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="xlTemplateDataTest" duration-ms="2127" started-at="2017-02-24T17:02:07Z" data-provider="XL Template Test Data" finished-at="2017-02-24T17:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1140]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-double-main-largegap]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@df6620a]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlTemplateDataTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:07Z" finished-at="2017-02-24T17:02:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:07Z" finished-at="2017-02-24T17:02:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xlTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:02:09Z" finished-at="2017-02-24T17:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="xlTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="xlTemplateDataTest" duration-ms="2079" started-at="2017-02-24T17:02:09Z" data-provider="XL Template Test Data" finished-at="2017-02-24T17:02:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1140]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-double-sidebar-largegap]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@4e31276e]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlTemplateDataTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:09Z" finished-at="2017-02-24T17:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xlTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:02:11Z" finished-at="2017-02-24T17:02:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:11Z" finished-at="2017-02-24T17:02:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xlTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xlTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="xlTemplateDataTest" duration-ms="2219" started-at="2017-02-24T17:02:11Z" data-provider="XL Template Test Data" finished-at="2017-02-24T17:02:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1140]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-single-largegap-bottom]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@1a72a540]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlTemplateDataTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:02:14Z" finished-at="2017-02-24T17:02:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="xsTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="xsTemplateDataTest" duration-ms="2412" started-at="2017-02-24T17:02:14Z" data-provider="XS Template Test Data" finished-at="2017-02-24T17:02:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[479]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-single]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@4816278d]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsTemplateDataTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:14Z" finished-at="2017-02-24T17:02:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xsTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:16Z" finished-at="2017-02-24T17:02:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xsTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:16Z" finished-at="2017-02-24T17:02:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="xsTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="xsTemplateDataTest" duration-ms="2532" started-at="2017-02-24T17:02:16Z" data-provider="XS Template Test Data" finished-at="2017-02-24T17:02:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[479]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-double-main]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@4eaf3684]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsTemplateDataTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:02:19Z" finished-at="2017-02-24T17:02:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="xsTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="xsTemplateDataTest" duration-ms="2106" started-at="2017-02-24T17:02:19Z" data-provider="XS Template Test Data" finished-at="2017-02-24T17:02:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[479]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-double-sidebar]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@40317ba2]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsTemplateDataTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:19Z" finished-at="2017-02-24T17:02:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xsTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xsTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="xsTemplateDataTest" duration-ms="2263" started-at="2017-02-24T17:02:21Z" data-provider="XS Template Test Data" finished-at="2017-02-24T17:02:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[479]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-double-main-left]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@3c01cfa1]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsTemplateDataTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:21Z" finished-at="2017-02-24T17:02:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xsTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:21Z" finished-at="2017-02-24T17:02:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="xsTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="xsTemplateDataTest" duration-ms="2242" started-at="2017-02-24T17:02:23Z" data-provider="XS Template Test Data" finished-at="2017-02-24T17:02:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[479]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-double-sidebar-left]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@45d2ade3]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsTemplateDataTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:23Z" finished-at="2017-02-24T17:02:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xsTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:23Z" finished-at="2017-02-24T17:02:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:25Z" finished-at="2017-02-24T17:02:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:02:25Z" finished-at="2017-02-24T17:02:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xsTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xsTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="xsTemplateDataTest" duration-ms="2278" started-at="2017-02-24T17:02:25Z" data-provider="XS Template Test Data" finished-at="2017-02-24T17:02:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[479]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-static-small]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@727eb8cb]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsTemplateDataTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:28Z" finished-at="2017-02-24T17:02:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xsTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:28Z" finished-at="2017-02-24T17:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="xsTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="xsTemplateDataTest" duration-ms="2290" started-at="2017-02-24T17:02:28Z" data-provider="XS Template Test Data" finished-at="2017-02-24T17:02:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[479]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-static-large]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@39d9314d]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsTemplateDataTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:30Z" finished-at="2017-02-24T17:02:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:30Z" finished-at="2017-02-24T17:02:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xsTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xsTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="xsTemplateDataTest" duration-ms="2452" started-at="2017-02-24T17:02:30Z" data-provider="XS Template Test Data" finished-at="2017-02-24T17:02:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[479]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-single-adjoin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@b978d10]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsTemplateDataTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:32Z" finished-at="2017-02-24T17:02:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="xsTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="xsTemplateDataTest" duration-ms="2410" started-at="2017-02-24T17:02:32Z" data-provider="XS Template Test Data" finished-at="2017-02-24T17:02:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[479]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-double-main-adjoin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@5b7a8434]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsTemplateDataTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:32Z" finished-at="2017-02-24T17:02:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xsTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xsTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="xsTemplateDataTest" duration-ms="2147" started-at="2017-02-24T17:02:35Z" data-provider="XS Template Test Data" finished-at="2017-02-24T17:02:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[479]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-double-sidebar-adjoin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@5c45d770]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsTemplateDataTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:35Z" finished-at="2017-02-24T17:02:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xsTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:35Z" finished-at="2017-02-24T17:02:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:37Z" finished-at="2017-02-24T17:02:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xsTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xsTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="xsTemplateDataTest" duration-ms="3772" started-at="2017-02-24T17:02:37Z" data-provider="XS Template Test Data" finished-at="2017-02-24T17:02:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[479]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-single-bottom]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@2ce6c6ec]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsTemplateDataTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:37Z" finished-at="2017-02-24T17:02:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="xsTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="xsTemplateDataTest" duration-ms="2107" started-at="2017-02-24T17:02:41Z" data-provider="XS Template Test Data" finished-at="2017-02-24T17:02:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[479]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-single-smallgap]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@1bae316d]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsTemplateDataTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:41Z" finished-at="2017-02-24T17:02:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:41Z" finished-at="2017-02-24T17:02:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xsTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:02:43Z" finished-at="2017-02-24T17:02:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="xsTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="xsTemplateDataTest" duration-ms="2216" started-at="2017-02-24T17:02:43Z" data-provider="XS Template Test Data" finished-at="2017-02-24T17:02:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[479]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-double-smallgap]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@147a5d08]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsTemplateDataTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:43Z" finished-at="2017-02-24T17:02:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xsTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:02:45Z" finished-at="2017-02-24T17:02:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xsTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:45Z" finished-at="2017-02-24T17:02:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="xsTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="xsTemplateDataTest" duration-ms="2421" started-at="2017-02-24T17:02:45Z" data-provider="XS Template Test Data" finished-at="2017-02-24T17:02:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[479]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-double-main-smallgap]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@6676f6a0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsTemplateDataTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:02:47Z" finished-at="2017-02-24T17:02:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:47Z" finished-at="2017-02-24T17:02:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xsTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xsTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="xsTemplateDataTest" duration-ms="2276" started-at="2017-02-24T17:02:47Z" data-provider="XS Template Test Data" finished-at="2017-02-24T17:02:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[479]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-double-sidebar-smallgap]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@7cbd9d24]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsTemplateDataTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:50Z" finished-at="2017-02-24T17:02:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xsTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xsTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="xsTemplateDataTest" duration-ms="2422" started-at="2017-02-24T17:02:50Z" data-provider="XS Template Test Data" finished-at="2017-02-24T17:02:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[479]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-single-smallgap-bottom]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@1672fe87]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsTemplateDataTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:50Z" finished-at="2017-02-24T17:02:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:52Z" finished-at="2017-02-24T17:02:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:52Z" finished-at="2017-02-24T17:02:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xsTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xsTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="xsTemplateDataTest" duration-ms="2327" started-at="2017-02-24T17:02:52Z" data-provider="XS Template Test Data" finished-at="2017-02-24T17:02:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[479]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-single-largegap]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@5026735c]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsTemplateDataTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:54Z" finished-at="2017-02-24T17:02:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xsTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:54Z" finished-at="2017-02-24T17:02:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="xsTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="xsTemplateDataTest" duration-ms="2201" started-at="2017-02-24T17:02:54Z" data-provider="XS Template Test Data" finished-at="2017-02-24T17:02:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[479]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-double-largegap]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@1b45c0e]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsTemplateDataTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:02:57Z" finished-at="2017-02-24T17:02:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="xsTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="xsTemplateDataTest" duration-ms="2639" started-at="2017-02-24T17:02:57Z" data-provider="XS Template Test Data" finished-at="2017-02-24T17:02:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[479]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-double-main-largegap]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@11f0a5a1]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsTemplateDataTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:57Z" finished-at="2017-02-24T17:02:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xsTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:59Z" finished-at="2017-02-24T17:02:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:59Z" finished-at="2017-02-24T17:02:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xsTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xsTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="xsTemplateDataTest" duration-ms="2228" started-at="2017-02-24T17:02:59Z" data-provider="XS Template Test Data" finished-at="2017-02-24T17:03:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[479]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-double-sidebar-largegap]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@10f7f7de]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsTemplateDataTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:03:01Z" finished-at="2017-02-24T17:03:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="xsTemplateDataTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="xsTemplateDataTest" duration-ms="2196" started-at="2017-02-24T17:03:01Z" data-provider="XS Template Test Data" finished-at="2017-02-24T17:03:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[479]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: template-single-largegap-bottom]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@73a8da0f]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsTemplateDataTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:03:01Z" finished-at="2017-02-24T17:03:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TemplatesTest.xsTemplateDataTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="tearDown(java.lang.String)[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="tearDown" is-config="true" duration-ms="1390" started-at="2017-02-24T17:03:04Z" finished-at="2017-02-24T17:03:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[off]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TemplatesTest@1dfe2924]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:03:04Z" finished-at="2017-02-24T17:03:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- elementsTests.TemplatesTest -->
      <class name="elementsTests.TypographyTest">
        <test-method status="PASS" signature="setUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="setUp" is-config="true" duration-ms="24223" started-at="2017-02-24T16:57:16Z" finished-at="2017-02-24T16:57:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sauce]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OS X 10.11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[54.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[off]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[iOS]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[iPhone 6 Plus]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[9.3]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[safari]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[1.5.3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="typographyTestBeforeClass(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="typographyTestBeforeClass" is-config="true" duration-ms="1" started-at="2017-02-24T16:57:40Z" finished-at="2017-02-24T16:57:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sauce]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[off]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[iPhone 6 Plus]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[safari]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- typographyTestBeforeClass -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="beforeMethod" is-config="true" duration-ms="2787" started-at="2017-02-24T16:57:40Z" finished-at="2017-02-24T16:57:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.abbrTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="abbrTest()[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="abbrTest" duration-ms="323" started-at="2017-02-24T16:57:43Z" finished-at="2017-02-24T16:57:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abbrTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:57:43Z" finished-at="2017-02-24T16:57:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="beforeMethod" is-config="true" duration-ms="3604" started-at="2017-02-24T16:57:43Z" finished-at="2017-02-24T16:57:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.codeTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="codeTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="codeTest" duration-ms="2103" started-at="2017-02-24T16:57:47Z" data-provider="Code Test Data" finished-at="2017-02-24T16:57:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[code-block]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: code]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@5b7a7f33]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@790da477]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@5c7933ad]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@57bc27f5]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[30px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[30px]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[50px]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[50px]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[[Ljava.lang.String;@5fb759d6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- codeTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:57:49Z" finished-at="2017-02-24T16:57:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="beforeMethod" is-config="true" duration-ms="907" started-at="2017-02-24T16:57:49Z" finished-at="2017-02-24T16:57:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.codeTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="codeTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="codeTest" duration-ms="1965" started-at="2017-02-24T16:57:50Z" data-provider="Code Test Data" finished-at="2017-02-24T16:57:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[code-inline]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: code-inline]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@4b8d604b]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@5e7cd6cc]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@68c9d179]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@d554c5f]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[4px]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[4px]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[[Ljava.lang.String;@2dfaea86]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- codeTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:57:52Z" finished-at="2017-02-24T16:57:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="beforeMethod" is-config="true" duration-ms="959" started-at="2017-02-24T16:57:52Z" finished-at="2017-02-24T16:57:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.codeTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="codeTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;)[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="codeTest" duration-ms="2104" started-at="2017-02-24T16:57:53Z" data-provider="Code Test Data" finished-at="2017-02-24T16:57:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[kdd]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: user-input]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@15888343]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@33ecda92]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@14fc5f04]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@6e2829c7]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[4px]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[4px]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[[Ljava.lang.String;@3feb2dda]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- codeTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:57:55Z" finished-at="2017-02-24T16:57:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="beforeMethod" is-config="true" duration-ms="1157" started-at="2017-02-24T16:57:55Z" finished-at="2017-02-24T16:57:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.delAndInsTest(org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="delAndInsTest(org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="delAndInsTest" duration-ms="266" started-at="2017-02-24T16:57:56Z" data-provider="DelAndInsTag Test Data" finished-at="2017-02-24T16:57:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[By.id: delTag]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[delTag]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[line-through]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delAndInsTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:57:56Z" finished-at="2017-02-24T16:57:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="beforeMethod" is-config="true" duration-ms="1343" started-at="2017-02-24T16:57:56Z" finished-at="2017-02-24T16:57:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.delAndInsTest(org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="delAndInsTest(org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="delAndInsTest" duration-ms="234" started-at="2017-02-24T16:57:58Z" data-provider="DelAndInsTag Test Data" finished-at="2017-02-24T16:57:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[By.id: insTag]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[insTag]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[underline]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delAndInsTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:57:58Z" finished-at="2017-02-24T16:57:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="beforeMethod" is-config="true" duration-ms="996" started-at="2017-02-24T16:57:58Z" finished-at="2017-02-24T16:57:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.delAndInsTest(org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="delAndInsTest(org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="delAndInsTest" duration-ms="666" started-at="2017-02-24T16:57:59Z" data-provider="DelAndInsTag Test Data" finished-at="2017-02-24T16:58:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[By.id: insTag]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[insTagPseudo]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[underline]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[before]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delAndInsTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:00Z" finished-at="2017-02-24T16:58:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="beforeMethod" is-config="true" duration-ms="890" started-at="2017-02-24T16:58:00Z" finished-at="2017-02-24T16:58:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.delAndInsTest(org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="delAndInsTest(org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="delAndInsTest" duration-ms="697" started-at="2017-02-24T16:58:01Z" data-provider="DelAndInsTag Test Data" finished-at="2017-02-24T16:58:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[By.id: insTag]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[insTagPseudo]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[underline]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[after]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delAndInsTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:01Z" finished-at="2017-02-24T16:58:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="beforeMethod" is-config="true" duration-ms="965" started-at="2017-02-24T16:58:01Z" finished-at="2017-02-24T16:58:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.headerTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="headerTest()[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="headerTest" duration-ms="243" started-at="2017-02-24T16:58:02Z" finished-at="2017-02-24T16:58:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- headerTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:03Z" finished-at="2017-02-24T16:58:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="beforeMethod" is-config="true" duration-ms="882" started-at="2017-02-24T16:58:03Z" finished-at="2017-02-24T16:58:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.headingOrderedListTest(java.lang.String,org.openqa.selenium.By,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="headingOrderedListTest(java.lang.String, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="headingOrderedListTest" duration-ms="482" started-at="2017-02-24T16:58:03Z" data-provider="list following Heading Test Data" finished-at="2017-02-24T16:58:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[heading-ordered-list]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: heading-ordered-list]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[decimal]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- headingOrderedListTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="beforeMethod" is-config="true" duration-ms="984" started-at="2017-02-24T16:58:04Z" finished-at="2017-02-24T16:58:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.headingOrderedListTest(java.lang.String,org.openqa.selenium.By,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:04Z" finished-at="2017-02-24T16:58:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="headingOrderedListTest(java.lang.String, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="headingOrderedListTest" duration-ms="434" started-at="2017-02-24T16:58:05Z" data-provider="list following Heading Test Data" finished-at="2017-02-24T16:58:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[heading-unordered-list]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: heading-unordered-list]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[disc]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- headingOrderedListTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:58:05Z" finished-at="2017-02-24T16:58:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="beforeMethod" is-config="true" duration-ms="889" started-at="2017-02-24T16:58:05Z" finished-at="2017-02-24T16:58:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.leadTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="leadTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="leadTest" duration-ms="883" started-at="2017-02-24T16:58:06Z" data-provider="lead Test Data" finished-at="2017-02-24T16:58:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[lead]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: lead]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@13d73f29]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@565f390]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@7dc3712]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@2f67a4d3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- leadTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:07Z" finished-at="2017-02-24T16:58:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="beforeMethod" is-config="true" duration-ms="933" started-at="2017-02-24T16:58:07Z" finished-at="2017-02-24T16:58:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.linkStateTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="linkStateTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, java.lang.String)[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="linkStateTest" duration-ms="457" started-at="2017-02-24T16:58:08Z" data-provider="link state Test Data" finished-at="2017-02-24T16:58:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[normal]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: link]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@1a5b6f42]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[underline]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkStateTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="beforeMethod" is-config="true" duration-ms="1001" started-at="2017-02-24T16:58:08Z" finished-at="2017-02-24T16:58:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.linkStateTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:08Z" finished-at="2017-02-24T16:58:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="linkStateTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, java.lang.String)[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="linkStateTest" duration-ms="1154" started-at="2017-02-24T16:58:09Z" data-provider="link state Test Data" finished-at="2017-02-24T16:58:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[focus]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: link]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@5038d0b5]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[none]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkStateTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:11Z" finished-at="2017-02-24T16:58:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="beforeMethod" is-config="true" duration-ms="1003" started-at="2017-02-24T16:58:11Z" finished-at="2017-02-24T16:58:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.linkStateTest(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="linkStateTest(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, java.lang.String)[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="linkStateTest" duration-ms="943" started-at="2017-02-24T16:58:12Z" data-provider="link state Test Data" finished-at="2017-02-24T16:58:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[hover]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: link]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@32115b28]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[none]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkStateTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:13Z" finished-at="2017-02-24T16:58:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="beforeMethod" is-config="true" duration-ms="1073" started-at="2017-02-24T16:58:13Z" finished-at="2017-02-24T16:58:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.listTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="listTest()[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="listTest" duration-ms="1182" started-at="2017-02-24T16:58:14Z" finished-at="2017-02-24T16:58:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:58:15Z" finished-at="2017-02-24T16:58:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="beforeMethod" is-config="true" duration-ms="2145" started-at="2017-02-24T16:58:15Z" finished-at="2017-02-24T16:58:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.markTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="markTest()[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="markTest" duration-ms="4828" started-at="2017-02-24T16:58:17Z" finished-at="2017-02-24T16:58:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- markTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:58:22Z" finished-at="2017-02-24T16:58:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="beforeMethod" is-config="true" duration-ms="1136" started-at="2017-02-24T16:58:22Z" finished-at="2017-02-24T16:58:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.orderedListTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="orderedListTest()[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="orderedListTest" duration-ms="239" started-at="2017-02-24T16:58:23Z" finished-at="2017-02-24T16:58:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderedListTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="afterMethod" is-config="true" duration-ms="3" started-at="2017-02-24T16:58:23Z" finished-at="2017-02-24T16:58:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="beforeMethod" is-config="true" duration-ms="1065" started-at="2017-02-24T16:58:23Z" finished-at="2017-02-24T16:58:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.strongTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="strongTest()[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="strongTest" duration-ms="243" started-at="2017-02-24T16:58:24Z" finished-at="2017-02-24T16:58:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- strongTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:25Z" finished-at="2017-02-24T16:58:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="beforeMethod" is-config="true" duration-ms="894" started-at="2017-02-24T16:58:25Z" finished-at="2017-02-24T16:58:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.subtitleWithh1h2h3h4h5Test(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="subtitleWithh1h2h3h4h5Test(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="subtitleWithh1h2h3h4h5Test" duration-ms="1530" started-at="2017-02-24T16:58:25Z" data-provider="subtitle Test Data" finished-at="2017-02-24T16:58:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[subtitle-1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: subtitle-1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@39d76cb5]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@4a00d9cf]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@6736fa8d]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@52815fa3]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[34px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[6px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subtitleWithh1h2h3h4h5Test -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:27Z" finished-at="2017-02-24T16:58:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="beforeMethod" is-config="true" duration-ms="958" started-at="2017-02-24T16:58:27Z" finished-at="2017-02-24T16:58:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.subtitleWithh1h2h3h4h5Test(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="subtitleWithh1h2h3h4h5Test(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="subtitleWithh1h2h3h4h5Test" duration-ms="1373" started-at="2017-02-24T16:58:28Z" data-provider="subtitle Test Data" finished-at="2017-02-24T16:58:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[subtitle-2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: subtitle-2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@50313382]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@1cb346ea]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@4c012563]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@14a50707]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[6px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subtitleWithh1h2h3h4h5Test -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:29Z" finished-at="2017-02-24T16:58:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="beforeMethod" is-config="true" duration-ms="1215" started-at="2017-02-24T16:58:29Z" finished-at="2017-02-24T16:58:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.subtitleWithh1h2h3h4h5Test(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="subtitleWithh1h2h3h4h5Test(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="subtitleWithh1h2h3h4h5Test" duration-ms="1357" started-at="2017-02-24T16:58:30Z" data-provider="subtitle Test Data" finished-at="2017-02-24T16:58:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[subtitle-3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: subtitle-3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@4d518b32]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@4bd31064]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@e3c0e40]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@329dbdbf]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[6px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subtitleWithh1h2h3h4h5Test -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="beforeMethod" is-config="true" duration-ms="1109" started-at="2017-02-24T16:58:32Z" finished-at="2017-02-24T16:58:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.subtitleWithh1h2h3h4h5Test(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:32Z" finished-at="2017-02-24T16:58:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="subtitleWithh1h2h3h4h5Test(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="subtitleWithh1h2h3h4h5Test" duration-ms="1362" started-at="2017-02-24T16:58:33Z" data-provider="subtitle Test Data" finished-at="2017-02-24T16:58:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[subtitle-4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: subtitle-4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@7354b8c5]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@20d7d6fb]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@4ef782af]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@11d8ae8b]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[6px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subtitleWithh1h2h3h4h5Test -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:34Z" finished-at="2017-02-24T16:58:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="beforeMethod" is-config="true" duration-ms="1036" started-at="2017-02-24T16:58:34Z" finished-at="2017-02-24T16:58:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.subtitleWithh1h2h3h4h5Test(java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="subtitleWithh1h2h3h4h5Test(java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="subtitleWithh1h2h3h4h5Test" duration-ms="1529" started-at="2017-02-24T16:58:35Z" data-provider="subtitle Test Data" finished-at="2017-02-24T16:58:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[subtitle-5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: subtitle-5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@479cbee5]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@59e2d8e3]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@2b72cb8a]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@7f8a9499]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[6px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subtitleWithh1h2h3h4h5Test -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:37Z" finished-at="2017-02-24T16:58:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="beforeMethod" is-config="true" duration-ms="968" started-at="2017-02-24T16:58:37Z" finished-at="2017-02-24T16:58:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.superAndSubScriptTagTest(org.openqa.selenium.By,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="superAndSubScriptTagTest(org.openqa.selenium.By, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="superAndSubScriptTagTest" duration-ms="1013" started-at="2017-02-24T16:58:38Z" data-provider="SuperAndSubScript Test Data" finished-at="2017-02-24T16:58:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[By.id: superscript]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[superscript]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@5d43661b]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@12299890]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[relative]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[baseline]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- superAndSubScriptTagTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:58:39Z" finished-at="2017-02-24T16:58:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="beforeMethod" is-config="true" duration-ms="1649" started-at="2017-02-24T16:58:39Z" finished-at="2017-02-24T16:58:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.superAndSubScriptTagTest(org.openqa.selenium.By,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="superAndSubScriptTagTest(org.openqa.selenium.By, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="superAndSubScriptTagTest" duration-ms="940" started-at="2017-02-24T16:58:41Z" data-provider="SuperAndSubScript Test Data" finished-at="2017-02-24T16:58:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[By.id: subscript]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[subscript]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@2fba3fc4]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@4bf48f6]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[relative]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[baseline]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- superAndSubScriptTagTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:41Z" finished-at="2017-02-24T16:58:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="beforeMethod" is-config="true" duration-ms="1222" started-at="2017-02-24T16:58:41Z" finished-at="2017-02-24T16:58:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.unorderedListTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="unorderedListTest()[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="unorderedListTest" duration-ms="271" started-at="2017-02-24T16:58:43Z" finished-at="2017-02-24T16:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unorderedListTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:43Z" finished-at="2017-02-24T16:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="beforeMethod" is-config="true" duration-ms="927" started-at="2017-02-24T16:58:43Z" finished-at="2017-02-24T16:58:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.TypographyTest.unstyledListTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="unstyledListTest()[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="unstyledListTest" duration-ms="499" started-at="2017-02-24T16:58:44Z" finished-at="2017-02-24T16:58:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unstyledListTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:44Z" finished-at="2017-02-24T16:58:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="tearDown(java.lang.String)[pri:0, instance:elementsTests.TypographyTest@1f36e637]" name="tearDown" is-config="true" duration-ms="1418" started-at="2017-02-24T16:58:44Z" finished-at="2017-02-24T16:58:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[off]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- elementsTests.TypographyTest -->
      <class name="origamiV2Tests.AvatarDisplayTest">
        <test-method status="PASS" signature="setUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="setUp" is-config="true" duration-ms="13385" started-at="2017-02-24T17:02:51Z" finished-at="2017-02-24T17:03:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sauce]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OS X 10.11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[54.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[off]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[iOS]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[iPhone 6 Plus]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[9.3]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[safari]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[1.5.3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="avatarDisplayTestBeforeClass(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="avatarDisplayTestBeforeClass" is-config="true" duration-ms="0" started-at="2017-02-24T17:03:04Z" finished-at="2017-02-24T17:03:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sauce]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avatarDisplayTestBeforeClass -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:03:04Z" finished-at="2017-02-24T17:03:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AvatarDisplayTest.avatarALTTextConfigTest(java.lang.String,java.lang.String[],java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="avatarALTTextConfigTest(java.lang.String, [Ljava.lang.String;, java.lang.String)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="avatarALTTextConfigTest" duration-ms="6329" started-at="2017-02-24T17:03:04Z" data-provider="avatarALTText config Test Data" finished-at="2017-02-24T17:03:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[validAvatarALTText]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@73eb439a]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Valid Avatar Image ALT Text]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avatarALTTextConfigTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:03:10Z" finished-at="2017-02-24T17:03:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:03:10Z" finished-at="2017-02-24T17:03:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AvatarDisplayTest.avatarALTTextConfigTest(java.lang.String,java.lang.String[],java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="avatarALTTextConfigTest(java.lang.String, [Ljava.lang.String;, java.lang.String)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="avatarALTTextConfigTest" duration-ms="3839" started-at="2017-02-24T17:03:10Z" data-provider="avatarALTText config Test Data" finished-at="2017-02-24T17:03:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[emptyAvatarALTText]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@514646ef]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Empty Avatar Image ALT Text]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avatarALTTextConfigTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:03:14Z" finished-at="2017-02-24T17:03:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AvatarDisplayTest.avatarALTTextConfigTest(java.lang.String,java.lang.String[],java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:03:14Z" finished-at="2017-02-24T17:03:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="avatarALTTextConfigTest(java.lang.String, [Ljava.lang.String;, java.lang.String)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="avatarALTTextConfigTest" duration-ms="3879" started-at="2017-02-24T17:03:14Z" data-provider="avatarALTText config Test Data" finished-at="2017-02-24T17:03:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[noConfigAvatarALTText]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@305ffe9e]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Use Avatar Image]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avatarALTTextConfigTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:03:18Z" finished-at="2017-02-24T17:03:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:03:18Z" finished-at="2017-02-24T17:03:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AvatarDisplayTest.avatarShapeTest(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="avatarShapeTest(java.lang.String)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="avatarShapeTest" duration-ms="4273" started-at="2017-02-24T17:03:18Z" data-provider="Avatar Shape Test Data" finished-at="2017-02-24T17:03:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[small]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avatarShapeTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:03:22Z" finished-at="2017-02-24T17:03:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:03:22Z" finished-at="2017-02-24T17:03:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AvatarDisplayTest.avatarShapeTest(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="avatarShapeTest(java.lang.String)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="avatarShapeTest" duration-ms="4057" started-at="2017-02-24T17:03:22Z" data-provider="Avatar Shape Test Data" finished-at="2017-02-24T17:03:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[large]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avatarShapeTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:03:27Z" finished-at="2017-02-24T17:03:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="avatarShapeTest(java.lang.String)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="avatarShapeTest" duration-ms="4376" started-at="2017-02-24T17:03:27Z" data-provider="Avatar Shape Test Data" finished-at="2017-02-24T17:03:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[default]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avatarShapeTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:03:27Z" finished-at="2017-02-24T17:03:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AvatarDisplayTest.avatarShapeTest(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:03:31Z" finished-at="2017-02-24T17:03:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:03:31Z" finished-at="2017-02-24T17:03:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AvatarDisplayTest.avatarSizeConfigTest(java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="avatarSizeConfigTest(java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="avatarSizeConfigTest" duration-ms="4048" started-at="2017-02-24T17:03:31Z" data-provider="avatarSize config Test Data" finished-at="2017-02-24T17:03:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[noConfigAvatarSize]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@302c971f]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@1972e513]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@7ae0a9ec]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avatarSizeConfigTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:03:35Z" finished-at="2017-02-24T17:03:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="avatarSizeConfigTest(java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="avatarSizeConfigTest" duration-ms="3952" started-at="2017-02-24T17:03:35Z" data-provider="avatarSize config Test Data" finished-at="2017-02-24T17:03:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[configAvatarSizeSmall]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@35841320]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@61c4eee0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@6f10d5b6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avatarSizeConfigTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:03:35Z" finished-at="2017-02-24T17:03:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AvatarDisplayTest.avatarSizeConfigTest(java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="avatarSizeConfigTest(java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="avatarSizeConfigTest" duration-ms="5851" started-at="2017-02-24T17:03:39Z" data-provider="avatarSize config Test Data" finished-at="2017-02-24T17:03:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[configAvatarSizeLarge]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@1040be71]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@548a24a]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@433defed]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avatarSizeConfigTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:03:39Z" finished-at="2017-02-24T17:03:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AvatarDisplayTest.avatarSizeConfigTest(java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:03:39Z" finished-at="2017-02-24T17:03:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:03:45Z" finished-at="2017-02-24T17:03:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="avatarSizeConfigTest(java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="avatarSizeConfigTest" duration-ms="4484" started-at="2017-02-24T17:03:45Z" data-provider="avatarSize config Test Data" finished-at="2017-02-24T17:03:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[configAvatarSizeRandom]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@2a693f59]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@3f4faf53]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@7fd50002]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avatarSizeConfigTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:03:45Z" finished-at="2017-02-24T17:03:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AvatarDisplayTest.avatarSizeConfigTest(java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:03:49Z" finished-at="2017-02-24T17:03:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="avatarSizeTest(java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="avatarSizeTest" duration-ms="6222" started-at="2017-02-24T17:03:49Z" data-provider="Avatar Size Test Data" finished-at="2017-02-24T17:03:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[small]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@533bda92]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@304bb45b]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@723ca036]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@25be7b63]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[[Ljava.lang.String;@28dcca0c]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[[Ljava.lang.String;@45d84a20]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avatarSizeTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:03:49Z" finished-at="2017-02-24T17:03:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AvatarDisplayTest.avatarSizeTest(java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:03:55Z" finished-at="2017-02-24T17:03:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:03:55Z" finished-at="2017-02-24T17:03:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AvatarDisplayTest.avatarSizeTest(java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="avatarSizeTest(java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="avatarSizeTest" duration-ms="5800" started-at="2017-02-24T17:03:55Z" data-provider="Avatar Size Test Data" finished-at="2017-02-24T17:04:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[large]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@52f27fbd]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@4c163e3]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@4a8355dd]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@4d0d9fe7]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[[Ljava.lang.String;@c430e6c]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[[Ljava.lang.String;@312aa7c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avatarSizeTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:04:01Z" finished-at="2017-02-24T17:04:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AvatarDisplayTest.avatarSizeTest(java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:04:01Z" finished-at="2017-02-24T17:04:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="avatarSizeTest(java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="avatarSizeTest" duration-ms="6990" started-at="2017-02-24T17:04:01Z" data-provider="Avatar Size Test Data" finished-at="2017-02-24T17:04:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[default]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@536f2a7e]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@72bc6553]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@66982506]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@70cf32e3]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[[Ljava.lang.String;@5a59ca5e]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[[Ljava.lang.String;@4bdeaabb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avatarSizeTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:04:08Z" finished-at="2017-02-24T17:04:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="avatarURLTextConfigTest(java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="avatarURLTextConfigTest" duration-ms="4004" started-at="2017-02-24T17:04:08Z" data-provider="avatarURLText config Test Data" finished-at="2017-02-24T17:04:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[invalidAvatarURLText]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@6c4906d3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@65987993]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@71075444]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avatarURLTextConfigTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:04:08Z" finished-at="2017-02-24T17:04:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AvatarDisplayTest.avatarURLTextConfigTest(java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:04:12Z" finished-at="2017-02-24T17:04:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="avatarURLTextConfigTest(java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="avatarURLTextConfigTest" duration-ms="4038" started-at="2017-02-24T17:04:12Z" data-provider="avatarURLText config Test Data" finished-at="2017-02-24T17:04:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[validAvatarURLText]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@4f32a3ad]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@6b695b06]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@4d1bf319]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avatarURLTextConfigTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:04:12Z" finished-at="2017-02-24T17:04:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AvatarDisplayTest.avatarURLTextConfigTest(java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:04:16Z" finished-at="2017-02-24T17:04:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:04:16Z" finished-at="2017-02-24T17:04:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AvatarDisplayTest.avatarURLTextConfigTest(java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="avatarURLTextConfigTest(java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="avatarURLTextConfigTest" duration-ms="3671" started-at="2017-02-24T17:04:16Z" data-provider="avatarURLText config Test Data" finished-at="2017-02-24T17:04:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[emptyAvatarURLText]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@6f53b8a]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@5c80cf32]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@7d900ecf]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avatarURLTextConfigTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:04:20Z" finished-at="2017-02-24T17:04:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="avatarURLTextConfigTest(java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="avatarURLTextConfigTest" duration-ms="4259" started-at="2017-02-24T17:04:20Z" data-provider="avatarURLText config Test Data" finished-at="2017-02-24T17:04:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[noConfigAvatarURLTextForSmallSize]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@6f01b95f]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@4007f65e]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@1a245833]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avatarURLTextConfigTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:04:20Z" finished-at="2017-02-24T17:04:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AvatarDisplayTest.avatarURLTextConfigTest(java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="avatarURLTextConfigTest(java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="avatarURLTextConfigTest" duration-ms="3731" started-at="2017-02-24T17:04:24Z" data-provider="avatarURLText config Test Data" finished-at="2017-02-24T17:04:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[noConfigAvatarURLTextForLargeSize]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@673fdbce]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@5965d37]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@7a5ceedd]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avatarURLTextConfigTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:04:24Z" finished-at="2017-02-24T17:04:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:04:24Z" finished-at="2017-02-24T17:04:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AvatarDisplayTest.avatarURLTextConfigTest(java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:04:28Z" finished-at="2017-02-24T17:04:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:04:28Z" finished-at="2017-02-24T17:04:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AvatarDisplayTest.elementIdConfigTest(java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="elementIdConfigTest([Ljava.lang.String;)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="elementIdConfigTest" duration-ms="3333" started-at="2017-02-24T17:04:28Z" data-provider="elementId config Test Data" finished-at="2017-02-24T17:04:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@2d0399f4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- elementIdConfigTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:04:31Z" finished-at="2017-02-24T17:04:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="elementIdConfigTest([Ljava.lang.String;)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="elementIdConfigTest" duration-ms="3059" started-at="2017-02-24T17:04:31Z" data-provider="elementId config Test Data" finished-at="2017-02-24T17:04:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@14dd7b39]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- elementIdConfigTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:04:31Z" finished-at="2017-02-24T17:04:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.AvatarDisplayTest.elementIdConfigTest(java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:04:34Z" finished-at="2017-02-24T17:04:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="tearDown(java.lang.String)[pri:0, instance:origamiV2Tests.AvatarDisplayTest@cd2dae5]" name="tearDown" is-config="true" duration-ms="2147" started-at="2017-02-24T17:04:34Z" finished-at="2017-02-24T17:04:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[off]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- origamiV2Tests.AvatarDisplayTest -->
      <class name="compoundsTests.ButtonsTest">
        <test-method status="PASS" signature="setUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="setUp" is-config="true" duration-ms="18188" started-at="2017-02-24T17:00:26Z" finished-at="2017-02-24T17:00:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sauce]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OS X 10.11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[54.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[off]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[iOS]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[iPhone 6 Plus]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[9.3]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[safari]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[1.5.3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="avatarDisplayTestBeforeClass(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="avatarDisplayTestBeforeClass" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:44Z" finished-at="2017-02-24T17:00:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sauce]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avatarDisplayTestBeforeClass -->
        <test-method status="PASS" signature="appendValidClassNamesTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="appendValidClassNamesTest" duration-ms="7871" started-at="2017-02-24T17:00:44Z" data-provider="Append valid class names to Buttons Class Test Data" finished-at="2017-02-24T17:00:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: '',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[btnSize: 'large',]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'default-large',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[pe-btn--btn_large]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@76494737]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@4a003cbe]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[[Ljava.lang.String;@4082ba93]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[[Ljava.lang.String;@17fc391b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- appendValidClassNamesTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:44Z" finished-at="2017-02-24T17:00:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.appendValidClassNamesTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:00:52Z" finished-at="2017-02-24T17:00:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="appendValidClassNamesTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="appendValidClassNamesTest" duration-ms="3355" started-at="2017-02-24T17:00:52Z" data-provider="Append valid class names to Buttons Class Test Data" finished-at="2017-02-24T17:00:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: 'primary',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[btnSize: 'xlarge',]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'primary-xlarge',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[pe-btn__primary--btn_xlarge]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@2b30a42c]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@609e8838]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[[Ljava.lang.String;@359df09a]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[[Ljava.lang.String;@43df23d3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- appendValidClassNamesTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:52Z" finished-at="2017-02-24T17:00:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.appendValidClassNamesTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:56Z" finished-at="2017-02-24T17:00:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:00:56Z" finished-at="2017-02-24T17:00:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.appendValidClassNamesTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="appendValidClassNamesTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="appendValidClassNamesTest" duration-ms="4335" started-at="2017-02-24T17:00:56Z" data-provider="Append valid class names to Buttons Class Test Data" finished-at="2017-02-24T17:01:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: 'cta',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[btnSize: 'small',]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'cta-small',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[pe-btn__cta--btn_small]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@6d60fe40]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@792b749c]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[[Ljava.lang.String;@23e84203]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[[Ljava.lang.String;@19932c16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- appendValidClassNamesTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:00Z" finished-at="2017-02-24T17:01:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:01:00Z" finished-at="2017-02-24T17:01:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.clickEventButtonTest() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="clickEventButtonTest()[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="clickEventButtonTest" duration-ms="3880" started-at="2017-02-24T17:01:00Z" finished-at="2017-02-24T17:01:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickEventButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:01:04Z" finished-at="2017-02-24T17:01:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:04Z" finished-at="2017-02-24T17:01:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.incorrectComponentNameButtonTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="incorrectComponentNameButtonTest()[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="incorrectComponentNameButtonTest" duration-ms="2069" started-at="2017-02-24T17:01:04Z" finished-at="2017-02-24T17:01:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- incorrectComponentNameButtonTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:06Z" finished-at="2017-02-24T17:01:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.incorrectElementIDButtonTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="incorrectElementIDButtonTest()[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="incorrectElementIDButtonTest" duration-ms="1962" started-at="2017-02-24T17:01:06Z" finished-at="2017-02-24T17:01:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- incorrectElementIDButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:06Z" finished-at="2017-02-24T17:01:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:08Z" finished-at="2017-02-24T17:01:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="validButtonPropTypesTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="validButtonPropTypesTest" duration-ms="5961" started-at="2017-02-24T17:01:08Z" data-provider="Valid Button Prop Types Test Data" finished-at="2017-02-24T17:01:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: '',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[btnSize: 'large',]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'default-large',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[pe-btn--btn_large]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@420a85c4]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@1c39680d]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[[Ljava.lang.String;@62833051]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[[Ljava.lang.String;@1c852c0f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validButtonPropTypesTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:08Z" finished-at="2017-02-24T17:01:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.validButtonPropTypesTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:01:14Z" finished-at="2017-02-24T17:01:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="validButtonPropTypesTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="validButtonPropTypesTest" duration-ms="3274" started-at="2017-02-24T17:01:14Z" data-provider="Valid Button Prop Types Test Data" finished-at="2017-02-24T17:01:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: '',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[btnSize: 'xlarge',]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'default-xlarge',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[pe-btn--btn_xlarge]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@a37aefe]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@5d99c6b5]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[[Ljava.lang.String;@266374ef]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[[Ljava.lang.String;@13b3d178]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validButtonPropTypesTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:14Z" finished-at="2017-02-24T17:01:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.validButtonPropTypesTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:17Z" finished-at="2017-02-24T17:01:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.validButtonPropTypesTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="validButtonPropTypesTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="validButtonPropTypesTest" duration-ms="2458" started-at="2017-02-24T17:01:17Z" data-provider="Valid Button Prop Types Test Data" finished-at="2017-02-24T17:01:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: '',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[btnSize: 'small',]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'default-small',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[pe-btn--btn_small]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@24c4ddae]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@37fb0bed]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[[Ljava.lang.String;@a82c5f1]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[[Ljava.lang.String;@7b7fdc8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validButtonPropTypesTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:17Z" finished-at="2017-02-24T17:01:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:20Z" finished-at="2017-02-24T17:01:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:20Z" finished-at="2017-02-24T17:01:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.validButtonPropTypesTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="validButtonPropTypesTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="validButtonPropTypesTest" duration-ms="2307" started-at="2017-02-24T17:01:20Z" data-provider="Valid Button Prop Types Test Data" finished-at="2017-02-24T17:01:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: '',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[btnSize: '',]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'just-default',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[pe-btn]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@51c693d]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@6a57ae10]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[[Ljava.lang.String;@766653e6]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[[Ljava.lang.String;@4e07b95f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validButtonPropTypesTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:01:22Z" finished-at="2017-02-24T17:01:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.validButtonPropTypesTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:22Z" finished-at="2017-02-24T17:01:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="validButtonPropTypesTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="validButtonPropTypesTest" duration-ms="2143" started-at="2017-02-24T17:01:22Z" data-provider="Valid Button Prop Types Test Data" finished-at="2017-02-24T17:01:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: '',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'default',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[pe-btn]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@28b46423]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@7fc4780b]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[[Ljava.lang.String;@3b79fd76]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[[Ljava.lang.String;@48c76607]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validButtonPropTypesTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:24Z" finished-at="2017-02-24T17:01:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.validButtonPropTypesTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:24Z" finished-at="2017-02-24T17:01:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="validButtonPropTypesTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="validButtonPropTypesTest" duration-ms="2312" started-at="2017-02-24T17:01:24Z" data-provider="Valid Button Prop Types Test Data" finished-at="2017-02-24T17:01:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[pe-btn]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@43599640]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@1f81aa00]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[[Ljava.lang.String;@6b6776cb]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[[Ljava.lang.String;@1863d2fe]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validButtonPropTypesTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:01:26Z" finished-at="2017-02-24T17:01:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:26Z" finished-at="2017-02-24T17:01:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.validButtonPropTypesTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="validButtonPropTypesTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="validButtonPropTypesTest" duration-ms="3082" started-at="2017-02-24T17:01:26Z" data-provider="Valid Button Prop Types Test Data" finished-at="2017-02-24T17:01:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: 'primary',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[btnSize: 'large',]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'primary-large',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[pe-btn__primary--btn_large]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@1787bc24]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@544d57e]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[[Ljava.lang.String;@55c53a33]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[[Ljava.lang.String;@53b7f657]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validButtonPropTypesTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:01:29Z" finished-at="2017-02-24T17:01:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.validButtonPropTypesTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:29Z" finished-at="2017-02-24T17:01:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="validButtonPropTypesTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="validButtonPropTypesTest" duration-ms="2063" started-at="2017-02-24T17:01:29Z" data-provider="Valid Button Prop Types Test Data" finished-at="2017-02-24T17:01:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: 'primary',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[btnSize: 'xlarge',]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'primary-xlarge',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[pe-btn__primary--btn_xlarge]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@797b0699]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@5a37d3ed]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[[Ljava.lang.String;@26df6e3a]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[[Ljava.lang.String;@4a3631f8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validButtonPropTypesTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:01:32Z" finished-at="2017-02-24T17:01:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:32Z" finished-at="2017-02-24T17:01:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.validButtonPropTypesTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="validButtonPropTypesTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="validButtonPropTypesTest" duration-ms="2560" started-at="2017-02-24T17:01:32Z" data-provider="Valid Button Prop Types Test Data" finished-at="2017-02-24T17:01:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: 'primary',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[btnSize: 'small',]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'primary-small',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[pe-btn__primary--btn_small]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@6b58b9e9]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@f14a7d4]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[[Ljava.lang.String;@52e7a6b2]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[[Ljava.lang.String;@29a5f4e7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validButtonPropTypesTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:34Z" finished-at="2017-02-24T17:01:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:01:34Z" finished-at="2017-02-24T17:01:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.validButtonPropTypesTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="validButtonPropTypesTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="validButtonPropTypesTest" duration-ms="3240" started-at="2017-02-24T17:01:34Z" data-provider="Valid Button Prop Types Test Data" finished-at="2017-02-24T17:01:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: 'primary',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[btnSize: '',]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'just-primary',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[pe-btn__primary]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@79c97cb]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@2d9caaeb]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[[Ljava.lang.String;@42a15bdc]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[[Ljava.lang.String;@44a59da3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validButtonPropTypesTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:01:37Z" finished-at="2017-02-24T17:01:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:37Z" finished-at="2017-02-24T17:01:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.validButtonPropTypesTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="validButtonPropTypesTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="validButtonPropTypesTest" duration-ms="2209" started-at="2017-02-24T17:01:37Z" data-provider="Valid Button Prop Types Test Data" finished-at="2017-02-24T17:01:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: 'primary',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'primary',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[pe-btn__primary]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@27e47833]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@6f6745d6]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[[Ljava.lang.String;@27508c5d]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[[Ljava.lang.String;@4f704591]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validButtonPropTypesTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:01:40Z" finished-at="2017-02-24T17:01:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="validButtonPropTypesTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="validButtonPropTypesTest" duration-ms="2097" started-at="2017-02-24T17:01:40Z" data-provider="Valid Button Prop Types Test Data" finished-at="2017-02-24T17:01:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: 'primary',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[pe-btn__primary]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@4b5189ac]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@1e4d3ce5]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[[Ljava.lang.String;@3ddc6915]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[[Ljava.lang.String;@704deff2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validButtonPropTypesTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:40Z" finished-at="2017-02-24T17:01:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.validButtonPropTypesTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:01:42Z" finished-at="2017-02-24T17:01:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:01:42Z" finished-at="2017-02-24T17:01:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.validButtonPropTypesTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="validButtonPropTypesTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="validButtonPropTypesTest" duration-ms="3149" started-at="2017-02-24T17:01:42Z" data-provider="Valid Button Prop Types Test Data" finished-at="2017-02-24T17:01:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: 'cta',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[btnSize: 'large',]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'cta-large',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[pe-btn__cta--btn_large]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@379614be]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@404bbcbd]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[[Ljava.lang.String;@1e81f160]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[[Ljava.lang.String;@1acaf3d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validButtonPropTypesTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:01:45Z" finished-at="2017-02-24T17:01:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:45Z" finished-at="2017-02-24T17:01:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.validButtonPropTypesTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="validButtonPropTypesTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="validButtonPropTypesTest" duration-ms="2341" started-at="2017-02-24T17:01:45Z" data-provider="Valid Button Prop Types Test Data" finished-at="2017-02-24T17:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: 'cta',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[btnSize: 'xlarge',]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'cta-xlarge',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[pe-btn__cta--btn_xlarge]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@6986852]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@1bab8268]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[[Ljava.lang.String;@a307a8c]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[[Ljava.lang.String;@6e01f9b0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validButtonPropTypesTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:47Z" finished-at="2017-02-24T17:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:47Z" finished-at="2017-02-24T17:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.validButtonPropTypesTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="validButtonPropTypesTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="validButtonPropTypesTest" duration-ms="2140" started-at="2017-02-24T17:01:47Z" data-provider="Valid Button Prop Types Test Data" finished-at="2017-02-24T17:01:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: 'cta',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[btnSize: 'small',]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'cta-small',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[pe-btn__cta--btn_small]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@2b9ed6da]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@6c61a903]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[[Ljava.lang.String;@658c5a19]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[[Ljava.lang.String;@421e361]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validButtonPropTypesTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="afterMethod" is-config="true" duration-ms="2" started-at="2017-02-24T17:01:49Z" finished-at="2017-02-24T17:01:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="validButtonPropTypesTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="validButtonPropTypesTest" duration-ms="2269" started-at="2017-02-24T17:01:49Z" data-provider="Valid Button Prop Types Test Data" finished-at="2017-02-24T17:01:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: 'cta',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'just-small',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[pe-btn__cta]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@59d4cd39]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@389c4eb1]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[[Ljava.lang.String;@3fc79729]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[[Ljava.lang.String;@34f6515b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validButtonPropTypesTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:49Z" finished-at="2017-02-24T17:01:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.validButtonPropTypesTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:52Z" finished-at="2017-02-24T17:01:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:01:52Z" finished-at="2017-02-24T17:01:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.validButtonPropTypesTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="validButtonPropTypesTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="validButtonPropTypesTest" duration-ms="2364" started-at="2017-02-24T17:01:52Z" data-provider="Valid Button Prop Types Test Data" finished-at="2017-02-24T17:01:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: 'cta',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'cta',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[pe-btn__cta]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@4b34fff9]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@1187c9e8]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[[Ljava.lang.String;@127a7a2e]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[[Ljava.lang.String;@14008db3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validButtonPropTypesTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:54Z" finished-at="2017-02-24T17:01:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:01:54Z" finished-at="2017-02-24T17:01:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.validButtonPropTypesTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="validButtonPropTypesTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="validButtonPropTypesTest" duration-ms="2306" started-at="2017-02-24T17:01:54Z" data-provider="Valid Button Prop Types Test Data" finished-at="2017-02-24T17:01:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: 'cta',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[pe-btn__cta]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@78a773fd]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@57c03d88]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[[Ljava.lang.String;@16aa8654]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[[Ljava.lang.String;@6d7fc27]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validButtonPropTypesTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:01:56Z" finished-at="2017-02-24T17:01:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="verifyButtonInvalidPropTypesTest(java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="verifyButtonInvalidPropTypesTest" duration-ms="1517" started-at="2017-02-24T17:01:56Z" data-provider="Invalid Button Prop Types Test Data" finished-at="2017-02-24T17:01:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: 'somejunk',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[btnSize: 'large',]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'default-large',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@4167d97b]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@14fa86ae]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyButtonInvalidPropTypesTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:56Z" finished-at="2017-02-24T17:01:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.verifyButtonInvalidPropTypesTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyButtonInvalidPropTypesTest(java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="verifyButtonInvalidPropTypesTest" duration-ms="1392" started-at="2017-02-24T17:01:58Z" data-provider="Invalid Button Prop Types Test Data" finished-at="2017-02-24T17:01:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: 'somejunk',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[btnSize: 'xlarge',]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'default-xlarge',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@6e15fe2]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@68f1b17f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyButtonInvalidPropTypesTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:58Z" finished-at="2017-02-24T17:01:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:58Z" finished-at="2017-02-24T17:01:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.verifyButtonInvalidPropTypesTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyButtonInvalidPropTypesTest(java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="verifyButtonInvalidPropTypesTest" duration-ms="1499" started-at="2017-02-24T17:01:59Z" data-provider="Invalid Button Prop Types Test Data" finished-at="2017-02-24T17:02:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: 'somejunk',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[btnSize: 'small',]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'default-small',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@1722011b]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@57ad2aa7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyButtonInvalidPropTypesTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:59Z" finished-at="2017-02-24T17:01:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:59Z" finished-at="2017-02-24T17:01:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.verifyButtonInvalidPropTypesTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyButtonInvalidPropTypesTest(java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="verifyButtonInvalidPropTypesTest" duration-ms="1359" started-at="2017-02-24T17:02:01Z" data-provider="Invalid Button Prop Types Test Data" finished-at="2017-02-24T17:02:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: 'somejunk',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'default-small',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@5b3f61ff]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@3e2059ae]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyButtonInvalidPropTypesTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:01Z" finished-at="2017-02-24T17:02:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:01Z" finished-at="2017-02-24T17:02:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.verifyButtonInvalidPropTypesTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:02Z" finished-at="2017-02-24T17:02:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.verifyButtonInvalidPropTypesTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyButtonInvalidPropTypesTest(java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="verifyButtonInvalidPropTypesTest" duration-ms="1523" started-at="2017-02-24T17:02:02Z" data-provider="Invalid Button Prop Types Test Data" finished-at="2017-02-24T17:02:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: 'primary',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[btnSize: 'largexyz',]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'primary-large-xyz',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@398dada8]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@7cb502c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyButtonInvalidPropTypesTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:02Z" finished-at="2017-02-24T17:02:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:03Z" finished-at="2017-02-24T17:02:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:03Z" finished-at="2017-02-24T17:02:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.verifyButtonInvalidPropTypesTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyButtonInvalidPropTypesTest(java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="verifyButtonInvalidPropTypesTest" duration-ms="2978" started-at="2017-02-24T17:02:03Z" data-provider="Invalid Button Prop Types Test Data" finished-at="2017-02-24T17:02:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: 'primary',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[btnSize: 'xyzlarge',]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'xyz-primary-large',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@275bf9b3]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@1b8a29df]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyButtonInvalidPropTypesTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:06Z" finished-at="2017-02-24T17:02:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:02:06Z" finished-at="2017-02-24T17:02:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.verifyButtonInvalidPropTypesTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyButtonInvalidPropTypesTest(java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="verifyButtonInvalidPropTypesTest" duration-ms="1475" started-at="2017-02-24T17:02:06Z" data-provider="Invalid Button Prop Types Test Data" finished-at="2017-02-24T17:02:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: 'primary',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[btnSize: 'xlargexyz',]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'primary-xlarge-xyz',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@4fbe37eb]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@12a94400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyButtonInvalidPropTypesTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:02:08Z" finished-at="2017-02-24T17:02:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="verifyButtonInvalidPropTypesTest(java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="verifyButtonInvalidPropTypesTest" duration-ms="1525" started-at="2017-02-24T17:02:08Z" data-provider="Invalid Button Prop Types Test Data" finished-at="2017-02-24T17:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: 'primary',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[btnSize: 'xyzxlarge',]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'primary-xyz-xlarge',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@6a47b187]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@2049a9c1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyButtonInvalidPropTypesTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:08Z" finished-at="2017-02-24T17:02:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.verifyButtonInvalidPropTypesTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:02:09Z" finished-at="2017-02-24T17:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="verifyButtonInvalidPropTypesTest(java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="verifyButtonInvalidPropTypesTest" duration-ms="1544" started-at="2017-02-24T17:02:09Z" data-provider="Invalid Button Prop Types Test Data" finished-at="2017-02-24T17:02:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: 'primary',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[btnSize: 'smallxyz',]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'primary-small-xyz',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@1ef6d34c]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@46271dd6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyButtonInvalidPropTypesTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:09Z" finished-at="2017-02-24T17:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.verifyButtonInvalidPropTypesTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:02:11Z" finished-at="2017-02-24T17:02:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:11Z" finished-at="2017-02-24T17:02:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.verifyButtonInvalidPropTypesTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyButtonInvalidPropTypesTest(java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="verifyButtonInvalidPropTypesTest" duration-ms="1507" started-at="2017-02-24T17:02:11Z" data-provider="Invalid Button Prop Types Test Data" finished-at="2017-02-24T17:02:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: 'primary',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[btnSize: 'xyzsmall',]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'xyz-primary-small',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@11bb571c]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@7c51f34b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyButtonInvalidPropTypesTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:13Z" finished-at="2017-02-24T17:02:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:13Z" finished-at="2017-02-24T17:02:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.verifyButtonInvalidPropTypesTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyButtonInvalidPropTypesTest(java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="verifyButtonInvalidPropTypesTest" duration-ms="1457" started-at="2017-02-24T17:02:13Z" data-provider="Invalid Button Prop Types Test Data" finished-at="2017-02-24T17:02:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: 'primary',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[btnSize: 'xyz',]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'just-primary-xyz',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@5495333e]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@2a225dd7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyButtonInvalidPropTypesTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:02:14Z" finished-at="2017-02-24T17:02:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="verifyButtonInvalidPropTypesTest(java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="verifyButtonInvalidPropTypesTest" duration-ms="1527" started-at="2017-02-24T17:02:14Z" data-provider="Invalid Button Prop Types Test Data" finished-at="2017-02-24T17:02:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: 'cta',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[btnSize: 'largexyz',]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'cta-large-xyz',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@61eaec38]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@125290e5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyButtonInvalidPropTypesTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:14Z" finished-at="2017-02-24T17:02:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.verifyButtonInvalidPropTypesTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:16Z" finished-at="2017-02-24T17:02:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.verifyButtonInvalidPropTypesTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyButtonInvalidPropTypesTest(java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="verifyButtonInvalidPropTypesTest" duration-ms="1511" started-at="2017-02-24T17:02:16Z" data-provider="Invalid Button Prop Types Test Data" finished-at="2017-02-24T17:02:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: 'cta',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[btnSize: 'xyzlargexyz',]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'xyz-cta-large',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@6fa34d52]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@57576994]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyButtonInvalidPropTypesTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:16Z" finished-at="2017-02-24T17:02:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:17Z" finished-at="2017-02-24T17:02:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="verifyButtonInvalidPropTypesTest(java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="verifyButtonInvalidPropTypesTest" duration-ms="1558" started-at="2017-02-24T17:02:17Z" data-provider="Invalid Button Prop Types Test Data" finished-at="2017-02-24T17:02:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: 'cta',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[btnSize: 'xlargexyz',]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'cta-xlarge-xyz',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@616ac46a]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@67b9b51a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyButtonInvalidPropTypesTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:17Z" finished-at="2017-02-24T17:02:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.verifyButtonInvalidPropTypesTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:19Z" finished-at="2017-02-24T17:02:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.verifyButtonInvalidPropTypesTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:19Z" finished-at="2017-02-24T17:02:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="verifyButtonInvalidPropTypesTest(java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="verifyButtonInvalidPropTypesTest" duration-ms="1952" started-at="2017-02-24T17:02:19Z" data-provider="Invalid Button Prop Types Test Data" finished-at="2017-02-24T17:02:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: 'cta',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[btnSize: 'xyzxlarge',]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'xyz-cta-xlarge',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@1205bd62]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@7ef27d7f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyButtonInvalidPropTypesTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:02:21Z" finished-at="2017-02-24T17:02:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="verifyButtonInvalidPropTypesTest(java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="verifyButtonInvalidPropTypesTest" duration-ms="1725" started-at="2017-02-24T17:02:21Z" data-provider="Invalid Button Prop Types Test Data" finished-at="2017-02-24T17:02:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: 'cta',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[btnSize: 'smallxyz',]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'cta-small-xyz',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@490caf5f]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@6337c201]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyButtonInvalidPropTypesTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:21Z" finished-at="2017-02-24T17:02:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.verifyButtonInvalidPropTypesTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:22Z" finished-at="2017-02-24T17:02:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="verifyButtonInvalidPropTypesTest(java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="verifyButtonInvalidPropTypesTest" duration-ms="1429" started-at="2017-02-24T17:02:22Z" data-provider="Invalid Button Prop Types Test Data" finished-at="2017-02-24T17:02:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: 'cta',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[btnSize: 'xyzsmall',]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'xyz-cta-small',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@5c669da8]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@31920ade]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyButtonInvalidPropTypesTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:22Z" finished-at="2017-02-24T17:02:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.verifyButtonInvalidPropTypesTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyButtonInvalidPropTypesTest(java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="verifyButtonInvalidPropTypesTest" duration-ms="1536" started-at="2017-02-24T17:02:24Z" data-provider="Invalid Button Prop Types Test Data" finished-at="2017-02-24T17:02:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[btnType: 'cta',]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[btnSize: 'xyz',]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[children: 'just-small',]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@1d483de4]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@4032d386]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyButtonInvalidPropTypesTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:24Z" finished-at="2017-02-24T17:02:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.ButtonsTest.verifyButtonInvalidPropTypesTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:24Z" finished-at="2017-02-24T17:02:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:02:25Z" finished-at="2017-02-24T17:02:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="tearDown(java.lang.String)[pri:0, instance:compoundsTests.ButtonsTest@50b494a6]" name="tearDown" is-config="true" duration-ms="1591" started-at="2017-02-24T17:02:25Z" finished-at="2017-02-24T17:02:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[off]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- compoundsTests.ButtonsTest -->
      <class name="origamiV2Tests.DrawerTest">
        <test-method status="PASS" signature="setUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="setUp" is-config="true" duration-ms="18552" started-at="2017-02-24T17:01:24Z" finished-at="2017-02-24T17:01:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sauce]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OS X 10.11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[54.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[off]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[iOS]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[iPhone 6 Plus]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[9.3]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[safari]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[1.5.3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="beforeClass(java.lang.String)[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="beforeClass" is-config="true" duration-ms="3103" started-at="2017-02-24T17:01:43Z" finished-at="2017-02-24T17:01:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[off]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:46Z" finished-at="2017-02-24T17:01:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.DrawerTest.closeDrawerTest(java.lang.String,org.openqa.selenium.By,org.openqa.selenium.By,org.openqa.selenium.By,org.openqa.selenium.By) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="closeDrawerTest(java.lang.String, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By)[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="closeDrawerTest" duration-ms="6838" started-at="2017-02-24T17:01:46Z" data-provider="Close Drawer Test Data" finished-at="2017-02-24T17:01:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[left drawer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: open-left-drawer]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: close-left-drawer]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.xpath: //div[@class='o-drawer-animated o-drawer o-drawer-left o-drawer-open']]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[By.xpath: //div[@class='o-drawer-animated o-drawer o-drawer-left']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeDrawerTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:53Z" finished-at="2017-02-24T17:01:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="closeDrawerTest(java.lang.String, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By)[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="closeDrawerTest" duration-ms="6007" started-at="2017-02-24T17:01:53Z" data-provider="Close Drawer Test Data" finished-at="2017-02-24T17:01:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[right drawer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: open-right-drawer]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: close-right-drawer]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.xpath: //div[@class='o-drawer-right o-drawer-animated o-drawer o-drawer-open']]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[By.xpath: //div[@class='o-drawer-right o-drawer-animated o-drawer']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeDrawerTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:53Z" finished-at="2017-02-24T17:01:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.DrawerTest.closeDrawerTest(java.lang.String,org.openqa.selenium.By,org.openqa.selenium.By,org.openqa.selenium.By,org.openqa.selenium.By) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:59Z" finished-at="2017-02-24T17:01:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:01:59Z" finished-at="2017-02-24T17:01:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.DrawerTest.focusReturnTest(java.lang.String,java.lang.String,org.openqa.selenium.By,org.openqa.selenium.By)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="focusReturnTest(java.lang.String, java.lang.String, org.openqa.selenium.By, org.openqa.selenium.By)[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="focusReturnTest" duration-ms="4644" started-at="2017-02-24T17:01:59Z" data-provider="Return Focus Test Data" finished-at="2017-02-24T17:02:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[left-drawer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[open-left-drawer]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: open-left-drawer]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.xpath: //div[@class='o-drawer-animated o-drawer o-drawer-left o-drawer-open']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- focusReturnTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:04Z" finished-at="2017-02-24T17:02:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="focusReturnTest(java.lang.String, java.lang.String, org.openqa.selenium.By, org.openqa.selenium.By)[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="focusReturnTest" duration-ms="7778" started-at="2017-02-24T17:02:04Z" data-provider="Return Focus Test Data" finished-at="2017-02-24T17:02:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[right-drawer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[open-right-drawer]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: open-right-drawer]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.xpath: //div[@class='o-drawer-right o-drawer-animated o-drawer o-drawer-open']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- focusReturnTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:04Z" finished-at="2017-02-24T17:02:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.DrawerTest.focusReturnTest(java.lang.String,java.lang.String,org.openqa.selenium.By,org.openqa.selenium.By)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:11Z" finished-at="2017-02-24T17:02:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:11Z" finished-at="2017-02-24T17:02:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.DrawerTest.notReturnFocusTest(java.lang.String,java.lang.String,org.openqa.selenium.By,org.openqa.selenium.By,org.openqa.selenium.By) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="notReturnFocusTest(java.lang.String, java.lang.String, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By)[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="notReturnFocusTest" duration-ms="3662" started-at="2017-02-24T17:02:11Z" data-provider="Not Return Focus Test Data" finished-at="2017-02-24T17:02:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[left-drawer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[open-left-drawer]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: open-left-drawer]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.xpath: //div[@class='o-drawer-animated o-drawer o-drawer-left o-drawer-open']]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[By.id: close-left-drawer]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- notReturnFocusTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:02:15Z" finished-at="2017-02-24T17:02:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:15Z" finished-at="2017-02-24T17:02:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.DrawerTest.notReturnFocusTest(java.lang.String,java.lang.String,org.openqa.selenium.By,org.openqa.selenium.By,org.openqa.selenium.By) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="notReturnFocusTest(java.lang.String, java.lang.String, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By)[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="notReturnFocusTest" duration-ms="3614" started-at="2017-02-24T17:02:15Z" data-provider="Not Return Focus Test Data" finished-at="2017-02-24T17:02:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[right-drawer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[open-right-drawer]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: open-right-drawer]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.xpath: //div[@class='o-drawer-right o-drawer-animated o-drawer o-drawer-open']]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[By.id: close-right-drawer]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- notReturnFocusTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:02:19Z" finished-at="2017-02-24T17:02:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:02:19Z" finished-at="2017-02-24T17:02:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.DrawerTest.openDrawerTest(java.lang.String,org.openqa.selenium.By,org.openqa.selenium.By) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="openDrawerTest(java.lang.String, org.openqa.selenium.By, org.openqa.selenium.By)[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="openDrawerTest" duration-ms="2113" started-at="2017-02-24T17:02:19Z" data-provider="Open Drawer Test Data" finished-at="2017-02-24T17:02:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[left drawer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: open-left-drawer]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.xpath: //div[@class='o-drawer-animated o-drawer o-drawer-left o-drawer-open']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openDrawerTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:21Z" finished-at="2017-02-24T17:02:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.DrawerTest.openDrawerTest(java.lang.String,org.openqa.selenium.By,org.openqa.selenium.By) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:21Z" finished-at="2017-02-24T17:02:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="openDrawerTest(java.lang.String, org.openqa.selenium.By, org.openqa.selenium.By)[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="openDrawerTest" duration-ms="2161" started-at="2017-02-24T17:02:21Z" data-provider="Open Drawer Test Data" finished-at="2017-02-24T17:02:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[right drawer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: open-right-drawer]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.xpath: //div[@class='o-drawer-right o-drawer-animated o-drawer o-drawer-open']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openDrawerTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:23Z" finished-at="2017-02-24T17:02:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:23Z" finished-at="2017-02-24T17:02:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.DrawerTest.otherDrawerTest(java.lang.String,org.openqa.selenium.By,org.openqa.selenium.By,org.openqa.selenium.By,org.openqa.selenium.By,org.openqa.selenium.By,org.openqa.selenium.By) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="otherDrawerTest(java.lang.String, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By)[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="otherDrawerTest" duration-ms="6574" started-at="2017-02-24T17:02:23Z" data-provider="Other Drawer Test Data" finished-at="2017-02-24T17:02:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[left drawer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: open-left-drawer]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.xpath: //div[@class='o-drawer-animated o-drawer o-drawer-left o-drawer-open']]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.xpath: //div[@class='o-drawer-animated o-drawer o-drawer-left']]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[By.id: other-left-drawer]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[By.xpath: //div[@id='other-left-drawer-demo'][@class='o-drawer-animated o-drawer o-drawer-left o-drawer-open']]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[By.xpath: //div[@id='other-right-drawer-demo'][@class='o-drawer-right o-drawer-animated o-drawer']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- otherDrawerTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:02:30Z" finished-at="2017-02-24T17:02:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.DrawerTest.otherDrawerTest(java.lang.String,org.openqa.selenium.By,org.openqa.selenium.By,org.openqa.selenium.By,org.openqa.selenium.By,org.openqa.selenium.By,org.openqa.selenium.By) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:30Z" finished-at="2017-02-24T17:02:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="otherDrawerTest(java.lang.String, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By)[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="otherDrawerTest" duration-ms="6821" started-at="2017-02-24T17:02:30Z" data-provider="Other Drawer Test Data" finished-at="2017-02-24T17:02:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[right drawer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: open-right-drawer]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.xpath: //div[@class='o-drawer-right o-drawer-animated o-drawer o-drawer-open']]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.xpath: //div[@class='o-drawer-right o-drawer-animated o-drawer']]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[By.id: other-right-drawer]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[By.xpath: //div[@id='other-right-drawer-demo'][@class='o-drawer-right o-drawer-animated o-drawer o-drawer-open']]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[By.xpath: //div[@id='other-right-drawer-demo'][@class='o-drawer-right o-drawer-animated o-drawer']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- otherDrawerTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:36Z" finished-at="2017-02-24T17:02:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:02:36Z" finished-at="2017-02-24T17:02:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.DrawerTest.toggleDrawerTest(java.lang.String,org.openqa.selenium.By,org.openqa.selenium.By,org.openqa.selenium.By,org.openqa.selenium.By,org.openqa.selenium.By) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="toggleDrawerTest(java.lang.String, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By)[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="toggleDrawerTest" duration-ms="8449" started-at="2017-02-24T17:02:36Z" data-provider="Toggle Drawer Test Data" finished-at="2017-02-24T17:02:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[left drawer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: open-left-drawer]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: toggle-left-drawer]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: close-left-drawer]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[By.xpath: //div[@class='o-drawer-animated o-drawer o-drawer-left o-drawer-open']]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[By.xpath: //div[@class='o-drawer-animated o-drawer o-drawer-left']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toggleDrawerTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:45Z" finished-at="2017-02-24T17:02:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:45Z" finished-at="2017-02-24T17:02:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.DrawerTest.toggleDrawerTest(java.lang.String,org.openqa.selenium.By,org.openqa.selenium.By,org.openqa.selenium.By,org.openqa.selenium.By,org.openqa.selenium.By) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="toggleDrawerTest(java.lang.String, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By, org.openqa.selenium.By)[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="toggleDrawerTest" duration-ms="8520" started-at="2017-02-24T17:02:45Z" data-provider="Toggle Drawer Test Data" finished-at="2017-02-24T17:02:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[right drawer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: open-right-drawer]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: toggle-right-drawer]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: close-right-drawer]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[By.xpath: //div[@class='o-drawer-right o-drawer-animated o-drawer o-drawer-open']]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[By.xpath: //div[@class='o-drawer-right o-drawer-animated o-drawer']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toggleDrawerTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:53Z" finished-at="2017-02-24T17:02:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="trapFocusInADrawerTest(java.lang.String, java.lang.String, org.openqa.selenium.By, org.openqa.selenium.By)[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="trapFocusInADrawerTest" duration-ms="9473" started-at="2017-02-24T17:02:53Z" data-provider="Trap Focus In a Drawer Test Data" finished-at="2017-02-24T17:03:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[left-drawer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[open-left-drawer]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: open-left-drawer]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.xpath: //div[@class='o-drawer-animated o-drawer o-drawer-left o-drawer-open']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- trapFocusInADrawerTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:53Z" finished-at="2017-02-24T17:02:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.DrawerTest.trapFocusInADrawerTest(java.lang.String,java.lang.String,org.openqa.selenium.By,org.openqa.selenium.By)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:03:03Z" finished-at="2017-02-24T17:03:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:03:03Z" finished-at="2017-02-24T17:03:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.DrawerTest.trapFocusInADrawerTest(java.lang.String,java.lang.String,org.openqa.selenium.By,org.openqa.selenium.By)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="trapFocusInADrawerTest(java.lang.String, java.lang.String, org.openqa.selenium.By, org.openqa.selenium.By)[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="trapFocusInADrawerTest" duration-ms="9441" started-at="2017-02-24T17:03:03Z" data-provider="Trap Focus In a Drawer Test Data" finished-at="2017-02-24T17:03:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[right-drawer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[open-right-drawer]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: open-right-drawer]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.xpath: //div[@class='o-drawer-right o-drawer-animated o-drawer o-drawer-open']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- trapFocusInADrawerTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:03:12Z" finished-at="2017-02-24T17:03:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="useAPIDrawerTest(java.lang.String, org.openqa.selenium.By)[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="useAPIDrawerTest" duration-ms="5105" started-at="2017-02-24T17:03:12Z" data-provider="Use API Test Data" finished-at="2017-02-24T17:03:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[left drawer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: toggle-left-drawer]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- useAPIDrawerTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:03:12Z" finished-at="2017-02-24T17:03:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.DrawerTest.useAPIDrawerTest(java.lang.String,org.openqa.selenium.By) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:03:17Z" finished-at="2017-02-24T17:03:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.DrawerTest.useAPIDrawerTest(java.lang.String,org.openqa.selenium.By) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:03:17Z" finished-at="2017-02-24T17:03:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="useAPIDrawerTest(java.lang.String, org.openqa.selenium.By)[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="useAPIDrawerTest" duration-ms="5196" started-at="2017-02-24T17:03:17Z" data-provider="Use API Test Data" finished-at="2017-02-24T17:03:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[right drawer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: toggle-right-drawer]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- useAPIDrawerTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:03:23Z" finished-at="2017-02-24T17:03:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="useDataTargetForDrawerTest()[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="useDataTargetForDrawerTest" duration-ms="2492" started-at="2017-02-24T17:03:23Z" finished-at="2017-02-24T17:03:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- useDataTargetForDrawerTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:03:23Z" finished-at="2017-02-24T17:03:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.DrawerTest.useDataTargetForDrawerTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:03:25Z" finished-at="2017-02-24T17:03:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="useShiftTabToFocusBackwardTest(java.lang.String, java.lang.String, org.openqa.selenium.By)[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="useShiftTabToFocusBackwardTest" duration-ms="10062" started-at="2017-02-24T17:03:25Z" data-provider="Shift+Tab to Focus Backward Test Data" finished-at="2017-02-24T17:03:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[left-drawer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[open-left-drawer]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.xpath: //div[@class='o-drawer-animated o-drawer o-drawer-left o-drawer-open']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- useShiftTabToFocusBackwardTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:03:25Z" finished-at="2017-02-24T17:03:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.DrawerTest.useShiftTabToFocusBackwardTest(java.lang.String,java.lang.String,org.openqa.selenium.By)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:03:35Z" finished-at="2017-02-24T17:03:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:03:35Z" finished-at="2017-02-24T17:03:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.DrawerTest.useShiftTabToFocusBackwardTest(java.lang.String,java.lang.String,org.openqa.selenium.By)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="useShiftTabToFocusBackwardTest(java.lang.String, java.lang.String, org.openqa.selenium.By)[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="useShiftTabToFocusBackwardTest" duration-ms="10167" started-at="2017-02-24T17:03:35Z" data-provider="Shift+Tab to Focus Backward Test Data" finished-at="2017-02-24T17:03:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[right-drawer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[open-right-drawer]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.xpath: //div[@class='o-drawer-right o-drawer-animated o-drawer o-drawer-open']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- useShiftTabToFocusBackwardTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:03:45Z" finished-at="2017-02-24T17:03:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="tearDown(java.lang.String)[pri:0, instance:origamiV2Tests.DrawerTest@3d99d22e]" name="tearDown" is-config="true" duration-ms="1186" started-at="2017-02-24T17:03:45Z" finished-at="2017-02-24T17:03:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[off]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- origamiV2Tests.DrawerTest -->
      <class name="compoundsTests.IconsTest">
        <test-method status="PASS" signature="setUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:compoundsTests.IconsTest@3cef309d]" name="setUp" is-config="true" duration-ms="12453" started-at="2017-02-24T17:00:47Z" finished-at="2017-02-24T17:00:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sauce]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OS X 10.11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[54.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[off]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[iOS]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[iPhone 6 Plus]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[9.3]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[safari]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[1.5.3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="avatarDisplayTestBeforeClass(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:compoundsTests.IconsTest@3cef309d]" name="avatarDisplayTestBeforeClass" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:59Z" finished-at="2017-02-24T17:00:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sauce]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avatarDisplayTestBeforeClass -->
        <test-method status="PASS" signature="incorrectComponentNameIconTest()[pri:0, instance:compoundsTests.IconsTest@3cef309d]" name="incorrectComponentNameIconTest" duration-ms="4486" started-at="2017-02-24T17:00:59Z" finished-at="2017-02-24T17:01:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- incorrectComponentNameIconTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.IconsTest@3cef309d]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:59Z" finished-at="2017-02-24T17:00:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.IconsTest.incorrectComponentNameIconTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.IconsTest@3cef309d]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:04Z" finished-at="2017-02-24T17:01:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.IconsTest@3cef309d]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:01:04Z" finished-at="2017-02-24T17:01:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.IconsTest.incorrectElementIDIconTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="incorrectElementIDIconTest()[pri:0, instance:compoundsTests.IconsTest@3cef309d]" name="incorrectElementIDIconTest" duration-ms="1684" started-at="2017-02-24T17:01:04Z" finished-at="2017-02-24T17:01:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- incorrectElementIDIconTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.IconsTest@3cef309d]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:06Z" finished-at="2017-02-24T17:01:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.IconsTest.invalidIconPropTypesTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.IconsTest@3cef309d]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:06Z" finished-at="2017-02-24T17:01:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="invalidIconPropTypesTest()[pri:0, instance:compoundsTests.IconsTest@3cef309d]" name="invalidIconPropTypesTest" duration-ms="1399" started-at="2017-02-24T17:01:06Z" finished-at="2017-02-24T17:01:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidIconPropTypesTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.IconsTest@3cef309d]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:01:07Z" finished-at="2017-02-24T17:01:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="validIconPropTypesTest(java.lang.String, java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.IconsTest@3cef309d]" name="validIconPropTypesTest" duration-ms="2251" started-at="2017-02-24T17:01:07Z" data-provider="Valid Icon Prop Types Test Data" finished-at="2017-02-24T17:01:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[regular-icon-size-18]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[name: 'book-18']]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.xpath: //div[@id='icon-target']/*[local-name() = 'svg']]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@45ac5f9b]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@135606db]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validIconPropTypesTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.IconsTest@3cef309d]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:07Z" finished-at="2017-02-24T17:01:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.IconsTest.validIconPropTypesTest(java.lang.String,java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.IconsTest@3cef309d]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:09Z" finished-at="2017-02-24T17:01:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.IconsTest@3cef309d]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:09Z" finished-at="2017-02-24T17:01:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.IconsTest.validIconPropTypesTest(java.lang.String,java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="validIconPropTypesTest(java.lang.String, java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.IconsTest@3cef309d]" name="validIconPropTypesTest" duration-ms="5656" started-at="2017-02-24T17:01:09Z" data-provider="Valid Icon Prop Types Test Data" finished-at="2017-02-24T17:01:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[regular-icon-size-24]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[name: 'audio-high-24']]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.xpath: //div[@id='icon-target']/*[local-name() = 'svg']]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@518caac3]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@68034211]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validIconPropTypesTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.IconsTest@3cef309d]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:01:15Z" finished-at="2017-02-24T17:01:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="validIconPropTypesTest(java.lang.String, java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.IconsTest@3cef309d]" name="validIconPropTypesTest" duration-ms="1500" started-at="2017-02-24T17:01:15Z" data-provider="Valid Icon Prop Types Test Data" finished-at="2017-02-24T17:01:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[font-setting-icon-18]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[name: 'font-setting-18']]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.xpath: //div[@id='icon-target']/*[local-name() = 'svg']]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@4f74980d]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@6c372fe6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validIconPropTypesTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.IconsTest@3cef309d]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:15Z" finished-at="2017-02-24T17:01:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.IconsTest.validIconPropTypesTest(java.lang.String,java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="validIconPropTypesTest(java.lang.String, java.lang.String, org.openqa.selenium.By, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:compoundsTests.IconsTest@3cef309d]" name="validIconPropTypesTest" duration-ms="1660" started-at="2017-02-24T17:01:16Z" data-provider="Valid Icon Prop Types Test Data" finished-at="2017-02-24T17:01:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[font-setting-icon-24]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[name: 'font-setting-24']]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.xpath: //div[@id='icon-target']/*[local-name() = 'svg']]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@58594a11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@2a3888c1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validIconPropTypesTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:compoundsTests.IconsTest@3cef309d]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:16Z" finished-at="2017-02-24T17:01:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void compoundsTests.IconsTest.validIconPropTypesTest(java.lang.String,java.lang.String,org.openqa.selenium.By,java.lang.String[],java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.IconsTest@3cef309d]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:16Z" finished-at="2017-02-24T17:01:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:compoundsTests.IconsTest@3cef309d]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:01:18Z" finished-at="2017-02-24T17:01:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="tearDown(java.lang.String)[pri:0, instance:compoundsTests.IconsTest@3cef309d]" name="tearDown" is-config="true" duration-ms="1951" started-at="2017-02-24T17:01:18Z" finished-at="2017-02-24T17:01:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[off]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- compoundsTests.IconsTest -->
      <class name="origamiV2Tests.SliderTest">
        <test-method status="PASS" signature="setUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="setUp" is-config="true" duration-ms="63728" started-at="2017-02-24T17:03:46Z" finished-at="2017-02-24T17:04:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sauce]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OS X 10.11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[54.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[off]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[iOS]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[iPhone 6 Plus]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[9.3]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[safari]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[1.5.3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="beforeMethod" is-config="true" duration-ms="4475" started-at="2017-02-24T17:04:50Z" finished-at="2017-02-24T17:04:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.SliderTest.dragKnobToLeftAndRightTest(org.openqa.selenium.By,int,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeClass(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="beforeClass" is-config="true" duration-ms="0" started-at="2017-02-24T17:04:50Z" finished-at="2017-02-24T17:04:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[off]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="dragKnobToLeftAndRightTest(org.openqa.selenium.By, int, java.lang.String)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="dragKnobToLeftAndRightTest" duration-ms="0" started-at="2017-02-24T17:04:55Z" data-provider="IE:Drag to Left &amp; Right Test Data" finished-at="2017-02-24T17:04:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[By.id: numInput]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dragKnobToLeftAndRightTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="beforeMethod" is-config="true" duration-ms="1540" started-at="2017-02-24T17:04:55Z" finished-at="2017-02-24T17:04:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.SliderTest.dragKnobToLeftAndRightTest(org.openqa.selenium.By,int,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:04:55Z" finished-at="2017-02-24T17:04:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:04:56Z" finished-at="2017-02-24T17:04:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="dragKnobToLeftAndRightTest(org.openqa.selenium.By, int, java.lang.String)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="dragKnobToLeftAndRightTest" duration-ms="0" started-at="2017-02-24T17:04:56Z" data-provider="IE:Drag to Left &amp; Right Test Data" finished-at="2017-02-24T17:04:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[By.id: numInput]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[33]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[30]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dragKnobToLeftAndRightTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="beforeMethod" is-config="true" duration-ms="1144" started-at="2017-02-24T17:04:56Z" finished-at="2017-02-24T17:04:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.SliderTest.dragKnobToLeftAndRightTest(org.openqa.selenium.By,int,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="beforeMethod" is-config="true" duration-ms="1429" started-at="2017-02-24T17:04:57Z" finished-at="2017-02-24T17:04:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.SliderTest.dragKnobToLeftAndRightTest(org.openqa.selenium.By,int,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:04:57Z" finished-at="2017-02-24T17:04:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="dragKnobToLeftAndRightTest(org.openqa.selenium.By, int, java.lang.String)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="dragKnobToLeftAndRightTest" duration-ms="0" started-at="2017-02-24T17:04:57Z" data-provider="IE:Drag to Left &amp; Right Test Data" finished-at="2017-02-24T17:04:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[By.id: numInput]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[54]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[54]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dragKnobToLeftAndRightTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:04:59Z" finished-at="2017-02-24T17:04:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="dragKnobToLeftAndRightTest(org.openqa.selenium.By, int, java.lang.String)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="dragKnobToLeftAndRightTest" duration-ms="0" started-at="2017-02-24T17:04:59Z" data-provider="IE:Drag to Left &amp; Right Test Data" finished-at="2017-02-24T17:04:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[By.id: numInput]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[75]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dragKnobToLeftAndRightTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="beforeMethod" is-config="true" duration-ms="1724" started-at="2017-02-24T17:04:59Z" finished-at="2017-02-24T17:05:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.SliderTest.dragKnobToLeftAndRightTest(org.openqa.selenium.By,int,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="dragKnobToLeftAndRightTest(org.openqa.selenium.By, int, java.lang.String)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="dragKnobToLeftAndRightTest" duration-ms="1" started-at="2017-02-24T17:05:00Z" data-provider="IE:Drag to Left &amp; Right Test Data" finished-at="2017-02-24T17:05:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[By.id: numInput]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[94]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[100]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dragKnobToLeftAndRightTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:05:00Z" finished-at="2017-02-24T17:05:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="beforeMethod" is-config="true" duration-ms="1500" started-at="2017-02-24T17:05:00Z" finished-at="2017-02-24T17:05:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.SliderTest.dragKnobToLeftTest(org.openqa.selenium.By,int,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="dragKnobToLeftTest(org.openqa.selenium.By, int, [Ljava.lang.String;)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="dragKnobToLeftTest" duration-ms="839" started-at="2017-02-24T17:05:02Z" data-provider="Drag to Left Test Data" finished-at="2017-02-24T17:05:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[By.id: numInput]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@626abbd0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dragKnobToLeftTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:05:03Z" finished-at="2017-02-24T17:05:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="beforeMethod" is-config="true" duration-ms="1680" started-at="2017-02-24T17:05:03Z" finished-at="2017-02-24T17:05:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.SliderTest.dragKnobToLeftTest(org.openqa.selenium.By,int,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="dragKnobToLeftTest(org.openqa.selenium.By, int, [Ljava.lang.String;)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="dragKnobToLeftTest" duration-ms="820" started-at="2017-02-24T17:05:05Z" data-provider="Drag to Left Test Data" finished-at="2017-02-24T17:05:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[By.id: numInput]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-33]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@169bb4dd]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dragKnobToLeftTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:05:05Z" finished-at="2017-02-24T17:05:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="beforeMethod" is-config="true" duration-ms="1111" started-at="2017-02-24T17:05:05Z" finished-at="2017-02-24T17:05:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.SliderTest.dragKnobToLeftTest(org.openqa.selenium.By,int,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="dragKnobToLeftTest(org.openqa.selenium.By, int, [Ljava.lang.String;)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="dragKnobToLeftTest" duration-ms="847" started-at="2017-02-24T17:05:06Z" data-provider="Drag to Left Test Data" finished-at="2017-02-24T17:05:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[By.id: numInput]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-99]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@1f9e9475]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dragKnobToLeftTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:05:07Z" finished-at="2017-02-24T17:05:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="beforeMethod" is-config="true" duration-ms="1493" started-at="2017-02-24T17:05:07Z" finished-at="2017-02-24T17:05:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.SliderTest.dragKnobToRightTest(org.openqa.selenium.By,int,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="dragKnobToRightTest(org.openqa.selenium.By, int, [Ljava.lang.String;)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="dragKnobToRightTest" duration-ms="812" started-at="2017-02-24T17:05:09Z" data-provider="Drag to Right Test Data" finished-at="2017-02-24T17:05:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[By.id: numInput]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@3aa078fd]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dragKnobToRightTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:05:10Z" finished-at="2017-02-24T17:05:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="beforeMethod" is-config="true" duration-ms="1199" started-at="2017-02-24T17:05:10Z" finished-at="2017-02-24T17:05:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.SliderTest.dragKnobToRightTest(org.openqa.selenium.By,int,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="dragKnobToRightTest(org.openqa.selenium.By, int, [Ljava.lang.String;)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="dragKnobToRightTest" duration-ms="1011" started-at="2017-02-24T17:05:11Z" data-provider="Drag to Right Test Data" finished-at="2017-02-24T17:05:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[By.id: numInput]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[33]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@d23e042]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dragKnobToRightTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:05:12Z" finished-at="2017-02-24T17:05:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="beforeMethod" is-config="true" duration-ms="1306" started-at="2017-02-24T17:05:12Z" finished-at="2017-02-24T17:05:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.SliderTest.dragKnobToRightTest(org.openqa.selenium.By,int,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="dragKnobToRightTest(org.openqa.selenium.By, int, [Ljava.lang.String;)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="dragKnobToRightTest" duration-ms="887" started-at="2017-02-24T17:05:13Z" data-provider="Drag to Right Test Data" finished-at="2017-02-24T17:05:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[By.id: numInput]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[99]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@46d59067]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dragKnobToRightTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:05:14Z" finished-at="2017-02-24T17:05:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="beforeMethod" is-config="true" duration-ms="1059" started-at="2017-02-24T17:05:14Z" finished-at="2017-02-24T17:05:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.SliderTest.inlineCSSPropertyTest(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="inlineCSSPropertyTest(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="inlineCSSPropertyTest" duration-ms="1" started-at="2017-02-24T17:05:15Z" data-provider="InlineCSS Property Test Data" finished-at="2017-02-24T17:05:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[input[type=range]{-webkit-appearance:none;-moz-appearance:none;border:none;width:12%;outline:none;background:none}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inlineCSSPropertyTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:05:15Z" finished-at="2017-02-24T17:05:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="beforeMethod" is-config="true" duration-ms="1281" started-at="2017-02-24T17:05:15Z" finished-at="2017-02-24T17:05:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.SliderTest.inlineCSSPropertyTest(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="inlineCSSPropertyTest(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="inlineCSSPropertyTest" duration-ms="0" started-at="2017-02-24T17:05:16Z" data-provider="InlineCSS Property Test Data" finished-at="2017-02-24T17:05:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[input[type=range]:focus{outline:none}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inlineCSSPropertyTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="beforeMethod" is-config="true" duration-ms="1117" started-at="2017-02-24T17:05:16Z" finished-at="2017-02-24T17:05:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.SliderTest.inlineCSSPropertyTest(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:05:16Z" finished-at="2017-02-24T17:05:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:05:17Z" finished-at="2017-02-24T17:05:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="inlineCSSPropertyTest(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="inlineCSSPropertyTest" duration-ms="0" started-at="2017-02-24T17:05:17Z" data-provider="InlineCSS Property Test Data" finished-at="2017-02-24T17:05:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[input[type=range]::-webkit-slider-runnable-track{height:4px;background:#0d65a6}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inlineCSSPropertyTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="beforeMethod" is-config="true" duration-ms="1317" started-at="2017-02-24T17:05:17Z" finished-at="2017-02-24T17:05:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.SliderTest.inlineCSSPropertyTest(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="inlineCSSPropertyTest(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="inlineCSSPropertyTest" duration-ms="1" started-at="2017-02-24T17:05:19Z" data-provider="InlineCSS Property Test Data" finished-at="2017-02-24T17:05:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[input[type=range]::-webkit-slider-thumb{-webkit-appearance:none;box-shadow:0 0 5px rgba(0,0,0,.1);border:1px solid #d0d0d0;height:20px;width:20px;border-radius:50%;background:#fff;margin-top:-8px}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inlineCSSPropertyTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="beforeMethod" is-config="true" duration-ms="1649" started-at="2017-02-24T17:05:19Z" finished-at="2017-02-24T17:05:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.SliderTest.inlineCSSPropertyTest(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:05:19Z" finished-at="2017-02-24T17:05:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:05:20Z" finished-at="2017-02-24T17:05:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="inlineCSSPropertyTest(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="inlineCSSPropertyTest" duration-ms="0" started-at="2017-02-24T17:05:20Z" data-provider="InlineCSS Property Test Data" finished-at="2017-02-24T17:05:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[input[type=range]:focus::-webkit-slider-thumb{border:1px solid #107aca;box-shadow:0 0 5px #107aca}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inlineCSSPropertyTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="beforeMethod" is-config="true" duration-ms="1137" started-at="2017-02-24T17:05:20Z" finished-at="2017-02-24T17:05:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.SliderTest.inlineCSSPropertyTest(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:05:22Z" finished-at="2017-02-24T17:05:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="inlineCSSPropertyTest(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="inlineCSSPropertyTest" duration-ms="0" started-at="2017-02-24T17:05:22Z" data-provider="InlineCSS Property Test Data" finished-at="2017-02-24T17:05:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[input[type=range]::-moz-focus-outer{border:0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inlineCSSPropertyTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="beforeMethod" is-config="true" duration-ms="1091" started-at="2017-02-24T17:05:22Z" finished-at="2017-02-24T17:05:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.SliderTest.inlineCSSPropertyTest(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="inlineCSSPropertyTest(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="inlineCSSPropertyTest" duration-ms="1" started-at="2017-02-24T17:05:23Z" data-provider="InlineCSS Property Test Data" finished-at="2017-02-24T17:05:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[input[type=range]::-moz-range-track{height:4px;background:#0d65a6;border:none}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inlineCSSPropertyTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="beforeMethod" is-config="true" duration-ms="1115" started-at="2017-02-24T17:05:23Z" finished-at="2017-02-24T17:05:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.SliderTest.inlineCSSPropertyTest(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:05:23Z" finished-at="2017-02-24T17:05:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="inlineCSSPropertyTest(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="inlineCSSPropertyTest" duration-ms="1" started-at="2017-02-24T17:05:24Z" data-provider="InlineCSS Property Test Data" finished-at="2017-02-24T17:05:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[input[type=range]::-moz-range-thumb{box-shadow:0 0 5px rgba(0,0,0,.1);border:1px solid #d0d0d0;height:20px;width:20px;border-radius:50%;background:#fff}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inlineCSSPropertyTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:05:24Z" finished-at="2017-02-24T17:05:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="beforeMethod" is-config="true" duration-ms="1283" started-at="2017-02-24T17:05:24Z" finished-at="2017-02-24T17:05:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.SliderTest.inlineCSSPropertyTest(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:05:25Z" finished-at="2017-02-24T17:05:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="inlineCSSPropertyTest(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="inlineCSSPropertyTest" duration-ms="0" started-at="2017-02-24T17:05:25Z" data-provider="InlineCSS Property Test Data" finished-at="2017-02-24T17:05:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[input[type=range]:focus::-moz-range-thumb{border:1px solid #107aca;box-shadow:0 0 5px #107aca}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inlineCSSPropertyTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="beforeMethod" is-config="true" duration-ms="1121" started-at="2017-02-24T17:05:25Z" finished-at="2017-02-24T17:05:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.SliderTest.inlineCSSPropertyTest(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="inlineCSSPropertyTest(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="inlineCSSPropertyTest" duration-ms="0" started-at="2017-02-24T17:05:26Z" data-provider="InlineCSS Property Test Data" finished-at="2017-02-24T17:05:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ms]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[input[type=range]::-ms-track{height:4px;border-color:transparent;border-width:11px 0;background:transparent;color:transparent}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inlineCSSPropertyTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:05:26Z" finished-at="2017-02-24T17:05:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="beforeMethod" is-config="true" duration-ms="1004" started-at="2017-02-24T17:05:26Z" finished-at="2017-02-24T17:05:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.SliderTest.inlineCSSPropertyTest(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="inlineCSSPropertyTest(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="inlineCSSPropertyTest" duration-ms="0" started-at="2017-02-24T17:05:27Z" data-provider="InlineCSS Property Test Data" finished-at="2017-02-24T17:05:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ms]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[input[type=range]::-ms-thumb{box-shadow:0 0 5px rgba(0,0,0,.1);border:1px solid #d0d0d0;height:20px;width:20px;border-radius:50%;background:#fff}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inlineCSSPropertyTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:05:27Z" finished-at="2017-02-24T17:05:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="beforeMethod" is-config="true" duration-ms="983" started-at="2017-02-24T17:05:27Z" finished-at="2017-02-24T17:05:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.SliderTest.inlineCSSPropertyTest(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="beforeMethod" is-config="true" duration-ms="1161" started-at="2017-02-24T17:05:28Z" finished-at="2017-02-24T17:05:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.SliderTest.inlineCSSPropertyTest(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:05:28Z" finished-at="2017-02-24T17:05:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="inlineCSSPropertyTest(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="inlineCSSPropertyTest" duration-ms="0" started-at="2017-02-24T17:05:28Z" data-provider="InlineCSS Property Test Data" finished-at="2017-02-24T17:05:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ms]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[input[type=range]::-ms-fill-lower,]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inlineCSSPropertyTest -->
        <test-method status="PASS" signature="inlineCSSPropertyTest(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="inlineCSSPropertyTest" duration-ms="0" started-at="2017-02-24T17:05:29Z" data-provider="InlineCSS Property Test Data" finished-at="2017-02-24T17:05:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ms]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[input[type=range]::-ms-fill-upper{background:#0d65a6}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inlineCSSPropertyTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:05:29Z" finished-at="2017-02-24T17:05:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="beforeMethod" is-config="true" duration-ms="1957" started-at="2017-02-24T17:05:29Z" finished-at="2017-02-24T17:05:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.SliderTest.inlineCSSPropertyTest(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:05:31Z" finished-at="2017-02-24T17:05:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="inlineCSSPropertyTest(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="inlineCSSPropertyTest" duration-ms="0" started-at="2017-02-24T17:05:31Z" data-provider="InlineCSS Property Test Data" finished-at="2017-02-24T17:05:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ms]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[input[type=range]:focus::-ms-thumb{border:1px solid #107aca;box-shadow:0 0 5px #107aca}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inlineCSSPropertyTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="beforeMethod" is-config="true" duration-ms="989" started-at="2017-02-24T17:05:31Z" finished-at="2017-02-24T17:05:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.SliderTest.sliderLabelTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="sliderLabelTest()[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="sliderLabelTest" duration-ms="954" started-at="2017-02-24T17:05:32Z" finished-at="2017-02-24T17:05:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sliderLabelTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:05:33Z" finished-at="2017-02-24T17:05:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="beforeMethod" is-config="true" duration-ms="921" started-at="2017-02-24T17:05:33Z" finished-at="2017-02-24T17:05:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.SliderTest.validateArrowKeysTest(org.openqa.selenium.By,org.openqa.selenium.Keys,java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="validateArrowKeysTest(org.openqa.selenium.By, org.openqa.selenium.Keys, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="validateArrowKeysTest" duration-ms="32659" started-at="2017-02-24T17:05:34Z" data-provider="Test for Arrow keys" finished-at="2017-02-24T17:06:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[By.id: numInput]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[70]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[69]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateArrowKeysTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:06:07Z" finished-at="2017-02-24T17:06:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="beforeMethod" is-config="true" duration-ms="1162" started-at="2017-02-24T17:06:07Z" finished-at="2017-02-24T17:06:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.SliderTest.validateArrowKeysTest(org.openqa.selenium.By,org.openqa.selenium.Keys,java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="validateArrowKeysTest(org.openqa.selenium.By, org.openqa.selenium.Keys, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="validateArrowKeysTest" duration-ms="35076" started-at="2017-02-24T17:06:08Z" data-provider="Test for Arrow keys" finished-at="2017-02-24T17:06:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[By.id: numInput]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[30]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[31]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateArrowKeysTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:06:43Z" finished-at="2017-02-24T17:06:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="beforeMethod" is-config="true" duration-ms="1985" started-at="2017-02-24T17:06:43Z" finished-at="2017-02-24T17:06:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.SliderTest.validateArrowKeysTest(org.openqa.selenium.By,org.openqa.selenium.Keys,java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="validateArrowKeysTest(org.openqa.selenium.By, org.openqa.selenium.Keys, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="validateArrowKeysTest" duration-ms="44547" started-at="2017-02-24T17:06:45Z" data-provider="Test for Arrow keys" finished-at="2017-02-24T17:07:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[By.id: numInput]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[30]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[31]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateArrowKeysTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:07:30Z" finished-at="2017-02-24T17:07:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="beforeMethod" is-config="true" duration-ms="1231" started-at="2017-02-24T17:07:30Z" finished-at="2017-02-24T17:07:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.SliderTest.validateArrowKeysTest(org.openqa.selenium.By,org.openqa.selenium.Keys,java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="validateArrowKeysTest(org.openqa.selenium.By, org.openqa.selenium.Keys, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="validateArrowKeysTest" duration-ms="33595" started-at="2017-02-24T17:07:31Z" data-provider="Test for Arrow keys" finished-at="2017-02-24T17:08:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[By.id: numInput]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[70]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[69]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateArrowKeysTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:08:04Z" finished-at="2017-02-24T17:08:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="beforeMethod" is-config="true" duration-ms="1295" started-at="2017-02-24T17:08:04Z" finished-at="2017-02-24T17:08:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.SliderTest.validateClickKnobTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="validateClickKnobTest()[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="validateClickKnobTest" duration-ms="943" started-at="2017-02-24T17:08:06Z" finished-at="2017-02-24T17:08:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateClickKnobTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="beforeMethod" is-config="true" duration-ms="1223" started-at="2017-02-24T17:08:07Z" finished-at="2017-02-24T17:08:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.SliderTest.validateHitTabButtonTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:08:07Z" finished-at="2017-02-24T17:08:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="validateHitTabButtonTest()[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="validateHitTabButtonTest" duration-ms="1404" started-at="2017-02-24T17:08:08Z" finished-at="2017-02-24T17:08:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateHitTabButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:08:09Z" finished-at="2017-02-24T17:08:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="beforeMethod" is-config="true" duration-ms="1051" started-at="2017-02-24T17:08:09Z" finished-at="2017-02-24T17:08:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.SliderTest.validateHomeAndEndKeysTest(org.openqa.selenium.By,org.openqa.selenium.Keys,java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="validateHomeAndEndKeysTest(org.openqa.selenium.By, org.openqa.selenium.Keys, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="validateHomeAndEndKeysTest" duration-ms="2084" started-at="2017-02-24T17:08:10Z" data-provider="Test for Home and End keys" finished-at="2017-02-24T17:08:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[By.id: numInput]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[50]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateHomeAndEndKeysTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:08:12Z" finished-at="2017-02-24T17:08:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="beforeMethod" is-config="true" duration-ms="1195" started-at="2017-02-24T17:08:12Z" finished-at="2017-02-24T17:08:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.SliderTest.validateHomeAndEndKeysTest(org.openqa.selenium.By,org.openqa.selenium.Keys,java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="validateHomeAndEndKeysTest(org.openqa.selenium.By, org.openqa.selenium.Keys, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="validateHomeAndEndKeysTest" duration-ms="1922" started-at="2017-02-24T17:08:14Z" data-provider="Test for Home and End keys" finished-at="2017-02-24T17:08:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[By.id: numInput]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[100]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[50]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateHomeAndEndKeysTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:08:16Z" finished-at="2017-02-24T17:08:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="tearDown(java.lang.String)[pri:0, instance:origamiV2Tests.SliderTest@3a883ce7]" name="tearDown" is-config="true" duration-ms="1576" started-at="2017-02-24T17:08:16Z" finished-at="2017-02-24T17:08:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[off]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- origamiV2Tests.SliderTest -->
      <class name="origamiV2Tests.TextModalTest">
        <test-method status="PASS" signature="setUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="setUp" is-config="true" duration-ms="12724" started-at="2017-02-24T17:03:05Z" finished-at="2017-02-24T17:03:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sauce]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OS X 10.11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[54.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[off]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[iOS]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[iPhone 6 Plus]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[9.3]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[safari]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[1.5.3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="textModalTestBeforeClass(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="textModalTestBeforeClass" is-config="true" duration-ms="1" started-at="2017-02-24T17:03:18Z" finished-at="2017-02-24T17:03:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sauce]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[off]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[OS X 10.11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textModalTestBeforeClass -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="beforeMethod" is-config="true" duration-ms="5124" started-at="2017-02-24T17:03:18Z" finished-at="2017-02-24T17:03:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.TextModalTest.cancelButtonClickTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="cancelButtonClickTest()[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="cancelButtonClickTest" duration-ms="3662" started-at="2017-02-24T17:03:23Z" finished-at="2017-02-24T17:03:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cancelButtonClickTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="afterMethod" is-config="true" duration-ms="93" started-at="2017-02-24T17:03:27Z" finished-at="2017-02-24T17:03:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="beforeMethod" is-config="true" duration-ms="1868" started-at="2017-02-24T17:03:27Z" finished-at="2017-02-24T17:03:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.TextModalTest.checkLayoverTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkLayoverTest()[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="checkLayoverTest" duration-ms="1594" started-at="2017-02-24T17:03:29Z" finished-at="2017-02-24T17:03:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkLayoverTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="afterMethod" is-config="true" duration-ms="96" started-at="2017-02-24T17:03:30Z" finished-at="2017-02-24T17:03:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="beforeMethod" is-config="true" duration-ms="1765" started-at="2017-02-24T17:03:30Z" finished-at="2017-02-24T17:03:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.TextModalTest.clickButtonTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="clickButtonTest()[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="clickButtonTest" duration-ms="3727" started-at="2017-02-24T17:03:32Z" finished-at="2017-02-24T17:03:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="afterMethod" is-config="true" duration-ms="96" started-at="2017-02-24T17:03:36Z" finished-at="2017-02-24T17:03:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="beforeMethod" is-config="true" duration-ms="1327" started-at="2017-02-24T17:03:36Z" finished-at="2017-02-24T17:03:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.TextModalTest.clickGrayLayoverTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="clickGrayLayoverTest()[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="clickGrayLayoverTest" duration-ms="3684" started-at="2017-02-24T17:03:37Z" finished-at="2017-02-24T17:03:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickGrayLayoverTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="afterMethod" is-config="true" duration-ms="95" started-at="2017-02-24T17:03:41Z" finished-at="2017-02-24T17:03:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="beforeMethod" is-config="true" duration-ms="3548" started-at="2017-02-24T17:03:41Z" finished-at="2017-02-24T17:03:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.TextModalTest.clickXButtonTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="clickXButtonTest()[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="clickXButtonTest" duration-ms="3109" started-at="2017-02-24T17:03:44Z" finished-at="2017-02-24T17:03:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickXButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="afterMethod" is-config="true" duration-ms="92" started-at="2017-02-24T17:03:48Z" finished-at="2017-02-24T17:03:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:03:48Z" finished-at="2017-02-24T17:03:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.TextModalTest.elementIdConfigTest(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="elementIdConfigTest(java.lang.String)[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="elementIdConfigTest" duration-ms="3433" started-at="2017-02-24T17:03:48Z" data-provider="elementId config Test Data" finished-at="2017-02-24T17:03:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[detail: { elementId: 'app1', contentTemplateLarge: true, footerVisible: true, successBtnCallback: function() { console.log('¡¡success button pressed!!') }}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- elementIdConfigTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="afterMethod" is-config="true" duration-ms="128" started-at="2017-02-24T17:03:51Z" finished-at="2017-02-24T17:03:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="footerConfigTest(java.lang.String)[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="footerConfigTest" duration-ms="9044" started-at="2017-02-24T17:03:51Z" data-provider="Footer config Test Data" finished-at="2017-02-24T17:04:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[detail: { elementId: 'app', contentTemplateLarge: true, footerVisible: false, successBtnCallback: function() { console.log('¡¡success button pressed!!') }}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- footerConfigTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:03:51Z" finished-at="2017-02-24T17:03:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.TextModalTest.footerConfigTest(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="afterMethod" is-config="true" duration-ms="99" started-at="2017-02-24T17:04:00Z" finished-at="2017-02-24T17:04:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="beforeMethod" is-config="true" duration-ms="1206" started-at="2017-02-24T17:04:00Z" finished-at="2017-02-24T17:04:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.TextModalTest.hitEscKeyTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="hitEscKeyTest()[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="hitEscKeyTest" duration-ms="4357" started-at="2017-02-24T17:04:02Z" finished-at="2017-02-24T17:04:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hitEscKeyTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="afterMethod" is-config="true" duration-ms="94" started-at="2017-02-24T17:04:06Z" finished-at="2017-02-24T17:04:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="beforeMethod" is-config="true" duration-ms="1615" started-at="2017-02-24T17:04:06Z" finished-at="2017-02-24T17:04:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.TextModalTest.inlineCSSPropertyTest(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="inlineCSSPropertyTest(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="inlineCSSPropertyTest" duration-ms="1" started-at="2017-02-24T17:04:08Z" data-provider="InlineCSS Property Test Data" finished-at="2017-02-24T17:04:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[modalHeader]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[.modalHeader{padding:10px 15px;background-color:#e6e6e6;border-bottom:1px solid #b3b3b3}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inlineCSSPropertyTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="afterMethod" is-config="true" duration-ms="95" started-at="2017-02-24T17:04:08Z" finished-at="2017-02-24T17:04:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="beforeMethod" is-config="true" duration-ms="1194" started-at="2017-02-24T17:04:08Z" finished-at="2017-02-24T17:04:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.TextModalTest.inlineCSSPropertyTest(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="inlineCSSPropertyTest(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="inlineCSSPropertyTest" duration-ms="1" started-at="2017-02-24T17:04:09Z" data-provider="InlineCSS Property Test Data" finished-at="2017-02-24T17:04:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[modalContent]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[.modalContent{background-color:#fff}.modalBody{padding:15px}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inlineCSSPropertyTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="afterMethod" is-config="true" duration-ms="97" started-at="2017-02-24T17:04:09Z" finished-at="2017-02-24T17:04:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="beforeMethod" is-config="true" duration-ms="1383" started-at="2017-02-24T17:04:09Z" finished-at="2017-02-24T17:04:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.TextModalTest.inlineCSSPropertyTest(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="inlineCSSPropertyTest(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="inlineCSSPropertyTest" duration-ms="1" started-at="2017-02-24T17:04:10Z" data-provider="InlineCSS Property Test Data" finished-at="2017-02-24T17:04:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[modalFooter]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[.modalFooter{border-top:1px solid #d0d0d0;padding:10px 0 15px;margin-right:15px;margin-left:15px;overflow:auto}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inlineCSSPropertyTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="afterMethod" is-config="true" duration-ms="116" started-at="2017-02-24T17:04:10Z" finished-at="2017-02-24T17:04:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="beforeMethod" is-config="true" duration-ms="1250" started-at="2017-02-24T17:04:11Z" finished-at="2017-02-24T17:04:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.TextModalTest.inlineCSSPropertyTest(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="afterMethod" is-config="true" duration-ms="97" started-at="2017-02-24T17:04:12Z" finished-at="2017-02-24T17:04:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="inlineCSSPropertyTest(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="inlineCSSPropertyTest" duration-ms="0" started-at="2017-02-24T17:04:12Z" data-provider="InlineCSS Property Test Data" finished-at="2017-02-24T17:04:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[modalCancel]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[.modalCancel{margin-right:12px}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inlineCSSPropertyTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="beforeMethod" is-config="true" duration-ms="1255" started-at="2017-02-24T17:04:12Z" finished-at="2017-02-24T17:04:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.TextModalTest.inlineCSSPropertyTest(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="afterMethod" is-config="true" duration-ms="99" started-at="2017-02-24T17:04:13Z" finished-at="2017-02-24T17:04:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="inlineCSSPropertyTest(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="inlineCSSPropertyTest" duration-ms="0" started-at="2017-02-24T17:04:13Z" data-provider="InlineCSS Property Test Data" finished-at="2017-02-24T17:04:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[modalCancel,close,Save]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[.modalCancel,.modalClose,.modalSave{float:right;outline:none}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inlineCSSPropertyTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="beforeMethod" is-config="true" duration-ms="1103" started-at="2017-02-24T17:04:13Z" finished-at="2017-02-24T17:04:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.TextModalTest.inlineCSSPropertyTest(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="afterMethod" is-config="true" duration-ms="98" started-at="2017-02-24T17:04:14Z" finished-at="2017-02-24T17:04:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="inlineCSSPropertyTest(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="inlineCSSPropertyTest" duration-ms="0" started-at="2017-02-24T17:04:14Z" data-provider="InlineCSS Property Test Data" finished-at="2017-02-24T17:04:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[modalClose]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[.modalClose{font-size:x-large;text-decoration:none}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inlineCSSPropertyTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="beforeMethod" is-config="true" duration-ms="1126" started-at="2017-02-24T17:04:14Z" finished-at="2017-02-24T17:04:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.TextModalTest.inlineCSSPropertyTest(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="inlineCSSPropertyTest(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="inlineCSSPropertyTest" duration-ms="1" started-at="2017-02-24T17:04:16Z" data-provider="InlineCSS Property Test Data" finished-at="2017-02-24T17:04:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[modalClose]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[.modalClose,button.modalClose:focus,button.modalClose:hover{color:inherit}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inlineCSSPropertyTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="afterMethod" is-config="true" duration-ms="97" started-at="2017-02-24T17:04:16Z" finished-at="2017-02-24T17:04:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="beforeMethod" is-config="true" duration-ms="1303" started-at="2017-02-24T17:04:16Z" finished-at="2017-02-24T17:04:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.TextModalTest.inlineCSSPropertyTest(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="inlineCSSPropertyTest(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="inlineCSSPropertyTest" duration-ms="1" started-at="2017-02-24T17:04:17Z" data-provider="InlineCSS Property Test Data" finished-at="2017-02-24T17:04:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[modalHeaderText]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[.modalHeaderText{width:90%}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inlineCSSPropertyTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="afterMethod" is-config="true" duration-ms="101" started-at="2017-02-24T17:04:17Z" finished-at="2017-02-24T17:04:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="beforeMethod" is-config="true" duration-ms="1161" started-at="2017-02-24T17:04:17Z" finished-at="2017-02-24T17:04:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.TextModalTest.inlineCSSPropertyTest(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="inlineCSSPropertyTest(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="inlineCSSPropertyTest" duration-ms="1" started-at="2017-02-24T17:04:18Z" data-provider="InlineCSS Property Test Data" finished-at="2017-02-24T17:04:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ReactModal__Content]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[.ReactModal__Content{box-shadow:0 0 7px 1px #565656;outline:none}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inlineCSSPropertyTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="afterMethod" is-config="true" duration-ms="97" started-at="2017-02-24T17:04:18Z" finished-at="2017-02-24T17:04:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="beforeMethod" is-config="true" duration-ms="1581" started-at="2017-02-24T17:04:18Z" finished-at="2017-02-24T17:04:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.TextModalTest.modalTitleTest(int,int,java.lang.String[],java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="modalTitleTest(int, int, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;)[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="modalTitleTest" duration-ms="6086" started-at="2017-02-24T17:04:20Z" data-provider="Modal Title,Content CSS data" finished-at="2017-02-24T17:04:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[479]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@9cb8225]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@76b07f29]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[22px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[16px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[22px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[[Ljava.lang.String;@38af9828]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modalTitleTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="afterMethod" is-config="true" duration-ms="95" started-at="2017-02-24T17:04:26Z" finished-at="2017-02-24T17:04:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="beforeMethod" is-config="true" duration-ms="1255" started-at="2017-02-24T17:04:26Z" finished-at="2017-02-24T17:04:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.TextModalTest.modalTitleTest(int,int,java.lang.String[],java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="modalTitleTest(int, int, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;)[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="modalTitleTest" duration-ms="6052" started-at="2017-02-24T17:04:27Z" data-provider="Modal Title,Content CSS data" finished-at="2017-02-24T17:04:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[480]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@376a0d86]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@62656be4]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[28px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[16px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[22px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[[Ljava.lang.String;@17d919b6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modalTitleTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="afterMethod" is-config="true" duration-ms="93" started-at="2017-02-24T17:04:33Z" finished-at="2017-02-24T17:04:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="beforeMethod" is-config="true" duration-ms="1019" started-at="2017-02-24T17:04:33Z" finished-at="2017-02-24T17:04:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.TextModalTest.modalTitleTest(int,int,java.lang.String[],java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="modalTitleTest(int, int, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;)[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="modalTitleTest" duration-ms="5987" started-at="2017-02-24T17:04:34Z" data-provider="Modal Title,Content CSS data" finished-at="2017-02-24T17:04:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[768]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@53f3bdbd]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@34129c78]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[28px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[16px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[22px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[[Ljava.lang.String;@7d61eb55]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modalTitleTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="afterMethod" is-config="true" duration-ms="94" started-at="2017-02-24T17:04:40Z" finished-at="2017-02-24T17:04:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="beforeMethod" is-config="true" duration-ms="1564" started-at="2017-02-24T17:04:41Z" finished-at="2017-02-24T17:04:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.TextModalTest.modalTitleTest(int,int,java.lang.String[],java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="modalTitleTest(int, int, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;)[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="modalTitleTest" duration-ms="5956" started-at="2017-02-24T17:04:42Z" data-provider="Modal Title,Content CSS data" finished-at="2017-02-24T17:04:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1024]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@222a59e6]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[Ljava.lang.String;@6c7a164b]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[28px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[16px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[22px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[[Ljava.lang.String;@4c2bb6e0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modalTitleTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="afterMethod" is-config="true" duration-ms="102" started-at="2017-02-24T17:04:48Z" finished-at="2017-02-24T17:04:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:04:48Z" finished-at="2017-02-24T17:04:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.TextModalTest.smTemplateConfigTest(int,int,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="smTemplateConfigTest(int, int, [Ljava.lang.String;, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="smTemplateConfigTest" duration-ms="5696" started-at="2017-02-24T17:04:48Z" data-provider="Small Template config Test Data" finished-at="2017-02-24T17:04:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[479]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@3fa247d1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[17.984px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[22px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[16px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[22px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[rgba(35, 31, 32, 1)]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[detail: { elementId: 'app', contentTemplateLarge: false, footerVisible: true, successBtnCallback: function() { console.log('¡¡success button pressed!!') }}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTemplateConfigTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="afterMethod" is-config="true" duration-ms="99" started-at="2017-02-24T17:04:54Z" finished-at="2017-02-24T17:04:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:04:54Z" finished-at="2017-02-24T17:04:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.TextModalTest.smTemplateConfigTest(int,int,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="smTemplateConfigTest(int, int, [Ljava.lang.String;, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="smTemplateConfigTest" duration-ms="5440" started-at="2017-02-24T17:04:54Z" data-provider="Small Template config Test Data" finished-at="2017-02-24T17:04:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[480]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@2cb2fc20]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[22px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[28px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[16px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[22px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[rgba(35, 31, 32, 1)]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[detail: { elementId: 'app', contentTemplateLarge: false, footerVisible: true, successBtnCallback: function() { console.log('¡¡success button pressed!!') }}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTemplateConfigTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="afterMethod" is-config="true" duration-ms="98" started-at="2017-02-24T17:04:59Z" finished-at="2017-02-24T17:05:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:05:00Z" finished-at="2017-02-24T17:05:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.TextModalTest.smTemplateConfigTest(int,int,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="smTemplateConfigTest(int, int, [Ljava.lang.String;, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="smTemplateConfigTest" duration-ms="6070" started-at="2017-02-24T17:05:00Z" data-provider="Small Template config Test Data" finished-at="2017-02-24T17:05:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[768]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@4f4c4b1a]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[22px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[28px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[16px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[22px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[rgba(35, 31, 32, 1)]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[detail: { elementId: 'app', contentTemplateLarge: false, footerVisible: true, successBtnCallback: function() { console.log('¡¡success button pressed!!') }}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTemplateConfigTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="afterMethod" is-config="true" duration-ms="96" started-at="2017-02-24T17:05:06Z" finished-at="2017-02-24T17:05:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="smTemplateConfigTest(int, int, [Ljava.lang.String;, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="smTemplateConfigTest" duration-ms="5698" started-at="2017-02-24T17:05:06Z" data-provider="Small Template config Test Data" finished-at="2017-02-24T17:05:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1024]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@723e88f9]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[22px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[28px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[16px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[22px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[rgba(35, 31, 32, 1)]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[detail: { elementId: 'app', contentTemplateLarge: false, footerVisible: true, successBtnCallback: function() { console.log('¡¡success button pressed!!') }}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smTemplateConfigTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:05:06Z" finished-at="2017-02-24T17:05:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.TextModalTest.smTemplateConfigTest(int,int,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="afterMethod" is-config="true" duration-ms="104" started-at="2017-02-24T17:05:11Z" finished-at="2017-02-24T17:05:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="beforeMethod" is-config="true" duration-ms="1134" started-at="2017-02-24T17:05:11Z" finished-at="2017-02-24T17:05:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.TextModalTest.successButtonClickTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="successButtonClickTest()[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="successButtonClickTest" duration-ms="3134" started-at="2017-02-24T17:05:13Z" finished-at="2017-02-24T17:05:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- successButtonClickTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="afterMethod" is-config="true" duration-ms="104" started-at="2017-02-24T17:05:16Z" finished-at="2017-02-24T17:05:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="beforeMethod" is-config="true" duration-ms="1220" started-at="2017-02-24T17:05:16Z" finished-at="2017-02-24T17:05:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.TextModalTest.tabButtonTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="tabButtonTest()[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="tabButtonTest" duration-ms="2634" started-at="2017-02-24T17:05:17Z" finished-at="2017-02-24T17:05:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tabButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="afterMethod" is-config="true" duration-ms="93" started-at="2017-02-24T17:05:20Z" finished-at="2017-02-24T17:05:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="beforeMethod" is-config="true" duration-ms="1224" started-at="2017-02-24T17:05:20Z" finished-at="2017-02-24T17:05:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.TextModalTest.tabCancelButtonTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="tabCancelButtonTest()[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="tabCancelButtonTest" duration-ms="2836" started-at="2017-02-24T17:05:21Z" finished-at="2017-02-24T17:05:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tabCancelButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="afterMethod" is-config="true" duration-ms="102" started-at="2017-02-24T17:05:24Z" finished-at="2017-02-24T17:05:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="beforeMethod" is-config="true" duration-ms="1101" started-at="2017-02-24T17:05:24Z" finished-at="2017-02-24T17:05:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.TextModalTest.tabSuccessButtonTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="tabSuccessButtonTest()[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="tabSuccessButtonTest" duration-ms="4373" started-at="2017-02-24T17:05:25Z" finished-at="2017-02-24T17:05:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tabSuccessButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="afterMethod" is-config="true" duration-ms="92" started-at="2017-02-24T17:05:29Z" finished-at="2017-02-24T17:05:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="tearDown(java.lang.String)[pri:0, instance:origamiV2Tests.TextModalTest@4973813a]" name="tearDown" is-config="true" duration-ms="3071" started-at="2017-02-24T17:05:30Z" finished-at="2017-02-24T17:05:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[off]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- origamiV2Tests.TextModalTest -->
      <class name="elementsTests.PresentationStrategyTest">
        <test-method status="PASS" signature="setUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setUp" is-config="true" duration-ms="14891" started-at="2017-02-24T16:58:46Z" finished-at="2017-02-24T16:59:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sauce]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OS X 10.11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[54.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[off]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[iOS]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[iPhone 6 Plus]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[9.3]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[safari]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[1.5.3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="4573" started-at="2017-02-24T16:59:01Z" finished-at="2017-02-24T16:59:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setCenteredStrategyTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeClass(java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeClass" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:01Z" finished-at="2017-02-24T16:59:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sauce]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 6 Plus]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="setCenteredStrategyTest()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setCenteredStrategyTest" duration-ms="581" started-at="2017-02-24T16:59:05Z" finished-at="2017-02-24T16:59:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setCenteredStrategyTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:06Z" finished-at="2017-02-24T16:59:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="2783" started-at="2017-02-24T16:59:06Z" finished-at="2017-02-24T16:59:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setDefaultStrategyTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setDefaultStrategyTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setDefaultStrategyTest" duration-ms="1053" started-at="2017-02-24T16:59:09Z" data-provider="Default Strategy Test Data" finished-at="2017-02-24T16:59:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[479]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: default-strategy]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-10px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-10px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDefaultStrategyTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:10Z" finished-at="2017-02-24T16:59:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="1442" started-at="2017-02-24T16:59:10Z" finished-at="2017-02-24T16:59:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setDefaultStrategyTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setDefaultStrategyTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setDefaultStrategyTest" duration-ms="923" started-at="2017-02-24T16:59:11Z" data-provider="Default Strategy Test Data" finished-at="2017-02-24T16:59:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: default-strategy]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDefaultStrategyTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="1780" started-at="2017-02-24T16:59:12Z" finished-at="2017-02-24T16:59:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setDefaultStrategyTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:12Z" finished-at="2017-02-24T16:59:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setDefaultStrategyTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setDefaultStrategyTest" duration-ms="617" started-at="2017-02-24T16:59:14Z" data-provider="Default Strategy Test Data" finished-at="2017-02-24T16:59:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[768]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: default-strategy]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDefaultStrategyTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="1485" started-at="2017-02-24T16:59:14Z" finished-at="2017-02-24T16:59:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setDefaultStrategyTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:14Z" finished-at="2017-02-24T16:59:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setDefaultStrategyTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setDefaultStrategyTest" duration-ms="629" started-at="2017-02-24T16:59:16Z" data-provider="Default Strategy Test Data" finished-at="2017-02-24T16:59:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1024]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: default-strategy]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-40px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDefaultStrategyTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:59:17Z" finished-at="2017-02-24T16:59:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="2047" started-at="2017-02-24T16:59:17Z" finished-at="2017-02-24T16:59:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setDefaultStrategyTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setDefaultStrategyTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setDefaultStrategyTest" duration-ms="686" started-at="2017-02-24T16:59:19Z" data-provider="Default Strategy Test Data" finished-at="2017-02-24T16:59:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1140]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: default-strategy]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-40px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDefaultStrategyTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:19Z" finished-at="2017-02-24T16:59:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="1353" started-at="2017-02-24T16:59:19Z" finished-at="2017-02-24T16:59:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setGridLargeCol2Test(int,int,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setGridLargeCol2Test(int, int, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setGridLargeCol2Test" duration-ms="13326" started-at="2017-02-24T16:59:21Z" data-provider="BasicGrid - Col 2 Test Data" finished-at="2017-02-24T16:59:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[479]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@51bd8b5c]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-10px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-10px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setGridLargeCol2Test -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:34Z" finished-at="2017-02-24T16:59:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="1521" started-at="2017-02-24T16:59:34Z" finished-at="2017-02-24T16:59:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setGridLargeCol2Test(int,int,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setGridLargeCol2Test(int, int, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setGridLargeCol2Test" duration-ms="9864" started-at="2017-02-24T16:59:35Z" data-provider="BasicGrid - Col 2 Test Data" finished-at="2017-02-24T16:59:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[480]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@7b50df34]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setGridLargeCol2Test -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:59:45Z" finished-at="2017-02-24T16:59:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="1313" started-at="2017-02-24T16:59:45Z" finished-at="2017-02-24T16:59:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setGridLargeCol2Test(int,int,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setGridLargeCol2Test(int, int, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setGridLargeCol2Test" duration-ms="10936" started-at="2017-02-24T16:59:47Z" data-provider="BasicGrid - Col 2 Test Data" finished-at="2017-02-24T16:59:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[768]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@1b410b60]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setGridLargeCol2Test -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="1001" started-at="2017-02-24T16:59:58Z" finished-at="2017-02-24T16:59:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setGridLargeCol2Test(int,int,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:58Z" finished-at="2017-02-24T16:59:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setGridLargeCol2Test(int, int, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setGridLargeCol2Test" duration-ms="9395" started-at="2017-02-24T16:59:59Z" data-provider="BasicGrid - Col 2 Test Data" finished-at="2017-02-24T17:00:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1024]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@2462cb01]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-40px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setGridLargeCol2Test -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:00:08Z" finished-at="2017-02-24T17:00:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="987" started-at="2017-02-24T17:00:08Z" finished-at="2017-02-24T17:00:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setGridLargeCol2Test(int,int,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setGridLargeCol2Test(int, int, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setGridLargeCol2Test" duration-ms="9404" started-at="2017-02-24T17:00:09Z" data-provider="BasicGrid - Col 2 Test Data" finished-at="2017-02-24T17:00:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1140]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@19b843ba]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-40px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setGridLargeCol2Test -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:18Z" finished-at="2017-02-24T17:00:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="1054" started-at="2017-02-24T17:00:18Z" finished-at="2017-02-24T17:00:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setGridLargeCol3Test(int,int,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setGridLargeCol3Test(int, int, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setGridLargeCol3Test" duration-ms="9473" started-at="2017-02-24T17:00:19Z" data-provider="BasicGrid - Col 3 Test Data" finished-at="2017-02-24T17:00:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[479]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@64ec96c6]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-10px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-10px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setGridLargeCol3Test -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:00:29Z" finished-at="2017-02-24T17:00:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="948" started-at="2017-02-24T17:00:29Z" finished-at="2017-02-24T17:00:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setGridLargeCol3Test(int,int,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setGridLargeCol3Test(int, int, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setGridLargeCol3Test" duration-ms="9304" started-at="2017-02-24T17:00:30Z" data-provider="BasicGrid - Col 3 Test Data" finished-at="2017-02-24T17:00:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[480]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@77659b30]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setGridLargeCol3Test -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="1146" started-at="2017-02-24T17:00:39Z" finished-at="2017-02-24T17:00:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setGridLargeCol3Test(int,int,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:39Z" finished-at="2017-02-24T17:00:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setGridLargeCol3Test(int, int, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setGridLargeCol3Test" duration-ms="9350" started-at="2017-02-24T17:00:40Z" data-provider="BasicGrid - Col 3 Test Data" finished-at="2017-02-24T17:00:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[768]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@456d6c1e]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setGridLargeCol3Test -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="1105" started-at="2017-02-24T17:00:50Z" finished-at="2017-02-24T17:00:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setGridLargeCol3Test(int,int,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:50Z" finished-at="2017-02-24T17:00:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setGridLargeCol3Test(int, int, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setGridLargeCol3Test" duration-ms="9253" started-at="2017-02-24T17:00:51Z" data-provider="BasicGrid - Col 3 Test Data" finished-at="2017-02-24T17:01:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1024]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@1e13529a]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-40px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setGridLargeCol3Test -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="1131" started-at="2017-02-24T17:01:00Z" finished-at="2017-02-24T17:01:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setGridLargeCol3Test(int,int,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:00Z" finished-at="2017-02-24T17:01:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setGridLargeCol3Test(int, int, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setGridLargeCol3Test" duration-ms="9181" started-at="2017-02-24T17:01:01Z" data-provider="BasicGrid - Col 3 Test Data" finished-at="2017-02-24T17:01:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1140]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@1ec9bd38]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-40px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setGridLargeCol3Test -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:01:10Z" finished-at="2017-02-24T17:01:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="1096" started-at="2017-02-24T17:01:10Z" finished-at="2017-02-24T17:01:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setGridLargeCol4Test(int,int,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setGridLargeCol4Test(int, int, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setGridLargeCol4Test" duration-ms="11044" started-at="2017-02-24T17:01:11Z" data-provider="BasicGrid - Col 4 Test Data" finished-at="2017-02-24T17:01:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[479]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@452e19ca]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-10px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-10px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setGridLargeCol4Test -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:01:22Z" finished-at="2017-02-24T17:01:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="825" started-at="2017-02-24T17:01:22Z" finished-at="2017-02-24T17:01:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setGridLargeCol4Test(int,int,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setGridLargeCol4Test(int, int, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setGridLargeCol4Test" duration-ms="9334" started-at="2017-02-24T17:01:23Z" data-provider="BasicGrid - Col 4 Test Data" finished-at="2017-02-24T17:01:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[480]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@6b0d80ed]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setGridLargeCol4Test -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="1119" started-at="2017-02-24T17:01:33Z" finished-at="2017-02-24T17:01:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setGridLargeCol4Test(int,int,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:33Z" finished-at="2017-02-24T17:01:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setGridLargeCol4Test(int, int, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setGridLargeCol4Test" duration-ms="9393" started-at="2017-02-24T17:01:34Z" data-provider="BasicGrid - Col 4 Test Data" finished-at="2017-02-24T17:01:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[768]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@6f8e8894]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setGridLargeCol4Test -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:01:43Z" finished-at="2017-02-24T17:01:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="1015" started-at="2017-02-24T17:01:43Z" finished-at="2017-02-24T17:01:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setGridLargeCol4Test(int,int,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setGridLargeCol4Test(int, int, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setGridLargeCol4Test" duration-ms="9458" started-at="2017-02-24T17:01:44Z" data-provider="BasicGrid - Col 4 Test Data" finished-at="2017-02-24T17:01:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1024]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@3cfdd820]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-40px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setGridLargeCol4Test -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="1067" started-at="2017-02-24T17:01:54Z" finished-at="2017-02-24T17:01:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setGridLargeCol4Test(int,int,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:54Z" finished-at="2017-02-24T17:01:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setGridLargeCol4Test(int, int, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setGridLargeCol4Test" duration-ms="9204" started-at="2017-02-24T17:01:55Z" data-provider="BasicGrid - Col 4 Test Data" finished-at="2017-02-24T17:02:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1140]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@928763c]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-40px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setGridLargeCol4Test -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:04Z" finished-at="2017-02-24T17:02:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="2311" started-at="2017-02-24T17:02:04Z" finished-at="2017-02-24T17:02:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setGridSmallCol2Test(int,int,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setGridSmallCol2Test(int, int, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setGridSmallCol2Test" duration-ms="9790" started-at="2017-02-24T17:02:06Z" data-provider="BasicGrid - Col 2 Test Data" finished-at="2017-02-24T17:02:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[479]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@e25951c]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-10px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-10px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setGridSmallCol2Test -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="1085" started-at="2017-02-24T17:02:16Z" finished-at="2017-02-24T17:02:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setGridSmallCol2Test(int,int,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:16Z" finished-at="2017-02-24T17:02:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setGridSmallCol2Test(int, int, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setGridSmallCol2Test" duration-ms="9527" started-at="2017-02-24T17:02:17Z" data-provider="BasicGrid - Col 2 Test Data" finished-at="2017-02-24T17:02:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[480]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@15f47664]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setGridSmallCol2Test -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="1094" started-at="2017-02-24T17:02:27Z" finished-at="2017-02-24T17:02:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setGridSmallCol2Test(int,int,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:27Z" finished-at="2017-02-24T17:02:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setGridSmallCol2Test(int, int, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setGridSmallCol2Test" duration-ms="9306" started-at="2017-02-24T17:02:28Z" data-provider="BasicGrid - Col 2 Test Data" finished-at="2017-02-24T17:02:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[768]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@471a9022]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setGridSmallCol2Test -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="993" started-at="2017-02-24T17:02:37Z" finished-at="2017-02-24T17:02:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setGridSmallCol2Test(int,int,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:37Z" finished-at="2017-02-24T17:02:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setGridSmallCol2Test(int, int, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setGridSmallCol2Test" duration-ms="10788" started-at="2017-02-24T17:02:38Z" data-provider="BasicGrid - Col 2 Test Data" finished-at="2017-02-24T17:02:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1024]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@dc9876b]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-40px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setGridSmallCol2Test -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:49Z" finished-at="2017-02-24T17:02:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="1085" started-at="2017-02-24T17:02:49Z" finished-at="2017-02-24T17:02:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setGridSmallCol2Test(int,int,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setGridSmallCol2Test(int, int, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setGridSmallCol2Test" duration-ms="9379" started-at="2017-02-24T17:02:50Z" data-provider="BasicGrid - Col 2 Test Data" finished-at="2017-02-24T17:02:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1140]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@2f666ebb]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-40px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setGridSmallCol2Test -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:59Z" finished-at="2017-02-24T17:02:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="1016" started-at="2017-02-24T17:02:59Z" finished-at="2017-02-24T17:03:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setGridSmallCol3Test(int,int,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setGridSmallCol3Test(int, int, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setGridSmallCol3Test" duration-ms="9508" started-at="2017-02-24T17:03:00Z" data-provider="BasicGrid - Col 3 Test Data" finished-at="2017-02-24T17:03:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[479]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@19976a65]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-10px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-10px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setGridSmallCol3Test -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:03:10Z" finished-at="2017-02-24T17:03:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="1043" started-at="2017-02-24T17:03:10Z" finished-at="2017-02-24T17:03:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setGridSmallCol3Test(int,int,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setGridSmallCol3Test(int, int, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setGridSmallCol3Test" duration-ms="9264" started-at="2017-02-24T17:03:11Z" data-provider="BasicGrid - Col 3 Test Data" finished-at="2017-02-24T17:03:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[480]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@a1f72f5]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setGridSmallCol3Test -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:03:20Z" finished-at="2017-02-24T17:03:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="1051" started-at="2017-02-24T17:03:20Z" finished-at="2017-02-24T17:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setGridSmallCol3Test(int,int,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setGridSmallCol3Test(int, int, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setGridSmallCol3Test" duration-ms="8923" started-at="2017-02-24T17:03:21Z" data-provider="BasicGrid - Col 3 Test Data" finished-at="2017-02-24T17:03:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[768]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@4b2c5e02]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setGridSmallCol3Test -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:03:30Z" finished-at="2017-02-24T17:03:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="920" started-at="2017-02-24T17:03:30Z" finished-at="2017-02-24T17:03:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setGridSmallCol3Test(int,int,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setGridSmallCol3Test(int, int, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setGridSmallCol3Test" duration-ms="9229" started-at="2017-02-24T17:03:31Z" data-provider="BasicGrid - Col 3 Test Data" finished-at="2017-02-24T17:03:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1024]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@57a3e26a]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-40px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setGridSmallCol3Test -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:03:40Z" finished-at="2017-02-24T17:03:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="1626" started-at="2017-02-24T17:03:40Z" finished-at="2017-02-24T17:03:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setGridSmallCol3Test(int,int,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setGridSmallCol3Test(int, int, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setGridSmallCol3Test" duration-ms="9052" started-at="2017-02-24T17:03:42Z" data-provider="BasicGrid - Col 3 Test Data" finished-at="2017-02-24T17:03:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1140]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@75c56eb9]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-40px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setGridSmallCol3Test -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:03:51Z" finished-at="2017-02-24T17:03:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="1127" started-at="2017-02-24T17:03:51Z" finished-at="2017-02-24T17:03:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setGridSmallCol4Test(int,int,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setGridSmallCol4Test(int, int, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setGridSmallCol4Test" duration-ms="9407" started-at="2017-02-24T17:03:52Z" data-provider="BasicGrid - Col 4 Test Data" finished-at="2017-02-24T17:04:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[479]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@4bc222e]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-10px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-10px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setGridSmallCol4Test -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="1012" started-at="2017-02-24T17:04:01Z" finished-at="2017-02-24T17:04:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setGridSmallCol4Test(int,int,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:04:01Z" finished-at="2017-02-24T17:04:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setGridSmallCol4Test(int, int, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setGridSmallCol4Test" duration-ms="11416" started-at="2017-02-24T17:04:02Z" data-provider="BasicGrid - Col 4 Test Data" finished-at="2017-02-24T17:04:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[480]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@2dc9b0f5]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setGridSmallCol4Test -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:04:14Z" finished-at="2017-02-24T17:04:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="966" started-at="2017-02-24T17:04:14Z" finished-at="2017-02-24T17:04:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setGridSmallCol4Test(int,int,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setGridSmallCol4Test(int, int, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setGridSmallCol4Test" duration-ms="9499" started-at="2017-02-24T17:04:15Z" data-provider="BasicGrid - Col 4 Test Data" finished-at="2017-02-24T17:04:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[768]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@6531a794]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setGridSmallCol4Test -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="965" started-at="2017-02-24T17:04:24Z" finished-at="2017-02-24T17:04:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setGridSmallCol4Test(int,int,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:04:24Z" finished-at="2017-02-24T17:04:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setGridSmallCol4Test(int, int, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setGridSmallCol4Test" duration-ms="9222" started-at="2017-02-24T17:04:25Z" data-provider="BasicGrid - Col 4 Test Data" finished-at="2017-02-24T17:04:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1024]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@3b5fad2d]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-40px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setGridSmallCol4Test -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:04:35Z" finished-at="2017-02-24T17:04:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="1198" started-at="2017-02-24T17:04:35Z" finished-at="2017-02-24T17:04:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setGridSmallCol4Test(int,int,java.lang.String[],java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setGridSmallCol4Test(int, int, [Ljava.lang.String;, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setGridSmallCol4Test" duration-ms="10057" started-at="2017-02-24T17:04:36Z" data-provider="BasicGrid - Col 4 Test Data" finished-at="2017-02-24T17:04:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1140]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@5e17553a]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-40px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setGridSmallCol4Test -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:04:46Z" finished-at="2017-02-24T17:04:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="1190" started-at="2017-02-24T17:04:46Z" finished-at="2017-02-24T17:04:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setLeftRightStrategyTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setLeftRightStrategyTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setLeftRightStrategyTest" duration-ms="674" started-at="2017-02-24T17:04:47Z" data-provider="Left Right Strategy Test Data" finished-at="2017-02-24T17:04:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[479]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: left-element]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-10px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setLeftRightStrategyTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:04:48Z" finished-at="2017-02-24T17:04:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="1108" started-at="2017-02-24T17:04:48Z" finished-at="2017-02-24T17:04:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setLeftRightStrategyTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setLeftRightStrategyTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setLeftRightStrategyTest" duration-ms="692" started-at="2017-02-24T17:04:49Z" data-provider="Left Right Strategy Test Data" finished-at="2017-02-24T17:04:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[479]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: right-element]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-10px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setLeftRightStrategyTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:04:49Z" finished-at="2017-02-24T17:04:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="1270" started-at="2017-02-24T17:04:49Z" finished-at="2017-02-24T17:04:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setLeftRightStrategyTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setLeftRightStrategyTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setLeftRightStrategyTest" duration-ms="630" started-at="2017-02-24T17:04:51Z" data-provider="Left Right Strategy Test Data" finished-at="2017-02-24T17:04:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[480]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: left-element]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setLeftRightStrategyTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:04:51Z" finished-at="2017-02-24T17:04:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="921" started-at="2017-02-24T17:04:51Z" finished-at="2017-02-24T17:04:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setLeftRightStrategyTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setLeftRightStrategyTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setLeftRightStrategyTest" duration-ms="591" started-at="2017-02-24T17:04:52Z" data-provider="Left Right Strategy Test Data" finished-at="2017-02-24T17:04:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[480]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: right-element]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setLeftRightStrategyTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:04:53Z" finished-at="2017-02-24T17:04:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="947" started-at="2017-02-24T17:04:53Z" finished-at="2017-02-24T17:04:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setLeftRightStrategyTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setLeftRightStrategyTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setLeftRightStrategyTest" duration-ms="615" started-at="2017-02-24T17:04:54Z" data-provider="Left Right Strategy Test Data" finished-at="2017-02-24T17:04:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[768]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: left-element]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setLeftRightStrategyTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="1042" started-at="2017-02-24T17:04:54Z" finished-at="2017-02-24T17:04:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setLeftRightStrategyTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:04:54Z" finished-at="2017-02-24T17:04:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setLeftRightStrategyTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setLeftRightStrategyTest" duration-ms="575" started-at="2017-02-24T17:04:55Z" data-provider="Left Right Strategy Test Data" finished-at="2017-02-24T17:04:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[768]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: right-element]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setLeftRightStrategyTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="931" started-at="2017-02-24T17:04:56Z" finished-at="2017-02-24T17:04:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setLeftRightStrategyTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:04:56Z" finished-at="2017-02-24T17:04:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setLeftRightStrategyTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setLeftRightStrategyTest" duration-ms="660" started-at="2017-02-24T17:04:57Z" data-provider="Left Right Strategy Test Data" finished-at="2017-02-24T17:04:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1024]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: left-element]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setLeftRightStrategyTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:04:58Z" finished-at="2017-02-24T17:04:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="1039" started-at="2017-02-24T17:04:58Z" finished-at="2017-02-24T17:04:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setLeftRightStrategyTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setLeftRightStrategyTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setLeftRightStrategyTest" duration-ms="571" started-at="2017-02-24T17:04:59Z" data-provider="Left Right Strategy Test Data" finished-at="2017-02-24T17:04:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1024]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: right-element]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-40px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setLeftRightStrategyTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:04:59Z" finished-at="2017-02-24T17:04:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="1125" started-at="2017-02-24T17:04:59Z" finished-at="2017-02-24T17:05:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setLeftRightStrategyTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setLeftRightStrategyTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setLeftRightStrategyTest" duration-ms="654" started-at="2017-02-24T17:05:00Z" data-provider="Left Right Strategy Test Data" finished-at="2017-02-24T17:05:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1140]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: left-element]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setLeftRightStrategyTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:05:01Z" finished-at="2017-02-24T17:05:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="1088" started-at="2017-02-24T17:05:01Z" finished-at="2017-02-24T17:05:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setLeftRightStrategyTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setLeftRightStrategyTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setLeftRightStrategyTest" duration-ms="554" started-at="2017-02-24T17:05:02Z" data-provider="Left Right Strategy Test Data" finished-at="2017-02-24T17:05:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1140]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: right-element]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-40px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setLeftRightStrategyTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:05:03Z" finished-at="2017-02-24T17:05:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="1205" started-at="2017-02-24T17:05:03Z" finished-at="2017-02-24T17:05:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setSpacingDefaultGapTest(java.lang.String,int,int)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setSpacingDefaultGapTest(java.lang.String, int, int)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setSpacingDefaultGapTest" duration-ms="4700" started-at="2017-02-24T17:05:04Z" data-provider="Spacing Default Gap Test Data" finished-at="2017-02-24T17:05:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Default Gap Spacing Element]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[479]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSpacingDefaultGapTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:05:09Z" finished-at="2017-02-24T17:05:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="915" started-at="2017-02-24T17:05:09Z" finished-at="2017-02-24T17:05:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setSpacingDefaultGapTest(java.lang.String,int,int)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setSpacingDefaultGapTest(java.lang.String, int, int)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setSpacingDefaultGapTest" duration-ms="4231" started-at="2017-02-24T17:05:09Z" data-provider="Spacing Default Gap Test Data" finished-at="2017-02-24T17:05:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Default Gap Spacing Element]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[480]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSpacingDefaultGapTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:05:14Z" finished-at="2017-02-24T17:05:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="991" started-at="2017-02-24T17:05:14Z" finished-at="2017-02-24T17:05:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setSpacingDefaultGapTest(java.lang.String,int,int)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setSpacingDefaultGapTest(java.lang.String, int, int)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setSpacingDefaultGapTest" duration-ms="4315" started-at="2017-02-24T17:05:15Z" data-provider="Spacing Default Gap Test Data" finished-at="2017-02-24T17:05:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Default Gap Spacing Element]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[768]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSpacingDefaultGapTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:05:19Z" finished-at="2017-02-24T17:05:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="1067" started-at="2017-02-24T17:05:19Z" finished-at="2017-02-24T17:05:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setSpacingDefaultGapTest(java.lang.String,int,int)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setSpacingDefaultGapTest(java.lang.String, int, int)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setSpacingDefaultGapTest" duration-ms="4460" started-at="2017-02-24T17:05:20Z" data-provider="Spacing Default Gap Test Data" finished-at="2017-02-24T17:05:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Default Gap Spacing Element]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1024]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSpacingDefaultGapTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:05:25Z" finished-at="2017-02-24T17:05:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="1020" started-at="2017-02-24T17:05:25Z" finished-at="2017-02-24T17:05:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setSpacingDefaultGapTest(java.lang.String,int,int)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setSpacingDefaultGapTest(java.lang.String, int, int)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setSpacingDefaultGapTest" duration-ms="5898" started-at="2017-02-24T17:05:26Z" data-provider="Spacing Default Gap Test Data" finished-at="2017-02-24T17:05:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Default Gap Spacing Element]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1140]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSpacingDefaultGapTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:05:31Z" finished-at="2017-02-24T17:05:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="1014" started-at="2017-02-24T17:05:31Z" finished-at="2017-02-24T17:05:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setSpacingLargeGapTest(java.lang.String,org.openqa.selenium.By,int,int,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setSpacingLargeGapTest(java.lang.String, org.openqa.selenium.By, int, int, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setSpacingLargeGapTest" duration-ms="1688" started-at="2017-02-24T17:05:32Z" data-provider="Spacing Large Gap Test Data" finished-at="2017-02-24T17:05:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Large Gap spacing Element1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: centered-largegap1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[479]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSpacingLargeGapTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:05:34Z" finished-at="2017-02-24T17:05:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="1098" started-at="2017-02-24T17:05:34Z" finished-at="2017-02-24T17:05:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setSpacingLargeGapTest(java.lang.String,org.openqa.selenium.By,int,int,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setSpacingLargeGapTest(java.lang.String, org.openqa.selenium.By, int, int, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setSpacingLargeGapTest" duration-ms="1565" started-at="2017-02-24T17:05:35Z" data-provider="Spacing Large Gap Test Data" finished-at="2017-02-24T17:05:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Large Gap spacing Element1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: centered-largegap1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[480]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSpacingLargeGapTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:05:37Z" finished-at="2017-02-24T17:05:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="913" started-at="2017-02-24T17:05:37Z" finished-at="2017-02-24T17:05:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setSpacingLargeGapTest(java.lang.String,org.openqa.selenium.By,int,int,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setSpacingLargeGapTest(java.lang.String, org.openqa.selenium.By, int, int, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setSpacingLargeGapTest" duration-ms="1616" started-at="2017-02-24T17:05:38Z" data-provider="Spacing Large Gap Test Data" finished-at="2017-02-24T17:05:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Large Gap spacing Element1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: centered-largegap1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[768]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSpacingLargeGapTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="1177" started-at="2017-02-24T17:05:39Z" finished-at="2017-02-24T17:05:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setSpacingLargeGapTest(java.lang.String,org.openqa.selenium.By,int,int,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:05:39Z" finished-at="2017-02-24T17:05:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setSpacingLargeGapTest(java.lang.String, org.openqa.selenium.By, int, int, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setSpacingLargeGapTest" duration-ms="1548" started-at="2017-02-24T17:05:41Z" data-provider="Spacing Large Gap Test Data" finished-at="2017-02-24T17:05:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Large Gap spacing Element1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: centered-largegap1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1024]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSpacingLargeGapTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="1148" started-at="2017-02-24T17:05:42Z" finished-at="2017-02-24T17:05:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setSpacingLargeGapTest(java.lang.String,org.openqa.selenium.By,int,int,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:05:42Z" finished-at="2017-02-24T17:05:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setSpacingLargeGapTest(java.lang.String, org.openqa.selenium.By, int, int, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setSpacingLargeGapTest" duration-ms="1706" started-at="2017-02-24T17:05:43Z" data-provider="Spacing Large Gap Test Data" finished-at="2017-02-24T17:05:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Large Gap spacing Element1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: centered-largegap1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1140]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSpacingLargeGapTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:05:45Z" finished-at="2017-02-24T17:05:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="1117" started-at="2017-02-24T17:05:45Z" finished-at="2017-02-24T17:05:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setSpacingLargeGapTest(java.lang.String,org.openqa.selenium.By,int,int,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setSpacingLargeGapTest(java.lang.String, org.openqa.selenium.By, int, int, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setSpacingLargeGapTest" duration-ms="1568" started-at="2017-02-24T17:05:46Z" data-provider="Spacing Large Gap Test Data" finished-at="2017-02-24T17:05:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Large Gap spacing Element2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: centered-largegap2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[479]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSpacingLargeGapTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:05:48Z" finished-at="2017-02-24T17:05:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="1017" started-at="2017-02-24T17:05:48Z" finished-at="2017-02-24T17:05:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setSpacingLargeGapTest(java.lang.String,org.openqa.selenium.By,int,int,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setSpacingLargeGapTest(java.lang.String, org.openqa.selenium.By, int, int, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setSpacingLargeGapTest" duration-ms="1706" started-at="2017-02-24T17:05:49Z" data-provider="Spacing Large Gap Test Data" finished-at="2017-02-24T17:05:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Large Gap spacing Element2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: centered-largegap2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[480]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSpacingLargeGapTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:05:50Z" finished-at="2017-02-24T17:05:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="1039" started-at="2017-02-24T17:05:50Z" finished-at="2017-02-24T17:05:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setSpacingLargeGapTest(java.lang.String,org.openqa.selenium.By,int,int,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setSpacingLargeGapTest(java.lang.String, org.openqa.selenium.By, int, int, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setSpacingLargeGapTest" duration-ms="1563" started-at="2017-02-24T17:05:51Z" data-provider="Spacing Large Gap Test Data" finished-at="2017-02-24T17:05:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Large Gap spacing Element2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: centered-largegap2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[768]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSpacingLargeGapTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:05:53Z" finished-at="2017-02-24T17:05:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="947" started-at="2017-02-24T17:05:53Z" finished-at="2017-02-24T17:05:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setSpacingLargeGapTest(java.lang.String,org.openqa.selenium.By,int,int,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setSpacingLargeGapTest(java.lang.String, org.openqa.selenium.By, int, int, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setSpacingLargeGapTest" duration-ms="1683" started-at="2017-02-24T17:05:54Z" data-provider="Spacing Large Gap Test Data" finished-at="2017-02-24T17:05:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Large Gap spacing Element2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: centered-largegap2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1024]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSpacingLargeGapTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:05:56Z" finished-at="2017-02-24T17:05:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="1214" started-at="2017-02-24T17:05:56Z" finished-at="2017-02-24T17:05:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setSpacingLargeGapTest(java.lang.String,org.openqa.selenium.By,int,int,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setSpacingLargeGapTest(java.lang.String, org.openqa.selenium.By, int, int, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setSpacingLargeGapTest" duration-ms="1659" started-at="2017-02-24T17:05:57Z" data-provider="Spacing Large Gap Test Data" finished-at="2017-02-24T17:05:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Large Gap spacing Element2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: centered-largegap2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1140]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSpacingLargeGapTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="1173" started-at="2017-02-24T17:05:58Z" finished-at="2017-02-24T17:06:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setSpacingLargeGapTest(java.lang.String,org.openqa.selenium.By,int,int,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:05:58Z" finished-at="2017-02-24T17:05:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setSpacingLargeGapTest(java.lang.String, org.openqa.selenium.By, int, int, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setSpacingLargeGapTest" duration-ms="1702" started-at="2017-02-24T17:06:00Z" data-provider="Spacing Large Gap Test Data" finished-at="2017-02-24T17:06:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Large Gap spacing Element3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: centered-largegap3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[479]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSpacingLargeGapTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="1129" started-at="2017-02-24T17:06:01Z" finished-at="2017-02-24T17:06:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setSpacingLargeGapTest(java.lang.String,org.openqa.selenium.By,int,int,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:06:01Z" finished-at="2017-02-24T17:06:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setSpacingLargeGapTest(java.lang.String, org.openqa.selenium.By, int, int, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setSpacingLargeGapTest" duration-ms="1529" started-at="2017-02-24T17:06:02Z" data-provider="Spacing Large Gap Test Data" finished-at="2017-02-24T17:06:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Large Gap spacing Element3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: centered-largegap3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[480]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSpacingLargeGapTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="1034" started-at="2017-02-24T17:06:04Z" finished-at="2017-02-24T17:06:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setSpacingLargeGapTest(java.lang.String,org.openqa.selenium.By,int,int,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:06:04Z" finished-at="2017-02-24T17:06:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setSpacingLargeGapTest(java.lang.String, org.openqa.selenium.By, int, int, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setSpacingLargeGapTest" duration-ms="1603" started-at="2017-02-24T17:06:05Z" data-provider="Spacing Large Gap Test Data" finished-at="2017-02-24T17:06:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Large Gap spacing Element3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: centered-largegap3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[768]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSpacingLargeGapTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:06:07Z" finished-at="2017-02-24T17:06:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="1056" started-at="2017-02-24T17:06:07Z" finished-at="2017-02-24T17:06:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setSpacingLargeGapTest(java.lang.String,org.openqa.selenium.By,int,int,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setSpacingLargeGapTest(java.lang.String, org.openqa.selenium.By, int, int, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setSpacingLargeGapTest" duration-ms="1536" started-at="2017-02-24T17:06:08Z" data-provider="Spacing Large Gap Test Data" finished-at="2017-02-24T17:06:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Large Gap spacing Element3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: centered-largegap3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1024]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSpacingLargeGapTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="961" started-at="2017-02-24T17:06:09Z" finished-at="2017-02-24T17:06:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setSpacingLargeGapTest(java.lang.String,org.openqa.selenium.By,int,int,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:06:09Z" finished-at="2017-02-24T17:06:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setSpacingLargeGapTest(java.lang.String, org.openqa.selenium.By, int, int, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setSpacingLargeGapTest" duration-ms="1767" started-at="2017-02-24T17:06:10Z" data-provider="Spacing Large Gap Test Data" finished-at="2017-02-24T17:06:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Large Gap spacing Element3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: centered-largegap3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1140]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSpacingLargeGapTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:06:12Z" finished-at="2017-02-24T17:06:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="1048" started-at="2017-02-24T17:06:12Z" finished-at="2017-02-24T17:06:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setSpacingSmallGapTest(java.lang.String,org.openqa.selenium.By,int,int,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setSpacingSmallGapTest(java.lang.String, org.openqa.selenium.By, int, int, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setSpacingSmallGapTest" duration-ms="1611" started-at="2017-02-24T17:06:13Z" data-provider="Spacing Small Gap Test Data" finished-at="2017-02-24T17:06:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Small Gap spacing Element1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: centered-smallgap1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[479]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSpacingSmallGapTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="1073" started-at="2017-02-24T17:06:15Z" finished-at="2017-02-24T17:06:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setSpacingSmallGapTest(java.lang.String,org.openqa.selenium.By,int,int,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:06:15Z" finished-at="2017-02-24T17:06:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setSpacingSmallGapTest(java.lang.String, org.openqa.selenium.By, int, int, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setSpacingSmallGapTest" duration-ms="1590" started-at="2017-02-24T17:06:16Z" data-provider="Spacing Small Gap Test Data" finished-at="2017-02-24T17:06:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Small Gap spacing Element1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: centered-smallgap1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[480]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSpacingSmallGapTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="1097" started-at="2017-02-24T17:06:17Z" finished-at="2017-02-24T17:06:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setSpacingSmallGapTest(java.lang.String,org.openqa.selenium.By,int,int,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:06:17Z" finished-at="2017-02-24T17:06:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setSpacingSmallGapTest(java.lang.String, org.openqa.selenium.By, int, int, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setSpacingSmallGapTest" duration-ms="1642" started-at="2017-02-24T17:06:18Z" data-provider="Spacing Small Gap Test Data" finished-at="2017-02-24T17:06:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Small Gap spacing Element1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: centered-smallgap1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[768]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSpacingSmallGapTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:06:20Z" finished-at="2017-02-24T17:06:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="1089" started-at="2017-02-24T17:06:20Z" finished-at="2017-02-24T17:06:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setSpacingSmallGapTest(java.lang.String,org.openqa.selenium.By,int,int,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setSpacingSmallGapTest(java.lang.String, org.openqa.selenium.By, int, int, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setSpacingSmallGapTest" duration-ms="1520" started-at="2017-02-24T17:06:21Z" data-provider="Spacing Small Gap Test Data" finished-at="2017-02-24T17:06:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Small Gap spacing Element1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: centered-smallgap1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1024]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSpacingSmallGapTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="1139" started-at="2017-02-24T17:06:23Z" finished-at="2017-02-24T17:06:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setSpacingSmallGapTest(java.lang.String,org.openqa.selenium.By,int,int,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:06:23Z" finished-at="2017-02-24T17:06:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setSpacingSmallGapTest(java.lang.String, org.openqa.selenium.By, int, int, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setSpacingSmallGapTest" duration-ms="1658" started-at="2017-02-24T17:06:24Z" data-provider="Spacing Small Gap Test Data" finished-at="2017-02-24T17:06:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Small Gap spacing Element1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: centered-smallgap1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1140]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSpacingSmallGapTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:06:25Z" finished-at="2017-02-24T17:06:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="944" started-at="2017-02-24T17:06:25Z" finished-at="2017-02-24T17:06:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setSpacingSmallGapTest(java.lang.String,org.openqa.selenium.By,int,int,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setSpacingSmallGapTest(java.lang.String, org.openqa.selenium.By, int, int, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setSpacingSmallGapTest" duration-ms="1685" started-at="2017-02-24T17:06:26Z" data-provider="Spacing Small Gap Test Data" finished-at="2017-02-24T17:06:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Small Gap spacing Element2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: centered-smallgap2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[479]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSpacingSmallGapTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:06:28Z" finished-at="2017-02-24T17:06:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="1031" started-at="2017-02-24T17:06:28Z" finished-at="2017-02-24T17:06:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setSpacingSmallGapTest(java.lang.String,org.openqa.selenium.By,int,int,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setSpacingSmallGapTest(java.lang.String, org.openqa.selenium.By, int, int, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setSpacingSmallGapTest" duration-ms="1489" started-at="2017-02-24T17:06:29Z" data-provider="Spacing Small Gap Test Data" finished-at="2017-02-24T17:06:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Small Gap spacing Element2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: centered-smallgap2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[480]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSpacingSmallGapTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:06:31Z" finished-at="2017-02-24T17:06:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="1388" started-at="2017-02-24T17:06:31Z" finished-at="2017-02-24T17:06:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setSpacingSmallGapTest(java.lang.String,org.openqa.selenium.By,int,int,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setSpacingSmallGapTest(java.lang.String, org.openqa.selenium.By, int, int, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setSpacingSmallGapTest" duration-ms="1636" started-at="2017-02-24T17:06:32Z" data-provider="Spacing Small Gap Test Data" finished-at="2017-02-24T17:06:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Small Gap spacing Element2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: centered-smallgap2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[768]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSpacingSmallGapTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:06:34Z" finished-at="2017-02-24T17:06:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="1070" started-at="2017-02-24T17:06:34Z" finished-at="2017-02-24T17:06:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setSpacingSmallGapTest(java.lang.String,org.openqa.selenium.By,int,int,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setSpacingSmallGapTest(java.lang.String, org.openqa.selenium.By, int, int, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setSpacingSmallGapTest" duration-ms="1652" started-at="2017-02-24T17:06:35Z" data-provider="Spacing Small Gap Test Data" finished-at="2017-02-24T17:06:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Small Gap spacing Element2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: centered-smallgap2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1024]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSpacingSmallGapTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:06:36Z" finished-at="2017-02-24T17:06:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="1108" started-at="2017-02-24T17:06:36Z" finished-at="2017-02-24T17:06:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setSpacingSmallGapTest(java.lang.String,org.openqa.selenium.By,int,int,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setSpacingSmallGapTest(java.lang.String, org.openqa.selenium.By, int, int, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setSpacingSmallGapTest" duration-ms="1807" started-at="2017-02-24T17:06:37Z" data-provider="Spacing Small Gap Test Data" finished-at="2017-02-24T17:06:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Small Gap spacing Element2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: centered-smallgap2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1140]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSpacingSmallGapTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="1171" started-at="2017-02-24T17:06:39Z" finished-at="2017-02-24T17:06:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setSpacingSmallGapTest(java.lang.String,org.openqa.selenium.By,int,int,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:06:39Z" finished-at="2017-02-24T17:06:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setSpacingSmallGapTest(java.lang.String, org.openqa.selenium.By, int, int, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setSpacingSmallGapTest" duration-ms="1544" started-at="2017-02-24T17:06:40Z" data-provider="Spacing Small Gap Test Data" finished-at="2017-02-24T17:06:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Small Gap spacing Element3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: centered-smallgap3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[479]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSpacingSmallGapTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="996" started-at="2017-02-24T17:06:42Z" finished-at="2017-02-24T17:06:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setSpacingSmallGapTest(java.lang.String,org.openqa.selenium.By,int,int,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:06:42Z" finished-at="2017-02-24T17:06:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setSpacingSmallGapTest(java.lang.String, org.openqa.selenium.By, int, int, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setSpacingSmallGapTest" duration-ms="1679" started-at="2017-02-24T17:06:43Z" data-provider="Spacing Small Gap Test Data" finished-at="2017-02-24T17:06:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Small Gap spacing Element3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: centered-smallgap3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[480]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSpacingSmallGapTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:06:45Z" finished-at="2017-02-24T17:06:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="784" started-at="2017-02-24T17:06:45Z" finished-at="2017-02-24T17:06:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setSpacingSmallGapTest(java.lang.String,org.openqa.selenium.By,int,int,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setSpacingSmallGapTest(java.lang.String, org.openqa.selenium.By, int, int, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setSpacingSmallGapTest" duration-ms="1509" started-at="2017-02-24T17:06:45Z" data-provider="Spacing Small Gap Test Data" finished-at="2017-02-24T17:06:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Small Gap spacing Element3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: centered-smallgap3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[768]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSpacingSmallGapTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:06:47Z" finished-at="2017-02-24T17:06:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="1050" started-at="2017-02-24T17:06:47Z" finished-at="2017-02-24T17:06:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setSpacingSmallGapTest(java.lang.String,org.openqa.selenium.By,int,int,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setSpacingSmallGapTest(java.lang.String, org.openqa.selenium.By, int, int, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setSpacingSmallGapTest" duration-ms="1553" started-at="2017-02-24T17:06:48Z" data-provider="Spacing Small Gap Test Data" finished-at="2017-02-24T17:06:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Small Gap spacing Element3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: centered-smallgap3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1024]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSpacingSmallGapTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="beforeMethod" is-config="true" duration-ms="1125" started-at="2017-02-24T17:06:50Z" finished-at="2017-02-24T17:06:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.PresentationStrategyTest.setSpacingSmallGapTest(java.lang.String,org.openqa.selenium.By,int,int,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:06:50Z" finished-at="2017-02-24T17:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setSpacingSmallGapTest(java.lang.String, org.openqa.selenium.By, int, int, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="setSpacingSmallGapTest" duration-ms="1507" started-at="2017-02-24T17:06:51Z" data-provider="Spacing Small Gap Test Data" finished-at="2017-02-24T17:06:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Small Gap spacing Element3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: centered-smallgap3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1140]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSpacingSmallGapTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:06:52Z" finished-at="2017-02-24T17:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="tearDown(java.lang.String)[pri:0, instance:elementsTests.PresentationStrategyTest@6ebc05a6]" name="tearDown" is-config="true" duration-ms="1840" started-at="2017-02-24T17:06:52Z" finished-at="2017-02-24T17:06:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[off]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- elementsTests.PresentationStrategyTest -->
      <class name="elementsTests.FormsTest">
        <test-method status="PASS" signature="setUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.FormsTest@6e6c3152]" name="setUp" is-config="true" duration-ms="13557" started-at="2017-02-24T17:00:20Z" finished-at="2017-02-24T17:00:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sauce]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OS X 10.11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[54.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[off]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[iOS]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[iPhone 6 Plus]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[9.3]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[safari]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[1.5.3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="beforeClass(java.lang.String, java.lang.String)[pri:0, instance:elementsTests.FormsTest@6e6c3152]" name="beforeClass" is-config="true" duration-ms="1" started-at="2017-02-24T17:00:34Z" finished-at="2017-02-24T17:00:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sauce]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 6 Plus]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.FormsTest@6e6c3152]" name="beforeMethod" is-config="true" duration-ms="3157" started-at="2017-02-24T17:00:34Z" finished-at="2017-02-24T17:00:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.FormsTest.inputBoxTest(java.lang.String,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="inputBoxTest(java.lang.String, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String)[pri:0, instance:elementsTests.FormsTest@6e6c3152]" name="inputBoxTest" duration-ms="3517" started-at="2017-02-24T17:00:37Z" data-provider="First and Last Name Input Box Data" finished-at="2017-02-24T17:00:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[First Name]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: a]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[solid]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@24c1b2d2]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[8px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[[Ljava.lang.String;@7dc19a70]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[[Ljava.lang.String;@508dec2b]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[18px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inputBoxTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.FormsTest@6e6c3152]" name="beforeMethod" is-config="true" duration-ms="1269" started-at="2017-02-24T17:00:41Z" finished-at="2017-02-24T17:00:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.FormsTest.inputBoxTest(java.lang.String,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.FormsTest@6e6c3152]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:41Z" finished-at="2017-02-24T17:00:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="inputBoxTest(java.lang.String, org.openqa.selenium.By, java.lang.String, java.lang.String, [Ljava.lang.String;, java.lang.String, java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, java.lang.String)[pri:0, instance:elementsTests.FormsTest@6e6c3152]" name="inputBoxTest" duration-ms="3175" started-at="2017-02-24T17:00:42Z" data-provider="First and Last Name Input Box Data" finished-at="2017-02-24T17:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Last Name]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.id: b]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[solid]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@1e4f4a5c]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[8px]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[[Ljava.lang.String;@37313c65]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[[Ljava.lang.String;@465232e9]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[18px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inputBoxTest -->
        <test-method status="PASS" signature="tearDown(java.lang.String)[pri:0, instance:elementsTests.FormsTest@6e6c3152]" name="tearDown" is-config="true" duration-ms="1946" started-at="2017-02-24T17:00:45Z" finished-at="2017-02-24T17:00:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[off]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.FormsTest@6e6c3152]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:45Z" finished-at="2017-02-24T17:00:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- elementsTests.FormsTest -->
      <class name="origamiV2Tests.ContextualHelpTest">
        <test-method status="PASS" signature="setUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="setUp" is-config="true" duration-ms="11439" started-at="2017-02-24T17:01:20Z" finished-at="2017-02-24T17:01:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sauce]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OS X 10.11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[54.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[off]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[iOS]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[iPhone 6 Plus]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[9.3]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[safari]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[1.5.3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="contextualHelpTestBeforeClass(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="contextualHelpTestBeforeClass" is-config="true" duration-ms="2" started-at="2017-02-24T17:01:31Z" finished-at="2017-02-24T17:01:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sauce]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- contextualHelpTestBeforeClass -->
        <test-method status="PASS" signature="accordionContentTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="accordionContentTest" duration-ms="12910" started-at="2017-02-24T17:01:31Z" finished-at="2017-02-24T17:01:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- accordionContentTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:31Z" finished-at="2017-02-24T17:01:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ContextualHelpTest.accordionContentTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:44Z" finished-at="2017-02-24T17:01:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:44Z" finished-at="2017-02-24T17:01:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ContextualHelpTest.backToHelpTopicsTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="backToHelpTopicsTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="backToHelpTopicsTest" duration-ms="12320" started-at="2017-02-24T17:01:44Z" finished-at="2017-02-24T17:01:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backToHelpTopicsTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:01:57Z" finished-at="2017-02-24T17:01:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:57Z" finished-at="2017-02-24T17:01:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ContextualHelpTest.displayInstructorHelpTopicsTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="displayInstructorHelpTopicsTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="displayInstructorHelpTopicsTest" duration-ms="3236" started-at="2017-02-24T17:01:57Z" finished-at="2017-02-24T17:02:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- displayInstructorHelpTopicsTest -->
        <test-method status="PASS" signature="displayStudentHelpTopicsTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="displayStudentHelpTopicsTest" duration-ms="3350" started-at="2017-02-24T17:02:00Z" finished-at="2017-02-24T17:02:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- displayStudentHelpTopicsTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:00Z" finished-at="2017-02-24T17:02:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:00Z" finished-at="2017-02-24T17:02:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ContextualHelpTest.displayStudentHelpTopicsTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:03Z" finished-at="2017-02-24T17:02:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="focusBackwardTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="focusBackwardTest" duration-ms="19376" started-at="2017-02-24T17:02:03Z" finished-at="2017-02-24T17:02:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- focusBackwardTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:03Z" finished-at="2017-02-24T17:02:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ContextualHelpTest.focusBackwardTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:23Z" finished-at="2017-02-24T17:02:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:23Z" finished-at="2017-02-24T17:02:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ContextualHelpTest.focusForwardTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="focusForwardTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="focusForwardTest" duration-ms="8547" started-at="2017-02-24T17:02:23Z" finished-at="2017-02-24T17:02:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- focusForwardTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:31Z" finished-at="2017-02-24T17:02:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:02:31Z" finished-at="2017-02-24T17:02:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ContextualHelpTest.focusReturnOutsideContextualHelpDrawerTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="focusReturnOutsideContextualHelpDrawerTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="focusReturnOutsideContextualHelpDrawerTest" duration-ms="4211" started-at="2017-02-24T17:02:31Z" finished-at="2017-02-24T17:02:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- focusReturnOutsideContextualHelpDrawerTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:35Z" finished-at="2017-02-24T17:02:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="focusReturnWithinContextualHelpDrawerTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="focusReturnWithinContextualHelpDrawerTest" duration-ms="15815" started-at="2017-02-24T17:02:35Z" finished-at="2017-02-24T17:02:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- focusReturnWithinContextualHelpDrawerTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:35Z" finished-at="2017-02-24T17:02:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ContextualHelpTest.focusReturnWithinContextualHelpDrawerTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:51Z" finished-at="2017-02-24T17:02:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:51Z" finished-at="2017-02-24T17:02:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ContextualHelpTest.openAndThenRemoveHelpTopicsTest(java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="openAndThenRemoveHelpTopicsTest(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="openAndThenRemoveHelpTopicsTest" duration-ms="6362" started-at="2017-02-24T17:02:51Z" data-provider="ConxHelp Remove Help Topics Data" finished-at="2017-02-24T17:02:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[one]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA['testcontent/student/freetrial']]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openAndThenRemoveHelpTopicsTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:58Z" finished-at="2017-02-24T17:02:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:02:58Z" finished-at="2017-02-24T17:02:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ContextualHelpTest.openAndThenRemoveHelpTopicsTest(java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="openAndThenRemoveHelpTopicsTest(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="openAndThenRemoveHelpTopicsTest" duration-ms="8928" started-at="2017-02-24T17:02:58Z" data-provider="ConxHelp Remove Help Topics Data" finished-at="2017-02-24T17:03:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[two]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[['testcontent/student/freetrial','testcontent/contactsupport']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openAndThenRemoveHelpTopicsTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:03:06Z" finished-at="2017-02-24T17:03:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="openAndThenRemoveHelpTopicsTest(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="openAndThenRemoveHelpTopicsTest" duration-ms="14760" started-at="2017-02-24T17:03:06Z" data-provider="ConxHelp Remove Help Topics Data" finished-at="2017-02-24T17:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[all]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openAndThenRemoveHelpTopicsTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:03:06Z" finished-at="2017-02-24T17:03:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ContextualHelpTest.openAndThenRemoveHelpTopicsTest(java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="openSpecificHelpTopicTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="openSpecificHelpTopicTest" duration-ms="6995" started-at="2017-02-24T17:03:21Z" finished-at="2017-02-24T17:03:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openSpecificHelpTopicTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:03:21Z" finished-at="2017-02-24T17:03:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:03:21Z" finished-at="2017-02-24T17:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ContextualHelpTest.openSpecificHelpTopicTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:03:28Z" finished-at="2017-02-24T17:03:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:03:28Z" finished-at="2017-02-24T17:03:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ContextualHelpTest.openThruAppHeaderModeTest(java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="openThruAppHeaderModeTest(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="openThruAppHeaderModeTest" duration-ms="2257" started-at="2017-02-24T17:03:28Z" data-provider="ConxHelp with AppHeader Data" finished-at="2017-02-24T17:03:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[signed out]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[http://localhost:8000/src/main/java/origamiV2/fixtures/contextualHelp/app-header-SignOutMode.html]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openThruAppHeaderModeTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:03:30Z" finished-at="2017-02-24T17:03:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="openThruAppHeaderModeTest(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="openThruAppHeaderModeTest" duration-ms="2681" started-at="2017-02-24T17:03:30Z" data-provider="ConxHelp with AppHeader Data" finished-at="2017-02-24T17:03:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[basic]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[http://localhost:8000/src/main/java/origamiV2/fixtures/contextualHelp/app-header-BasicMode.html]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openThruAppHeaderModeTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:03:30Z" finished-at="2017-02-24T17:03:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ContextualHelpTest.openThruAppHeaderModeTest(java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:03:33Z" finished-at="2017-02-24T17:03:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:03:33Z" finished-at="2017-02-24T17:03:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ContextualHelpTest.openThruAppHeaderModeTest(java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="openThruAppHeaderModeTest(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="openThruAppHeaderModeTest" duration-ms="2472" started-at="2017-02-24T17:03:33Z" data-provider="ConxHelp with AppHeader Data" finished-at="2017-02-24T17:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[course]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[http://localhost:8000/src/main/java/origamiV2/fixtures/contextualHelp/app-header-CourseMode.html]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openThruAppHeaderModeTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:03:36Z" finished-at="2017-02-24T17:03:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:03:36Z" finished-at="2017-02-24T17:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ContextualHelpTest.openThruAppHeaderModeTest(java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="openThruAppHeaderModeTest(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="openThruAppHeaderModeTest" duration-ms="2251" started-at="2017-02-24T17:03:36Z" data-provider="ConxHelp with AppHeader Data" finished-at="2017-02-24T17:03:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[interation]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[http://localhost:8000/src/main/java/origamiV2/fixtures/contextualHelp/app-header-IntegMode.html]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openThruAppHeaderModeTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:03:38Z" finished-at="2017-02-24T17:03:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="styleForBackToHelpTopicsButtonTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="styleForBackToHelpTopicsButtonTest" duration-ms="5396" started-at="2017-02-24T17:03:38Z" finished-at="2017-02-24T17:03:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- styleForBackToHelpTopicsButtonTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:03:38Z" finished-at="2017-02-24T17:03:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ContextualHelpTest.styleForBackToHelpTopicsButtonTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:03:43Z" finished-at="2017-02-24T17:03:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:03:43Z" finished-at="2017-02-24T17:03:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ContextualHelpTest.styleForCloseHelpTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="styleForCloseHelpTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="styleForCloseHelpTest" duration-ms="2625" started-at="2017-02-24T17:03:43Z" finished-at="2017-02-24T17:03:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- styleForCloseHelpTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:03:46Z" finished-at="2017-02-24T17:03:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="styleForContextualHelpDrawerHeaderTest(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="styleForContextualHelpDrawerHeaderTest" duration-ms="4955" started-at="2017-02-24T17:03:46Z" data-provider="Contextual-Help Drawer Header wi/wo app-header test data" finished-at="2017-02-24T17:03:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[withAppHeader]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[http://localhost:8000/src/main/java/origamiV2/fixtures/contextualHelp/contextual-help.html]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- styleForContextualHelpDrawerHeaderTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:03:46Z" finished-at="2017-02-24T17:03:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ContextualHelpTest.styleForContextualHelpDrawerHeaderTest(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:03:51Z" finished-at="2017-02-24T17:03:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="styleForContextualHelpDrawerHeaderTest(java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="styleForContextualHelpDrawerHeaderTest" duration-ms="4923" started-at="2017-02-24T17:03:51Z" data-provider="Contextual-Help Drawer Header wi/wo app-header test data" finished-at="2017-02-24T17:03:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[withoutAppHeader]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[http://localhost:8000/src/main/java/origamiV2/fixtures/contextualHelp/contextual-help-woAppHeader.html]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- styleForContextualHelpDrawerHeaderTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:03:51Z" finished-at="2017-02-24T17:03:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ContextualHelpTest.styleForContextualHelpDrawerHeaderTest(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="styleForContextualHelpDrawerHeaderTopicHeadingTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="styleForContextualHelpDrawerHeaderTopicHeadingTest" duration-ms="3677" started-at="2017-02-24T17:03:56Z" finished-at="2017-02-24T17:03:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- styleForContextualHelpDrawerHeaderTopicHeadingTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:03:56Z" finished-at="2017-02-24T17:03:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ContextualHelpTest.styleForContextualHelpDrawerHeaderTopicHeadingTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:03:56Z" finished-at="2017-02-24T17:03:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:03:59Z" finished-at="2017-02-24T17:03:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:03:59Z" finished-at="2017-02-24T17:03:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ContextualHelpTest.styleForContextualHelpDrawerTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="styleForContextualHelpDrawerTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="styleForContextualHelpDrawerTest" duration-ms="2548" started-at="2017-02-24T17:03:59Z" finished-at="2017-02-24T17:04:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- styleForContextualHelpDrawerTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:04:02Z" finished-at="2017-02-24T17:04:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="styleForHelpTopicExcerptParaTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="styleForHelpTopicExcerptParaTest" duration-ms="3806" started-at="2017-02-24T17:04:02Z" finished-at="2017-02-24T17:04:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- styleForHelpTopicExcerptParaTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:04:02Z" finished-at="2017-02-24T17:04:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ContextualHelpTest.styleForHelpTopicExcerptParaTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:04:06Z" finished-at="2017-02-24T17:04:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:04:06Z" finished-at="2017-02-24T17:04:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ContextualHelpTest.styleForHelpTopicHeadingH3Test()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="styleForHelpTopicHeadingH3Test()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="styleForHelpTopicHeadingH3Test" duration-ms="3366" started-at="2017-02-24T17:04:06Z" finished-at="2017-02-24T17:04:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- styleForHelpTopicHeadingH3Test -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:04:09Z" finished-at="2017-02-24T17:04:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:04:09Z" finished-at="2017-02-24T17:04:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ContextualHelpTest.styleForHelpTopicLayoutTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="styleForHelpTopicLayoutTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="styleForHelpTopicLayoutTest" duration-ms="3803" started-at="2017-02-24T17:04:09Z" finished-at="2017-02-24T17:04:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- styleForHelpTopicLayoutTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:04:13Z" finished-at="2017-02-24T17:04:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:04:13Z" finished-at="2017-02-24T17:04:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ContextualHelpTest.styleForRoomHeaderTest(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="styleForRoomHeaderTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="styleForRoomHeaderTest" duration-ms="2645" started-at="2017-02-24T17:04:13Z" data-provider="Contextual-Help Drawer padding-top wi/wo app-header test data" finished-at="2017-02-24T17:04:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[withAppHeader]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[http://localhost:8000/src/main/java/origamiV2/fixtures/contextualHelp/contextual-help.html]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[48px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- styleForRoomHeaderTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:04:16Z" finished-at="2017-02-24T17:04:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:04:16Z" finished-at="2017-02-24T17:04:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ContextualHelpTest.styleForRoomHeaderTest(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="styleForRoomHeaderTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="styleForRoomHeaderTest" duration-ms="2670" started-at="2017-02-24T17:04:16Z" data-provider="Contextual-Help Drawer padding-top wi/wo app-header test data" finished-at="2017-02-24T17:04:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[withoutAppHeader]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[http://localhost:8000/src/main/java/origamiV2/fixtures/contextualHelp/contextual-help-woAppHeader.html]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- styleForRoomHeaderTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:04:18Z" finished-at="2017-02-24T17:04:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:04:18Z" finished-at="2017-02-24T17:04:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ContextualHelpTest.styleForSVGTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="styleForSVGTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="styleForSVGTest" duration-ms="3585" started-at="2017-02-24T17:04:18Z" data-provider="Verify SVG icon style test data" finished-at="2017-02-24T17:04:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[closeHelpIcon]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[14px]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[14px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[2px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- styleForSVGTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:04:22Z" finished-at="2017-02-24T17:04:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:04:22Z" finished-at="2017-02-24T17:04:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ContextualHelpTest.styleForSVGTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="styleForSVGTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="styleForSVGTest" duration-ms="3762" started-at="2017-02-24T17:04:22Z" data-provider="Verify SVG icon style test data" finished-at="2017-02-24T17:04:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[backToHelpTopicsIcon]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[14px]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[14px]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[2px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- styleForSVGTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:04:26Z" finished-at="2017-02-24T17:04:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="toggleContextualHelpDrawerTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="toggleContextualHelpDrawerTest" duration-ms="10311" started-at="2017-02-24T17:04:26Z" finished-at="2017-02-24T17:04:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toggleContextualHelpDrawerTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:04:26Z" finished-at="2017-02-24T17:04:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ContextualHelpTest.toggleContextualHelpDrawerTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:04:36Z" finished-at="2017-02-24T17:04:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:04:36Z" finished-at="2017-02-24T17:04:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ContextualHelpTest.trapFocusWithinDrawerInHelpTopicsDetailTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="trapFocusWithinDrawerInHelpTopicsDetailTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="trapFocusWithinDrawerInHelpTopicsDetailTest" duration-ms="19027" started-at="2017-02-24T17:04:36Z" finished-at="2017-02-24T17:04:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- trapFocusWithinDrawerInHelpTopicsDetailTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:04:55Z" finished-at="2017-02-24T17:04:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ContextualHelpTest.verifyContextualHelpDrawerTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyContextualHelpDrawerTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="verifyContextualHelpDrawerTest" duration-ms="7943" started-at="2017-02-24T17:04:55Z" finished-at="2017-02-24T17:05:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyContextualHelpDrawerTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:04:55Z" finished-at="2017-02-24T17:04:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:05:03Z" finished-at="2017-02-24T17:05:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ContextualHelpTest.verifyContextualVisibilityImmuneToSetLanguageTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:05:03Z" finished-at="2017-02-24T17:05:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="verifyContextualVisibilityImmuneToSetLanguageTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="verifyContextualVisibilityImmuneToSetLanguageTest" duration-ms="4094" started-at="2017-02-24T17:05:03Z" finished-at="2017-02-24T17:05:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyContextualVisibilityImmuneToSetLanguageTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:05:07Z" finished-at="2017-02-24T17:05:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:05:07Z" finished-at="2017-02-24T17:05:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ContextualHelpTest.verifyOneHelpTopicDetailsTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyOneHelpTopicDetailsTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="verifyOneHelpTopicDetailsTest" duration-ms="5439" started-at="2017-02-24T17:05:07Z" finished-at="2017-02-24T17:05:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyOneHelpTopicDetailsTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:05:12Z" finished-at="2017-02-24T17:05:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ContextualHelpTest.verifyOpenCloseStateTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:05:12Z" finished-at="2017-02-24T17:05:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="verifyOpenCloseStateTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="verifyOpenCloseStateTest" duration-ms="7990" started-at="2017-02-24T17:05:12Z" finished-at="2017-02-24T17:05:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyOpenCloseStateTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:05:20Z" finished-at="2017-02-24T17:05:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ContextualHelpTest.verifyXButtonTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyXButtonTest()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="verifyXButtonTest" duration-ms="8231" started-at="2017-02-24T17:05:20Z" finished-at="2017-02-24T17:05:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyXButtonTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:05:20Z" finished-at="2017-02-24T17:05:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:05:29Z" finished-at="2017-02-24T17:05:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="tearDown(java.lang.String)[pri:0, instance:origamiV2Tests.ContextualHelpTest@32709393]" name="tearDown" is-config="true" duration-ms="1063" started-at="2017-02-24T17:05:29Z" finished-at="2017-02-24T17:05:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[off]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- origamiV2Tests.ContextualHelpTest -->
      <class name="origamiV2Tests.ComponentArchetypeTest">
        <test-method status="PASS" signature="setUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.ComponentArchetypeTest@49fc609f]" name="setUp" is-config="true" duration-ms="14888" started-at="2017-02-24T17:02:27Z" finished-at="2017-02-24T17:02:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sauce]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OS X 10.11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[54.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[off]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[iOS]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[iPhone 6 Plus]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[9.3]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[safari]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[1.5.3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="componentArchetypeDemoTest(java.lang.String, org.openqa.selenium.By, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.ComponentArchetypeTest@49fc609f]" name="componentArchetypeDemoTest" duration-ms="5295" started-at="2017-02-24T17:02:42Z" data-provider="Component Archetype Demo Test Data" finished-at="2017-02-24T17:02:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[demoTarget1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.xpath: //div[@id='demo-target1']/div/button]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.xpath: //div[@id='demo-target1']/div/span/input]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[placeholder]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Hello world!]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- componentArchetypeDemoTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ComponentArchetypeTest@49fc609f]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:42Z" finished-at="2017-02-24T17:02:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ComponentArchetypeTest.componentArchetypeDemoTest(java.lang.String,org.openqa.selenium.By,org.openqa.selenium.By,java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="componentArchetypeDemoTest(java.lang.String, org.openqa.selenium.By, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:origamiV2Tests.ComponentArchetypeTest@49fc609f]" name="componentArchetypeDemoTest" duration-ms="1985" started-at="2017-02-24T17:02:47Z" data-provider="Component Archetype Demo Test Data" finished-at="2017-02-24T17:02:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[demoTarget2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[By.xpath: //div[@id='demo-target2']/div/button]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.xpath: //div[@id='demo-target2']/div/span/input]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[espace réservé]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Bonjour le monde!]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- componentArchetypeDemoTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:origamiV2Tests.ComponentArchetypeTest@49fc609f]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:47Z" finished-at="2017-02-24T17:02:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void origamiV2Tests.ComponentArchetypeTest.componentArchetypeDemoTest(java.lang.String,org.openqa.selenium.By,org.openqa.selenium.By,java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ComponentArchetypeTest@49fc609f]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:47Z" finished-at="2017-02-24T17:02:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:origamiV2Tests.ComponentArchetypeTest@49fc609f]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:02:49Z" finished-at="2017-02-24T17:02:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="tearDown(java.lang.String)[pri:0, instance:origamiV2Tests.ComponentArchetypeTest@49fc609f]" name="tearDown" is-config="true" duration-ms="1764" started-at="2017-02-24T17:02:49Z" finished-at="2017-02-24T17:02:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[off]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- origamiV2Tests.ComponentArchetypeTest -->
      <class name="elementsTests.GridTest">
        <test-method status="PASS" signature="setUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="setUp" is-config="true" duration-ms="20321" started-at="2017-02-24T16:57:39Z" finished-at="2017-02-24T16:57:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sauce]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[on]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OS X 10.11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[54.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[off]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[iOS]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[iPhone 6 Plus]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[9.3]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[safari]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[1.5.3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="beforeClass(java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeClass" is-config="true" duration-ms="0" started-at="2017-02-24T16:57:59Z" finished-at="2017-02-24T16:57:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sauce]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 6 Plus]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:57:59Z" finished-at="2017-02-24T16:57:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.containerForEqualColumnsTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="containerForEqualColumnsTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="containerForEqualColumnsTest" duration-ms="3535" started-at="2017-02-24T16:57:59Z" data-provider="Container1 Test Data" finished-at="2017-02-24T16:58:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[479]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: container1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[479px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- containerForEqualColumnsTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:58:03Z" finished-at="2017-02-24T16:58:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:03Z" finished-at="2017-02-24T16:58:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.containerForEqualColumnsTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="containerForEqualColumnsTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="containerForEqualColumnsTest" duration-ms="1931" started-at="2017-02-24T16:58:03Z" data-provider="Container1 Test Data" finished-at="2017-02-24T16:58:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[480]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: container1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[480px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- containerForEqualColumnsTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:05Z" finished-at="2017-02-24T16:58:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.containerForEqualColumnsTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:05Z" finished-at="2017-02-24T16:58:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="containerForEqualColumnsTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="containerForEqualColumnsTest" duration-ms="2053" started-at="2017-02-24T16:58:05Z" data-provider="Container1 Test Data" finished-at="2017-02-24T16:58:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[768]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: container1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[768px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- containerForEqualColumnsTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:07Z" finished-at="2017-02-24T16:58:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="containerForEqualColumnsTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="containerForEqualColumnsTest" duration-ms="1969" started-at="2017-02-24T16:58:07Z" data-provider="Container1 Test Data" finished-at="2017-02-24T16:58:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1024]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: container1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[1024px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- containerForEqualColumnsTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:07Z" finished-at="2017-02-24T16:58:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.containerForEqualColumnsTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:58:09Z" finished-at="2017-02-24T16:58:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="containerForEqualColumnsTest(int, int, org.openqa.selenium.By, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="containerForEqualColumnsTest" duration-ms="2127" started-at="2017-02-24T16:58:09Z" data-provider="Container1 Test Data" finished-at="2017-02-24T16:58:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1280]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[By.id: container1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[40px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[1140px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- containerForEqualColumnsTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:09Z" finished-at="2017-02-24T16:58:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.containerForEqualColumnsTest(int,int,org.openqa.selenium.By,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:11Z" finished-at="2017-02-24T16:58:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:58:11Z" finished-at="2017-02-24T16:58:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.lgSpanColumnWidthTest(java.lang.String,int,int,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="lgSpanColumnWidthTest(java.lang.String, int, int, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="lgSpanColumnWidthTest" duration-ms="1584" started-at="2017-02-24T16:58:11Z" data-provider="LG Span Column Width Test Data" finished-at="2017-02-24T16:58:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Column1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1024]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: cont3-col-1]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@5e3f861]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgSpanColumnWidthTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:58:12Z" finished-at="2017-02-24T16:58:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:12Z" finished-at="2017-02-24T16:58:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.lgSpanColumnWidthTest(java.lang.String,int,int,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="lgSpanColumnWidthTest(java.lang.String, int, int, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="lgSpanColumnWidthTest" duration-ms="1480" started-at="2017-02-24T16:58:12Z" data-provider="LG Span Column Width Test Data" finished-at="2017-02-24T16:58:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Column2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1024]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: cont3-col-2]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@2fb0623e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgSpanColumnWidthTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:58:14Z" finished-at="2017-02-24T16:58:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="lgSpanColumnWidthTest(java.lang.String, int, int, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="lgSpanColumnWidthTest" duration-ms="1557" started-at="2017-02-24T16:58:14Z" data-provider="LG Span Column Width Test Data" finished-at="2017-02-24T16:58:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Column3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1024]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: cont3-col-3]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@49b2a47d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgSpanColumnWidthTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:14Z" finished-at="2017-02-24T16:58:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.lgSpanColumnWidthTest(java.lang.String,int,int,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:15Z" finished-at="2017-02-24T16:58:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:58:15Z" finished-at="2017-02-24T16:58:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.lgSpanColumnWidthTest(java.lang.String,int,int,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="lgSpanColumnWidthTest(java.lang.String, int, int, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="lgSpanColumnWidthTest" duration-ms="6625" started-at="2017-02-24T16:58:15Z" data-provider="LG Span Column Width Test Data" finished-at="2017-02-24T16:58:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Column4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1024]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: cont3-col-4]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@5be1d0a4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgSpanColumnWidthTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:58:22Z" finished-at="2017-02-24T16:58:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.lgSpanColumnWidthTest(java.lang.String,int,int,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:22Z" finished-at="2017-02-24T16:58:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="lgSpanColumnWidthTest(java.lang.String, int, int, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="lgSpanColumnWidthTest" duration-ms="1594" started-at="2017-02-24T16:58:22Z" data-provider="LG Span Column Width Test Data" finished-at="2017-02-24T16:58:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Column5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1024]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: cont3-col-5]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@415b0b49]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgSpanColumnWidthTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:24Z" finished-at="2017-02-24T16:58:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:58:24Z" finished-at="2017-02-24T16:58:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.lgSpanColumnWidthTest(java.lang.String,int,int,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="lgSpanColumnWidthTest(java.lang.String, int, int, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="lgSpanColumnWidthTest" duration-ms="1469" started-at="2017-02-24T16:58:24Z" data-provider="LG Span Column Width Test Data" finished-at="2017-02-24T16:58:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Column6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1024]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: cont3-col-6]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@6d5620ce]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgSpanColumnWidthTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:25Z" finished-at="2017-02-24T16:58:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.lgSpanColumnWidthTest(java.lang.String,int,int,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:25Z" finished-at="2017-02-24T16:58:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="lgSpanColumnWidthTest(java.lang.String, int, int, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="lgSpanColumnWidthTest" duration-ms="1892" started-at="2017-02-24T16:58:25Z" data-provider="LG Span Column Width Test Data" finished-at="2017-02-24T16:58:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Column7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1024]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: cont3-col-7]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@311bf055]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgSpanColumnWidthTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:27Z" finished-at="2017-02-24T16:58:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="lgSpanColumnWidthTest(java.lang.String, int, int, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="lgSpanColumnWidthTest" duration-ms="1129" started-at="2017-02-24T16:58:27Z" data-provider="LG Span Column Width Test Data" finished-at="2017-02-24T16:58:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Column8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1024]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: cont3-col-8]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@642a7222]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgSpanColumnWidthTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:27Z" finished-at="2017-02-24T16:58:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.lgSpanColumnWidthTest(java.lang.String,int,int,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:28Z" finished-at="2017-02-24T16:58:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:58:28Z" finished-at="2017-02-24T16:58:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.lgSpanColumnWidthTest(java.lang.String,int,int,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="lgSpanColumnWidthTest(java.lang.String, int, int, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="lgSpanColumnWidthTest" duration-ms="2108" started-at="2017-02-24T16:58:28Z" data-provider="LG Span Column Width Test Data" finished-at="2017-02-24T16:58:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Column9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1024]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: cont3-col-9]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@7d322cad]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgSpanColumnWidthTest -->
        <test-method status="PASS" signature="lgSpanColumnWidthTest(java.lang.String, int, int, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="lgSpanColumnWidthTest" duration-ms="1086" started-at="2017-02-24T16:58:30Z" data-provider="LG Span Column Width Test Data" finished-at="2017-02-24T16:58:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Column10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1024]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: cont3-col-10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@21be3395]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgSpanColumnWidthTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:30Z" finished-at="2017-02-24T16:58:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.lgSpanColumnWidthTest(java.lang.String,int,int,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:30Z" finished-at="2017-02-24T16:58:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:31Z" finished-at="2017-02-24T16:58:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:58:31Z" finished-at="2017-02-24T16:58:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.lgSpanColumnWidthTest(java.lang.String,int,int,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="lgSpanColumnWidthTest(java.lang.String, int, int, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="lgSpanColumnWidthTest" duration-ms="1768" started-at="2017-02-24T16:58:31Z" data-provider="LG Span Column Width Test Data" finished-at="2017-02-24T16:58:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Column11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1024]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: cont3-col-11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@4f49f6af]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgSpanColumnWidthTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:58:33Z" finished-at="2017-02-24T16:58:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="lgSpanColumnWidthTest(java.lang.String, int, int, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="lgSpanColumnWidthTest" duration-ms="1202" started-at="2017-02-24T16:58:33Z" data-provider="LG Span Column Width Test Data" finished-at="2017-02-24T16:58:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Column12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1024]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: cont3-col-12]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@78452606]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lgSpanColumnWidthTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:33Z" finished-at="2017-02-24T16:58:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.lgSpanColumnWidthTest(java.lang.String,int,int,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:58:34Z" finished-at="2017-02-24T16:58:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:34Z" finished-at="2017-02-24T16:58:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.mdSpanColumnWidthTest(java.lang.String,int,int,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="mdSpanColumnWidthTest(java.lang.String, int, int, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="mdSpanColumnWidthTest" duration-ms="1877" started-at="2017-02-24T16:58:34Z" data-provider="MD Span Column Width Test Data" finished-at="2017-02-24T16:58:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Column1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[768]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: cont3-col-1]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@2ad48653]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdSpanColumnWidthTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:36Z" finished-at="2017-02-24T16:58:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:36Z" finished-at="2017-02-24T16:58:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.mdSpanColumnWidthTest(java.lang.String,int,int,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="mdSpanColumnWidthTest(java.lang.String, int, int, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="mdSpanColumnWidthTest" duration-ms="1766" started-at="2017-02-24T16:58:36Z" data-provider="MD Span Column Width Test Data" finished-at="2017-02-24T16:58:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Column2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[768]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: cont3-col-2]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@6bb4dd34]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdSpanColumnWidthTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:38Z" finished-at="2017-02-24T16:58:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.mdSpanColumnWidthTest(java.lang.String,int,int,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:38Z" finished-at="2017-02-24T16:58:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="mdSpanColumnWidthTest(java.lang.String, int, int, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="mdSpanColumnWidthTest" duration-ms="1211" started-at="2017-02-24T16:58:38Z" data-provider="MD Span Column Width Test Data" finished-at="2017-02-24T16:58:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Column3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[768]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: cont3-col-3]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@7d9f158f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdSpanColumnWidthTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:39Z" finished-at="2017-02-24T16:58:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.mdSpanColumnWidthTest(java.lang.String,int,int,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="mdSpanColumnWidthTest(java.lang.String, int, int, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="mdSpanColumnWidthTest" duration-ms="1190" started-at="2017-02-24T16:58:39Z" data-provider="MD Span Column Width Test Data" finished-at="2017-02-24T16:58:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Column4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[768]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: cont3-col-4]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@45efd90f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdSpanColumnWidthTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:39Z" finished-at="2017-02-24T16:58:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:40Z" finished-at="2017-02-24T16:58:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="mdSpanColumnWidthTest(java.lang.String, int, int, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="mdSpanColumnWidthTest" duration-ms="1761" started-at="2017-02-24T16:58:40Z" data-provider="MD Span Column Width Test Data" finished-at="2017-02-24T16:58:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Column5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[768]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: cont3-col-5]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@4b8729ff]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdSpanColumnWidthTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:40Z" finished-at="2017-02-24T16:58:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.mdSpanColumnWidthTest(java.lang.String,int,int,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="mdSpanColumnWidthTest(java.lang.String, int, int, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="mdSpanColumnWidthTest" duration-ms="1149" started-at="2017-02-24T16:58:42Z" data-provider="MD Span Column Width Test Data" finished-at="2017-02-24T16:58:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Column6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[768]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: cont3-col-6]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@61710c6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdSpanColumnWidthTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:42Z" finished-at="2017-02-24T16:58:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:42Z" finished-at="2017-02-24T16:58:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.mdSpanColumnWidthTest(java.lang.String,int,int,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:43Z" finished-at="2017-02-24T16:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:58:43Z" finished-at="2017-02-24T16:58:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.mdSpanColumnWidthTest(java.lang.String,int,int,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="mdSpanColumnWidthTest(java.lang.String, int, int, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="mdSpanColumnWidthTest" duration-ms="1569" started-at="2017-02-24T16:58:43Z" data-provider="MD Span Column Width Test Data" finished-at="2017-02-24T16:58:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Column7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[768]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: cont3-col-7]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@3214ee6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdSpanColumnWidthTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:45Z" finished-at="2017-02-24T16:58:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:58:45Z" finished-at="2017-02-24T16:58:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.mdSpanColumnWidthTest(java.lang.String,int,int,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="mdSpanColumnWidthTest(java.lang.String, int, int, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="mdSpanColumnWidthTest" duration-ms="1248" started-at="2017-02-24T16:58:45Z" data-provider="MD Span Column Width Test Data" finished-at="2017-02-24T16:58:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Column8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[768]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: cont3-col-8]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@383dc82c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdSpanColumnWidthTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:58:46Z" finished-at="2017-02-24T16:58:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="mdSpanColumnWidthTest(java.lang.String, int, int, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="mdSpanColumnWidthTest" duration-ms="1368" started-at="2017-02-24T16:58:46Z" data-provider="MD Span Column Width Test Data" finished-at="2017-02-24T16:58:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Column9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[768]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: cont3-col-9]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@4a07d605]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdSpanColumnWidthTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:46Z" finished-at="2017-02-24T16:58:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.mdSpanColumnWidthTest(java.lang.String,int,int,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="mdSpanColumnWidthTest(java.lang.String, int, int, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="mdSpanColumnWidthTest" duration-ms="1157" started-at="2017-02-24T16:58:47Z" data-provider="MD Span Column Width Test Data" finished-at="2017-02-24T16:58:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Column10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[768]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: cont3-col-10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@74287ea3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdSpanColumnWidthTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:47Z" finished-at="2017-02-24T16:58:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.mdSpanColumnWidthTest(java.lang.String,int,int,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:47Z" finished-at="2017-02-24T16:58:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:58:48Z" finished-at="2017-02-24T16:58:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:49Z" finished-at="2017-02-24T16:58:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.mdSpanColumnWidthTest(java.lang.String,int,int,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="mdSpanColumnWidthTest(java.lang.String, int, int, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="mdSpanColumnWidthTest" duration-ms="1235" started-at="2017-02-24T16:58:49Z" data-provider="MD Span Column Width Test Data" finished-at="2017-02-24T16:58:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Column11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[768]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: cont3-col-11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@7d7758be]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdSpanColumnWidthTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:58:50Z" finished-at="2017-02-24T16:58:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="mdSpanColumnWidthTest(java.lang.String, int, int, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="mdSpanColumnWidthTest" duration-ms="1171" started-at="2017-02-24T16:58:50Z" data-provider="MD Span Column Width Test Data" finished-at="2017-02-24T16:58:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Column12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[768]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: cont3-col-12]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@2bdd8394]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdSpanColumnWidthTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:50Z" finished-at="2017-02-24T16:58:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.mdSpanColumnWidthTest(java.lang.String,int,int,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:51Z" finished-at="2017-02-24T16:58:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:51Z" finished-at="2017-02-24T16:58:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.rowTest(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="rowTest(java.lang.String, int, int, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="rowTest" duration-ms="1363" started-at="2017-02-24T16:58:51Z" data-provider="Row Test Data" finished-at="2017-02-24T16:58:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Container1-Row]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[479]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[cont1-row]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-5px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[-5px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- rowTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:58:52Z" finished-at="2017-02-24T16:58:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:52Z" finished-at="2017-02-24T16:58:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.rowTest(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="rowTest(java.lang.String, int, int, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="rowTest" duration-ms="1310" started-at="2017-02-24T16:58:52Z" data-provider="Row Test Data" finished-at="2017-02-24T16:58:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Container2-Row]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[479]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[cont2-row]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-5px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[-5px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- rowTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:54Z" finished-at="2017-02-24T16:58:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.rowTest(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:58:54Z" finished-at="2017-02-24T16:58:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="rowTest(java.lang.String, int, int, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="rowTest" duration-ms="7079" started-at="2017-02-24T16:58:54Z" data-provider="Row Test Data" finished-at="2017-02-24T16:59:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Container3-Row]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[479]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[cont3-row]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-5px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[-5px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- rowTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:01Z" finished-at="2017-02-24T16:59:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="rowTest(java.lang.String, int, int, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="rowTest" duration-ms="1340" started-at="2017-02-24T16:59:01Z" data-provider="Row Test Data" finished-at="2017-02-24T16:59:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Container1-Row]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[480]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[cont1-row]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-10px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[-10px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- rowTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:01Z" finished-at="2017-02-24T16:59:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.rowTest(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:02Z" finished-at="2017-02-24T16:59:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="rowTest(java.lang.String, int, int, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="rowTest" duration-ms="1355" started-at="2017-02-24T16:59:02Z" data-provider="Row Test Data" finished-at="2017-02-24T16:59:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Container2-Row]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[480]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[cont2-row]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-10px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[-10px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- rowTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:02Z" finished-at="2017-02-24T16:59:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.rowTest(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:03Z" finished-at="2017-02-24T16:59:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:59:03Z" finished-at="2017-02-24T16:59:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.rowTest(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="rowTest(java.lang.String, int, int, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="rowTest" duration-ms="6934" started-at="2017-02-24T16:59:03Z" data-provider="Row Test Data" finished-at="2017-02-24T16:59:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Container3-Row]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[480]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[cont3-row]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-10px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[-10px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- rowTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:10Z" finished-at="2017-02-24T16:59:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:10Z" finished-at="2017-02-24T16:59:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.rowTest(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="rowTest(java.lang.String, int, int, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="rowTest" duration-ms="1554" started-at="2017-02-24T16:59:10Z" data-provider="Row Test Data" finished-at="2017-02-24T16:59:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Container1-Row]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[768]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[cont1-row]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- rowTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:59:12Z" finished-at="2017-02-24T16:59:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="rowTest(java.lang.String, int, int, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="rowTest" duration-ms="1452" started-at="2017-02-24T16:59:12Z" data-provider="Row Test Data" finished-at="2017-02-24T16:59:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Container2-Row]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[768]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[cont2-row]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- rowTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:12Z" finished-at="2017-02-24T16:59:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.rowTest(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:13Z" finished-at="2017-02-24T16:59:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.rowTest(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="rowTest(java.lang.String, int, int, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="rowTest" duration-ms="6438" started-at="2017-02-24T16:59:13Z" data-provider="Row Test Data" finished-at="2017-02-24T16:59:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Container3-Row]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[768]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[cont3-row]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- rowTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:13Z" finished-at="2017-02-24T16:59:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:20Z" finished-at="2017-02-24T16:59:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:20Z" finished-at="2017-02-24T16:59:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.rowTest(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="rowTest(java.lang.String, int, int, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="rowTest" duration-ms="1533" started-at="2017-02-24T16:59:20Z" data-provider="Row Test Data" finished-at="2017-02-24T16:59:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Container1-Row]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1024]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[cont1-row]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- rowTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:59:21Z" finished-at="2017-02-24T16:59:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.rowTest(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:21Z" finished-at="2017-02-24T16:59:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="rowTest(java.lang.String, int, int, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="rowTest" duration-ms="1413" started-at="2017-02-24T16:59:21Z" data-provider="Row Test Data" finished-at="2017-02-24T16:59:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Container2-Row]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1024]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[cont2-row]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- rowTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:59:23Z" finished-at="2017-02-24T16:59:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:23Z" finished-at="2017-02-24T16:59:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.rowTest(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="rowTest(java.lang.String, int, int, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="rowTest" duration-ms="6455" started-at="2017-02-24T16:59:23Z" data-provider="Row Test Data" finished-at="2017-02-24T16:59:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Container3-Row]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1024]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[cont3-row]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- rowTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:59:29Z" finished-at="2017-02-24T16:59:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.rowTest(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:29Z" finished-at="2017-02-24T16:59:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="rowTest(java.lang.String, int, int, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="rowTest" duration-ms="1505" started-at="2017-02-24T16:59:29Z" data-provider="Row Test Data" finished-at="2017-02-24T16:59:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Container1-Row]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1280]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[cont1-row]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- rowTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:31Z" finished-at="2017-02-24T16:59:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:31Z" finished-at="2017-02-24T16:59:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.rowTest(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="rowTest(java.lang.String, int, int, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="rowTest" duration-ms="1403" started-at="2017-02-24T16:59:31Z" data-provider="Row Test Data" finished-at="2017-02-24T16:59:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Container2-Row]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1280]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[cont2-row]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- rowTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:59:32Z" finished-at="2017-02-24T16:59:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.rowTest(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:32Z" finished-at="2017-02-24T16:59:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="rowTest(java.lang.String, int, int, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="rowTest" duration-ms="6876" started-at="2017-02-24T16:59:32Z" data-provider="Row Test Data" finished-at="2017-02-24T16:59:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Container3-Row]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1280]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[cont3-row]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[-20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- rowTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:59:39Z" finished-at="2017-02-24T16:59:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:39Z" finished-at="2017-02-24T16:59:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.smSpanColumnWidthTest(java.lang.String,int,int,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="smSpanColumnWidthTest(java.lang.String, int, int, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="smSpanColumnWidthTest" duration-ms="1133" started-at="2017-02-24T16:59:39Z" data-provider="SM Span Column Width Test Data" finished-at="2017-02-24T16:59:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Column1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[480]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: cont3-col-1]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@7d94beb9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smSpanColumnWidthTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:59:40Z" finished-at="2017-02-24T16:59:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.smSpanColumnWidthTest(java.lang.String,int,int,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:40Z" finished-at="2017-02-24T16:59:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="smSpanColumnWidthTest(java.lang.String, int, int, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="smSpanColumnWidthTest" duration-ms="1086" started-at="2017-02-24T16:59:40Z" data-provider="SM Span Column Width Test Data" finished-at="2017-02-24T16:59:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Column2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[480]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: cont3-col-2]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@560348e6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smSpanColumnWidthTest -->
        <test-method status="PASS" signature="smSpanColumnWidthTest(java.lang.String, int, int, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="smSpanColumnWidthTest" duration-ms="1075" started-at="2017-02-24T16:59:41Z" data-provider="SM Span Column Width Test Data" finished-at="2017-02-24T16:59:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Column3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[480]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: cont3-col-3]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@1df8b5b8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smSpanColumnWidthTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:41Z" finished-at="2017-02-24T16:59:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:41Z" finished-at="2017-02-24T16:59:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.smSpanColumnWidthTest(java.lang.String,int,int,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:42Z" finished-at="2017-02-24T16:59:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="smSpanColumnWidthTest(java.lang.String, int, int, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="smSpanColumnWidthTest" duration-ms="1264" started-at="2017-02-24T16:59:42Z" data-provider="SM Span Column Width Test Data" finished-at="2017-02-24T16:59:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Column4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[480]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: cont3-col-4]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@23202fce]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smSpanColumnWidthTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:42Z" finished-at="2017-02-24T16:59:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.smSpanColumnWidthTest(java.lang.String,int,int,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="smSpanColumnWidthTest(java.lang.String, int, int, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="smSpanColumnWidthTest" duration-ms="1042" started-at="2017-02-24T16:59:43Z" data-provider="SM Span Column Width Test Data" finished-at="2017-02-24T16:59:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Column5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[480]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: cont3-col-5]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@7b993c65]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smSpanColumnWidthTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:43Z" finished-at="2017-02-24T16:59:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:43Z" finished-at="2017-02-24T16:59:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.smSpanColumnWidthTest(java.lang.String,int,int,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:45Z" finished-at="2017-02-24T16:59:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="smSpanColumnWidthTest(java.lang.String, int, int, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="smSpanColumnWidthTest" duration-ms="3416" started-at="2017-02-24T16:59:45Z" data-provider="SM Span Column Width Test Data" finished-at="2017-02-24T16:59:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Column6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[480]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: cont3-col-6]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@37911f88]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smSpanColumnWidthTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:45Z" finished-at="2017-02-24T16:59:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.smSpanColumnWidthTest(java.lang.String,int,int,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:48Z" finished-at="2017-02-24T16:59:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="smSpanColumnWidthTest(java.lang.String, int, int, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="smSpanColumnWidthTest" duration-ms="1233" started-at="2017-02-24T16:59:48Z" data-provider="SM Span Column Width Test Data" finished-at="2017-02-24T16:59:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Column7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[480]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: cont3-col-7]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@6f1c29b7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smSpanColumnWidthTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:48Z" finished-at="2017-02-24T16:59:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.smSpanColumnWidthTest(java.lang.String,int,int,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:49Z" finished-at="2017-02-24T16:59:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="smSpanColumnWidthTest(java.lang.String, int, int, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="smSpanColumnWidthTest" duration-ms="1021" started-at="2017-02-24T16:59:49Z" data-provider="SM Span Column Width Test Data" finished-at="2017-02-24T16:59:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Column8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[480]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: cont3-col-8]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@4d6025c5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smSpanColumnWidthTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:49Z" finished-at="2017-02-24T16:59:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.smSpanColumnWidthTest(java.lang.String,int,int,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:59:50Z" finished-at="2017-02-24T16:59:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="smSpanColumnWidthTest(java.lang.String, int, int, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="smSpanColumnWidthTest" duration-ms="1087" started-at="2017-02-24T16:59:50Z" data-provider="SM Span Column Width Test Data" finished-at="2017-02-24T16:59:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Column9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[480]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: cont3-col-9]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@7f284218]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smSpanColumnWidthTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:50Z" finished-at="2017-02-24T16:59:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.smSpanColumnWidthTest(java.lang.String,int,int,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:59:51Z" finished-at="2017-02-24T16:59:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:51Z" finished-at="2017-02-24T16:59:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.smSpanColumnWidthTest(java.lang.String,int,int,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="smSpanColumnWidthTest(java.lang.String, int, int, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="smSpanColumnWidthTest" duration-ms="1135" started-at="2017-02-24T16:59:51Z" data-provider="SM Span Column Width Test Data" finished-at="2017-02-24T16:59:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Column10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[480]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: cont3-col-10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@407a7f2a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smSpanColumnWidthTest -->
        <test-method status="PASS" signature="smSpanColumnWidthTest(java.lang.String, int, int, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="smSpanColumnWidthTest" duration-ms="1133" started-at="2017-02-24T16:59:52Z" data-provider="SM Span Column Width Test Data" finished-at="2017-02-24T16:59:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Column11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[480]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: cont3-col-11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@4ea5b703]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smSpanColumnWidthTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:52Z" finished-at="2017-02-24T16:59:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.smSpanColumnWidthTest(java.lang.String,int,int,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:52Z" finished-at="2017-02-24T16:59:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:59:54Z" finished-at="2017-02-24T16:59:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.smSpanColumnWidthTest(java.lang.String,int,int,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:54Z" finished-at="2017-02-24T16:59:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="smSpanColumnWidthTest(java.lang.String, int, int, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="smSpanColumnWidthTest" duration-ms="1175" started-at="2017-02-24T16:59:54Z" data-provider="SM Span Column Width Test Data" finished-at="2017-02-24T16:59:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Column12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[480]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: cont3-col-12]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@2a7ed1f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smSpanColumnWidthTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T16:59:55Z" finished-at="2017-02-24T16:59:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="spanEqualColumnsTest(int, int, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="spanEqualColumnsTest" duration-ms="6842" started-at="2017-02-24T16:59:55Z" data-provider="Span Equal Columns Test Data" finished-at="2017-02-24T17:00:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[479]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[cont1-col]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[5px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[5px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- spanEqualColumnsTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T16:59:55Z" finished-at="2017-02-24T16:59:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.spanEqualColumnsTest(int,int,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:00:02Z" finished-at="2017-02-24T17:00:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="spanEqualColumnsTest(int, int, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="spanEqualColumnsTest" duration-ms="6718" started-at="2017-02-24T17:00:02Z" data-provider="Span Equal Columns Test Data" finished-at="2017-02-24T17:00:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[480]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[cont1-col]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- spanEqualColumnsTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:02Z" finished-at="2017-02-24T17:00:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.spanEqualColumnsTest(int,int,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:00:08Z" finished-at="2017-02-24T17:00:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:08Z" finished-at="2017-02-24T17:00:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.spanEqualColumnsTest(int,int,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="spanEqualColumnsTest(int, int, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="spanEqualColumnsTest" duration-ms="6526" started-at="2017-02-24T17:00:08Z" data-provider="Span Equal Columns Test Data" finished-at="2017-02-24T17:00:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[768]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[cont1-col]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- spanEqualColumnsTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:00:15Z" finished-at="2017-02-24T17:00:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="spanEqualColumnsTest(int, int, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="spanEqualColumnsTest" duration-ms="6668" started-at="2017-02-24T17:00:15Z" data-provider="Span Equal Columns Test Data" finished-at="2017-02-24T17:00:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1024]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[cont1-col]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- spanEqualColumnsTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:15Z" finished-at="2017-02-24T17:00:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.spanEqualColumnsTest(int,int,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:00:21Z" finished-at="2017-02-24T17:00:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:00:22Z" finished-at="2017-02-24T17:00:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.spanEqualColumnsTest(int,int,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="spanEqualColumnsTest(int, int, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="spanEqualColumnsTest" duration-ms="6730" started-at="2017-02-24T17:00:22Z" data-provider="Span Equal Columns Test Data" finished-at="2017-02-24T17:00:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1280]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[cont1-col]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- spanEqualColumnsTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:00:28Z" finished-at="2017-02-24T17:00:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="spanMultipleColumnsTest(java.lang.String, int, int, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="spanMultipleColumnsTest" duration-ms="1474" started-at="2017-02-24T17:00:28Z" data-provider="Span Multiple Columns Test Data" finished-at="2017-02-24T17:00:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[column1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[479]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: cont2-col1]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[5px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[5px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- spanMultipleColumnsTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:28Z" finished-at="2017-02-24T17:00:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.spanMultipleColumnsTest(java.lang.String,int,int,org.openqa.selenium.By,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:30Z" finished-at="2017-02-24T17:00:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:30Z" finished-at="2017-02-24T17:00:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.spanMultipleColumnsTest(java.lang.String,int,int,org.openqa.selenium.By,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="spanMultipleColumnsTest(java.lang.String, int, int, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="spanMultipleColumnsTest" duration-ms="1320" started-at="2017-02-24T17:00:30Z" data-provider="Span Multiple Columns Test Data" finished-at="2017-02-24T17:00:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[column2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[479]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: cont2-col2]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[5px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[5px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- spanMultipleColumnsTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:00:31Z" finished-at="2017-02-24T17:00:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="spanMultipleColumnsTest(java.lang.String, int, int, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="spanMultipleColumnsTest" duration-ms="1499" started-at="2017-02-24T17:00:31Z" data-provider="Span Multiple Columns Test Data" finished-at="2017-02-24T17:00:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[column3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[479]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: cont2-col3]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[5px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[5px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- spanMultipleColumnsTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:31Z" finished-at="2017-02-24T17:00:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.spanMultipleColumnsTest(java.lang.String,int,int,org.openqa.selenium.By,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:00:33Z" finished-at="2017-02-24T17:00:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:33Z" finished-at="2017-02-24T17:00:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.spanMultipleColumnsTest(java.lang.String,int,int,org.openqa.selenium.By,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="spanMultipleColumnsTest(java.lang.String, int, int, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="spanMultipleColumnsTest" duration-ms="1266" started-at="2017-02-24T17:00:33Z" data-provider="Span Multiple Columns Test Data" finished-at="2017-02-24T17:00:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[column1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[480]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: cont2-col1]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- spanMultipleColumnsTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:34Z" finished-at="2017-02-24T17:00:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:34Z" finished-at="2017-02-24T17:00:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.spanMultipleColumnsTest(java.lang.String,int,int,org.openqa.selenium.By,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="spanMultipleColumnsTest(java.lang.String, int, int, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="spanMultipleColumnsTest" duration-ms="1451" started-at="2017-02-24T17:00:34Z" data-provider="Span Multiple Columns Test Data" finished-at="2017-02-24T17:00:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[column2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[480]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: cont2-col2]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- spanMultipleColumnsTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:00:35Z" finished-at="2017-02-24T17:00:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="spanMultipleColumnsTest(java.lang.String, int, int, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="spanMultipleColumnsTest" duration-ms="1428" started-at="2017-02-24T17:00:35Z" data-provider="Span Multiple Columns Test Data" finished-at="2017-02-24T17:00:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[column3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[480]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: cont2-col3]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[10px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- spanMultipleColumnsTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:35Z" finished-at="2017-02-24T17:00:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.spanMultipleColumnsTest(java.lang.String,int,int,org.openqa.selenium.By,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:37Z" finished-at="2017-02-24T17:00:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.spanMultipleColumnsTest(java.lang.String,int,int,org.openqa.selenium.By,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="spanMultipleColumnsTest(java.lang.String, int, int, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="spanMultipleColumnsTest" duration-ms="1475" started-at="2017-02-24T17:00:37Z" data-provider="Span Multiple Columns Test Data" finished-at="2017-02-24T17:00:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[column1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[768]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: cont2-col1]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- spanMultipleColumnsTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:37Z" finished-at="2017-02-24T17:00:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="spanMultipleColumnsTest(java.lang.String, int, int, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="spanMultipleColumnsTest" duration-ms="1402" started-at="2017-02-24T17:00:38Z" data-provider="Span Multiple Columns Test Data" finished-at="2017-02-24T17:00:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[column2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[768]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: cont2-col2]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- spanMultipleColumnsTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:38Z" finished-at="2017-02-24T17:00:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.spanMultipleColumnsTest(java.lang.String,int,int,org.openqa.selenium.By,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:38Z" finished-at="2017-02-24T17:00:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:00:40Z" finished-at="2017-02-24T17:00:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="spanMultipleColumnsTest(java.lang.String, int, int, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="spanMultipleColumnsTest" duration-ms="1307" started-at="2017-02-24T17:00:40Z" data-provider="Span Multiple Columns Test Data" finished-at="2017-02-24T17:00:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[column3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[768]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: cont2-col3]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- spanMultipleColumnsTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:40Z" finished-at="2017-02-24T17:00:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.spanMultipleColumnsTest(java.lang.String,int,int,org.openqa.selenium.By,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:00:41Z" finished-at="2017-02-24T17:00:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="spanMultipleColumnsTest(java.lang.String, int, int, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="spanMultipleColumnsTest" duration-ms="1480" started-at="2017-02-24T17:00:41Z" data-provider="Span Multiple Columns Test Data" finished-at="2017-02-24T17:00:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[column1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1024]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: cont2-col1]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- spanMultipleColumnsTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:41Z" finished-at="2017-02-24T17:00:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.spanMultipleColumnsTest(java.lang.String,int,int,org.openqa.selenium.By,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:42Z" finished-at="2017-02-24T17:00:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="spanMultipleColumnsTest(java.lang.String, int, int, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="spanMultipleColumnsTest" duration-ms="1452" started-at="2017-02-24T17:00:42Z" data-provider="Span Multiple Columns Test Data" finished-at="2017-02-24T17:00:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[column2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1024]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: cont2-col2]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- spanMultipleColumnsTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:42Z" finished-at="2017-02-24T17:00:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.spanMultipleColumnsTest(java.lang.String,int,int,org.openqa.selenium.By,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:44Z" finished-at="2017-02-24T17:00:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="spanMultipleColumnsTest(java.lang.String, int, int, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="spanMultipleColumnsTest" duration-ms="1483" started-at="2017-02-24T17:00:44Z" data-provider="Span Multiple Columns Test Data" finished-at="2017-02-24T17:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[column3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1024]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: cont2-col3]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- spanMultipleColumnsTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:44Z" finished-at="2017-02-24T17:00:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.spanMultipleColumnsTest(java.lang.String,int,int,org.openqa.selenium.By,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:45Z" finished-at="2017-02-24T17:00:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:00:45Z" finished-at="2017-02-24T17:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.spanMultipleColumnsTest(java.lang.String,int,int,org.openqa.selenium.By,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="spanMultipleColumnsTest(java.lang.String, int, int, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="spanMultipleColumnsTest" duration-ms="1509" started-at="2017-02-24T17:00:45Z" data-provider="Span Multiple Columns Test Data" finished-at="2017-02-24T17:00:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[column1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1280]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: cont2-col1]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- spanMultipleColumnsTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:00:47Z" finished-at="2017-02-24T17:00:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.spanMultipleColumnsTest(java.lang.String,int,int,org.openqa.selenium.By,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:47Z" finished-at="2017-02-24T17:00:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="spanMultipleColumnsTest(java.lang.String, int, int, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="spanMultipleColumnsTest" duration-ms="1392" started-at="2017-02-24T17:00:47Z" data-provider="Span Multiple Columns Test Data" finished-at="2017-02-24T17:00:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[column2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1280]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: cont2-col2]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- spanMultipleColumnsTest -->
        <test-method status="PASS" signature="spanMultipleColumnsTest(java.lang.String, int, int, org.openqa.selenium.By, java.lang.String, java.lang.String)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="spanMultipleColumnsTest" duration-ms="2531" started-at="2017-02-24T17:00:48Z" data-provider="Span Multiple Columns Test Data" finished-at="2017-02-24T17:00:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[column3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1280]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: cont2-col3]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[20px]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- spanMultipleColumnsTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:48Z" finished-at="2017-02-24T17:00:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:48Z" finished-at="2017-02-24T17:00:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.spanMultipleColumnsTest(java.lang.String,int,int,org.openqa.selenium.By,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:00:51Z" finished-at="2017-02-24T17:00:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:51Z" finished-at="2017-02-24T17:00:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xlgSpanColumnWidthTest(java.lang.String,int,int,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xlgSpanColumnWidthTest(java.lang.String, int, int, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="xlgSpanColumnWidthTest" duration-ms="1138" started-at="2017-02-24T17:00:51Z" data-provider="XLG Span Column Width Test Data" finished-at="2017-02-24T17:00:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Column1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1280]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: cont3-col-1]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@27d5a580]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlgSpanColumnWidthTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:00:52Z" finished-at="2017-02-24T17:00:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:52Z" finished-at="2017-02-24T17:00:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xlgSpanColumnWidthTest(java.lang.String,int,int,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xlgSpanColumnWidthTest(java.lang.String, int, int, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="xlgSpanColumnWidthTest" duration-ms="1219" started-at="2017-02-24T17:00:52Z" data-provider="XLG Span Column Width Test Data" finished-at="2017-02-24T17:00:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Column2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1280]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: cont3-col-2]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@198d6542]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlgSpanColumnWidthTest -->
        <test-method status="PASS" signature="xlgSpanColumnWidthTest(java.lang.String, int, int, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="xlgSpanColumnWidthTest" duration-ms="1372" started-at="2017-02-24T17:00:53Z" data-provider="XLG Span Column Width Test Data" finished-at="2017-02-24T17:00:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Column3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1280]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: cont3-col-3]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@5e403b4a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlgSpanColumnWidthTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:53Z" finished-at="2017-02-24T17:00:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:53Z" finished-at="2017-02-24T17:00:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xlgSpanColumnWidthTest(java.lang.String,int,int,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:54Z" finished-at="2017-02-24T17:00:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xlgSpanColumnWidthTest(java.lang.String,int,int,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xlgSpanColumnWidthTest(java.lang.String, int, int, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="xlgSpanColumnWidthTest" duration-ms="1964" started-at="2017-02-24T17:00:54Z" data-provider="XLG Span Column Width Test Data" finished-at="2017-02-24T17:00:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Column4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1280]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: cont3-col-4]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@5117dd67]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlgSpanColumnWidthTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:54Z" finished-at="2017-02-24T17:00:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:56Z" finished-at="2017-02-24T17:00:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="xlgSpanColumnWidthTest(java.lang.String, int, int, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="xlgSpanColumnWidthTest" duration-ms="1447" started-at="2017-02-24T17:00:56Z" data-provider="XLG Span Column Width Test Data" finished-at="2017-02-24T17:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Column5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1280]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: cont3-col-5]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@5be49b60]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlgSpanColumnWidthTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:56Z" finished-at="2017-02-24T17:00:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xlgSpanColumnWidthTest(java.lang.String,int,int,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xlgSpanColumnWidthTest(java.lang.String, int, int, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="xlgSpanColumnWidthTest" duration-ms="1234" started-at="2017-02-24T17:00:58Z" data-provider="XLG Span Column Width Test Data" finished-at="2017-02-24T17:00:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Column6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1280]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: cont3-col-6]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@2931522b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlgSpanColumnWidthTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:58Z" finished-at="2017-02-24T17:00:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:58Z" finished-at="2017-02-24T17:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xlgSpanColumnWidthTest(java.lang.String,int,int,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xlgSpanColumnWidthTest(java.lang.String, int, int, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="xlgSpanColumnWidthTest" duration-ms="1297" started-at="2017-02-24T17:00:59Z" data-provider="XLG Span Column Width Test Data" finished-at="2017-02-24T17:01:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Column7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1280]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: cont3-col-7]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@7674b62c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlgSpanColumnWidthTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:59Z" finished-at="2017-02-24T17:00:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xlgSpanColumnWidthTest(java.lang.String,int,int,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:00:59Z" finished-at="2017-02-24T17:00:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:01:00Z" finished-at="2017-02-24T17:01:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="xlgSpanColumnWidthTest(java.lang.String, int, int, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="xlgSpanColumnWidthTest" duration-ms="1226" started-at="2017-02-24T17:01:00Z" data-provider="XLG Span Column Width Test Data" finished-at="2017-02-24T17:01:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Column8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1280]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: cont3-col-8]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@19e7a160]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlgSpanColumnWidthTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:00Z" finished-at="2017-02-24T17:01:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xlgSpanColumnWidthTest(java.lang.String,int,int,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:02Z" finished-at="2017-02-24T17:01:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xlgSpanColumnWidthTest(java.lang.String,int,int,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xlgSpanColumnWidthTest(java.lang.String, int, int, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="xlgSpanColumnWidthTest" duration-ms="1115" started-at="2017-02-24T17:01:02Z" data-provider="XLG Span Column Width Test Data" finished-at="2017-02-24T17:01:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Column9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1280]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: cont3-col-9]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@662706a7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlgSpanColumnWidthTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:02Z" finished-at="2017-02-24T17:01:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:01:03Z" finished-at="2017-02-24T17:01:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="xlgSpanColumnWidthTest(java.lang.String, int, int, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="xlgSpanColumnWidthTest" duration-ms="1231" started-at="2017-02-24T17:01:03Z" data-provider="XLG Span Column Width Test Data" finished-at="2017-02-24T17:01:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Column10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1280]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: cont3-col-10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@45a4b042]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlgSpanColumnWidthTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:03Z" finished-at="2017-02-24T17:01:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xlgSpanColumnWidthTest(java.lang.String,int,int,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:04Z" finished-at="2017-02-24T17:01:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="xlgSpanColumnWidthTest(java.lang.String, int, int, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="xlgSpanColumnWidthTest" duration-ms="1212" started-at="2017-02-24T17:01:04Z" data-provider="XLG Span Column Width Test Data" finished-at="2017-02-24T17:01:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Column11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1280]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: cont3-col-11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@16b2bb0c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlgSpanColumnWidthTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:04Z" finished-at="2017-02-24T17:01:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xlgSpanColumnWidthTest(java.lang.String,int,int,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:01:05Z" finished-at="2017-02-24T17:01:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="xlgSpanColumnWidthTest(java.lang.String, int, int, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="xlgSpanColumnWidthTest" duration-ms="1270" started-at="2017-02-24T17:01:05Z" data-provider="XLG Span Column Width Test Data" finished-at="2017-02-24T17:01:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Column12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1280]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[By.id: cont3-col-12]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@327af41b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xlgSpanColumnWidthTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:05Z" finished-at="2017-02-24T17:01:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xlgSpanColumnWidthTest(java.lang.String,int,int,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:06Z" finished-at="2017-02-24T17:01:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="xsSpanColumnWidthTest(java.lang.String, java.lang.String, int, int, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="xsSpanColumnWidthTest" duration-ms="1228" started-at="2017-02-24T17:01:06Z" data-provider="XS Span Column Width Test Data" finished-at="2017-02-24T17:01:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Column1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[width]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[479]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[By.id: cont3-col-1]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@6cb6decd]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsSpanColumnWidthTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:06Z" finished-at="2017-02-24T17:01:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xsSpanColumnWidthTest(java.lang.String,java.lang.String,int,int,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xsSpanColumnWidthTest(java.lang.String, java.lang.String, int, int, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="xsSpanColumnWidthTest" duration-ms="1144" started-at="2017-02-24T17:01:08Z" data-provider="XS Span Column Width Test Data" finished-at="2017-02-24T17:01:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Column2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[width]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[479]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[By.id: cont3-col-2]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@c7045b9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsSpanColumnWidthTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:08Z" finished-at="2017-02-24T17:01:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xsSpanColumnWidthTest(java.lang.String,java.lang.String,int,int,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:08Z" finished-at="2017-02-24T17:01:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:01:09Z" finished-at="2017-02-24T17:01:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xsSpanColumnWidthTest(java.lang.String,java.lang.String,int,int,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:09Z" finished-at="2017-02-24T17:01:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="xsSpanColumnWidthTest(java.lang.String, java.lang.String, int, int, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="xsSpanColumnWidthTest" duration-ms="2042" started-at="2017-02-24T17:01:09Z" data-provider="XS Span Column Width Test Data" finished-at="2017-02-24T17:01:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Column3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[width]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[479]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[By.id: cont3-col-3]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@f99f5e0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsSpanColumnWidthTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:01:11Z" finished-at="2017-02-24T17:01:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="xsSpanColumnWidthTest(java.lang.String, java.lang.String, int, int, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="xsSpanColumnWidthTest" duration-ms="2654" started-at="2017-02-24T17:01:11Z" data-provider="XS Span Column Width Test Data" finished-at="2017-02-24T17:01:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Column4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[width]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[479]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[By.id: cont3-col-4]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@6aa61224]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsSpanColumnWidthTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:11Z" finished-at="2017-02-24T17:01:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xsSpanColumnWidthTest(java.lang.String,java.lang.String,int,int,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:14Z" finished-at="2017-02-24T17:01:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:14Z" finished-at="2017-02-24T17:01:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xsSpanColumnWidthTest(java.lang.String,java.lang.String,int,int,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xsSpanColumnWidthTest(java.lang.String, java.lang.String, int, int, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="xsSpanColumnWidthTest" duration-ms="1215" started-at="2017-02-24T17:01:14Z" data-provider="XS Span Column Width Test Data" finished-at="2017-02-24T17:01:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Column5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[width]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[479]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[By.id: cont3-col-5]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@30bce90b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsSpanColumnWidthTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:01:15Z" finished-at="2017-02-24T17:01:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="xsSpanColumnWidthTest(java.lang.String, java.lang.String, int, int, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="xsSpanColumnWidthTest" duration-ms="1319" started-at="2017-02-24T17:01:15Z" data-provider="XS Span Column Width Test Data" finished-at="2017-02-24T17:01:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Column6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[width]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[479]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[By.id: cont3-col-6]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@3e6f3f28]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsSpanColumnWidthTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:15Z" finished-at="2017-02-24T17:01:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xsSpanColumnWidthTest(java.lang.String,java.lang.String,int,int,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:01:16Z" finished-at="2017-02-24T17:01:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:16Z" finished-at="2017-02-24T17:01:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xsSpanColumnWidthTest(java.lang.String,java.lang.String,int,int,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xsSpanColumnWidthTest(java.lang.String, java.lang.String, int, int, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="xsSpanColumnWidthTest" duration-ms="1259" started-at="2017-02-24T17:01:16Z" data-provider="XS Span Column Width Test Data" finished-at="2017-02-24T17:01:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Column7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[width]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[479]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[By.id: cont3-col-7]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@7e19ebf0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsSpanColumnWidthTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:17Z" finished-at="2017-02-24T17:01:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:01:17Z" finished-at="2017-02-24T17:01:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xsSpanColumnWidthTest(java.lang.String,java.lang.String,int,int,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xsSpanColumnWidthTest(java.lang.String, java.lang.String, int, int, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="xsSpanColumnWidthTest" duration-ms="1511" started-at="2017-02-24T17:01:17Z" data-provider="XS Span Column Width Test Data" finished-at="2017-02-24T17:01:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Column8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[width]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[479]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[By.id: cont3-col-8]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@2474f125]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsSpanColumnWidthTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:01:19Z" finished-at="2017-02-24T17:01:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xsSpanColumnWidthTest(java.lang.String,java.lang.String,int,int,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:19Z" finished-at="2017-02-24T17:01:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="xsSpanColumnWidthTest(java.lang.String, java.lang.String, int, int, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="xsSpanColumnWidthTest" duration-ms="1032" started-at="2017-02-24T17:01:19Z" data-provider="XS Span Column Width Test Data" finished-at="2017-02-24T17:01:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Column9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[width]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[479]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[By.id: cont3-col-9]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@7357a011]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsSpanColumnWidthTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-02-24T17:01:20Z" finished-at="2017-02-24T17:01:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xsSpanColumnWidthTest(java.lang.String,java.lang.String,int,int,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:20Z" finished-at="2017-02-24T17:01:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="xsSpanColumnWidthTest(java.lang.String, java.lang.String, int, int, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="xsSpanColumnWidthTest" duration-ms="1392" started-at="2017-02-24T17:01:20Z" data-provider="XS Span Column Width Test Data" finished-at="2017-02-24T17:01:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Column10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[width]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[479]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[By.id: cont3-col-10]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@3406472c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsSpanColumnWidthTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:21Z" finished-at="2017-02-24T17:01:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xsSpanColumnWidthTest(java.lang.String,java.lang.String,int,int,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="xsSpanColumnWidthTest(java.lang.String, java.lang.String, int, int, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="xsSpanColumnWidthTest" duration-ms="1064" started-at="2017-02-24T17:01:21Z" data-provider="XS Span Column Width Test Data" finished-at="2017-02-24T17:01:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Column11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[width]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[479]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[By.id: cont3-col-11]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@5717c37]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsSpanColumnWidthTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:21Z" finished-at="2017-02-24T17:01:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="xsSpanColumnWidthTest(java.lang.String, java.lang.String, int, int, org.openqa.selenium.By, [Ljava.lang.String;)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="xsSpanColumnWidthTest" duration-ms="973" started-at="2017-02-24T17:01:22Z" data-provider="XS Span Column Width Test Data" finished-at="2017-02-24T17:01:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Column12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[width]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[479]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[800]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[By.id: cont3-col-12]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[[Ljava.lang.String;@68f4865]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsSpanColumnWidthTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:22Z" finished-at="2017-02-24T17:01:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:22Z" finished-at="2017-02-24T17:01:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void elementsTests.GridTest.xsSpanColumnWidthTest(java.lang.String,java.lang.String,int,int,org.openqa.selenium.By,java.lang.String[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:elementsTests.GridTest@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-02-24T17:01:23Z" finished-at="2017-02-24T17:01:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="tearDown(java.lang.String)[pri:0, instance:elementsTests.GridTest@35d176f7]" name="tearDown" is-config="true" duration-ms="1172" started-at="2017-02-24T17:01:23Z" finished-at="2017-02-24T17:01:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[off]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- elementsTests.GridTest -->
    </test> <!-- Elements and Origami Tests -->
  </suite> <!-- Desktop Regression Test Suite -->
</testng-results>